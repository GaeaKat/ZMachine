Resident data ends at 59a8, program starts at 59a8, file ends at 27c54

Starting analysis pass at address 59a8

End of analysis pass, low address = 59a8, high address = 1f7eb

[Start of code]

Main routine R0001, 0 locals

       CALL_VS         R0195 -> Gef
       QUIT            

Routine R0002, 0 locals

       PRINT_PADDR     S006
       RTRUE           

Routine R0003, 0 locals

       PRINT_PADDR     S007
       RTRUE           

Routine R0004, 2 locals

       RFALSE          

Routine R0005, 1 local

       LOADW           #32,#00 -> G14
       LOADW           #10,#00 -> -(SP)
       AND             (SP)+,#01 -> G7a
       LOADW           #08,#00 -> G7b
       LOADB           G7b,#00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADB           G7b,(SP)+ -> G7c
       LOADB           G7b,#00 -> -(SP)
       ADD             G7b,(SP)+ -> -(SP)
       ADD             (SP)+,#04 -> G7b
       SUB             G7b,#02 -> -(SP)
       LOADW           (SP)+,#00 -> -(SP)
       MUL             (SP)+,G7c -> -(SP)
       ADD             G7b,(SP)+ -> G7d
       STOREB          #1e42,#00,#78
       STOREB          #1ebd,#00,#78
       STOREB          #1f38,#00,#78
       STOREB          #1fb3,#00,#0f
       STOREB          #1ff4,#00,#0f
       SUB             #0142,#ff -> G78
       RTRUE           

Routine R0006, 0 locals

       RFALSE          

Routine R0007, 1 local

       PRINT           "Release "
       LOADW           #02,#00 -> -(SP)
       AND             (SP)+,#03ff -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " / Serial number "
       STORE           L00,#00
L0001: JL              L00,#06 [FALSE] L0002
       LOADB           #12,L00 -> -(SP)
       PRINT_CHAR      (SP)+
       INC             L00
       JUMP            L0001
L0002: RTRUE           

Routine R0008, 2 locals

       JZ              L00 [TRUE] L0001
       SET_WINDOW      L00
L0001: READ_CHAR       #01 -> L01
       RET             L01

Routine R0009, 2 locals

       READ_CHAR       #01,L00,R0010 -> L01
       RET             L01

Routine R0010, 0 locals

       RTRUE           

Routine R0011, 3 locals

       STORE           Gec,L00
       STOREB          Gec,#01,#00
       READ            Gec,L01 -> Gef
       STORE           L02,#00
       RTRUE           

Routine R0012, 3 locals

       STORE           L02,#00
L0001: JL              L02,#78 [FALSE] L0002
       LOADB           L01,L02 -> -(SP)
       STOREB          L00,L02,(SP)+
       INC             L02
       JUMP            L0001
L0002: RTRUE           

Routine R0013, 5 locals

       OUTPUT_STREAM   REDIRECT_ENABLE,L00
       CALL_VS         R1288 (L02) -> -(SP)
       PULL            Gef
       JE              Gef,#04 [FALSE] L0001
       PRINT_PADDR     L02
       JUMP            L0004
L0001: JE              Gef,#03 [FALSE] L0002
       CALL_VN         L02 (L03,L04)
       JUMP            L0004
L0002: JE              Gef,#02,#01 [FALSE] L0004
       JZ              L03 [TRUE] L0003
       CALL_VN         R0967 (L02,L03,#01)
       JUMP            L0004
L0003: CALL_2N         R0977 (L02)
L0004: OUTPUT_STREAM   #fffd
       LOADW           L00,#00 -> -(SP)
       JG              (SP)+,L01 [FALSE] L0005
       PRINT_PADDR     S010
L0005: LOADW           L00,#00 -> -(SP)
       RET_POPPED      

Routine R0014, 2 locals

       LOADB           L00,#01 -> -(SP)
       ADD             #02,(SP)+ -> -(SP)
       STOREB          L00,(SP)+,#00
       TOKENISE        L00,L01
       RTRUE           

Routine R0015, 4 locals

       STORE           L02,#1e42
       LOADB           L02,#01 -> L03
       LOADB           L02,#00 -> -(SP)
       JG              L03,(SP)+ [FALSE] L0001
       LOADB           L02,#00 -> L03
L0001: ADD             L03,#02 -> L03
L0002: JG              L03,L00 [FALSE] L0003
       SUB             L03,#01 -> -(SP)
       LOADB           L02,(SP)+ -> -(SP)
       STOREB          L02,L03,(SP)+
       DEC             L03
       JUMP            L0002
L0003: STOREB          L02,L00,L01
       LOADB           L02,#00 -> -(SP)
       LOADB           L02,#01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0004
       STORE           Gef,L02
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
L0004: RTRUE           

Routine R0016, 1 local

       CALL_VS         R0118 (L00,G7b) -> -(SP)
       JL              (SP)+,#00 [TRUE] RTRUE
       CALL_VS         R0118 (L00,G7d) -> -(SP)
       JL              (SP)+,#00 [FALSE] RTRUE
       SUB             L00,G7b -> -(SP)
       MOD             (SP)+,G7c -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0017, 1 local

       LOADW           #08,#00 -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       SUB             L00,(SP)+ -> -(SP)
       DIV             (SP)+,#09 -> -(SP)
       RET_POPPED      

Routine R0018, 1 local

       MUL             #09,L00 -> -(SP)
       LOADW           #08,#00 -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0019, 1 local

       LOADW           #0e,#00 -> -(SP)
       LOADW           (SP)+,L00 -> -(SP)
       RET_POPPED      

Routine R0020, 3 locals

       LOADW           #08,#00 -> L01
       STORE           L02,#00
L0001: ADD             L01,#05 -> -(SP)
       LOADW           (SP)+,#00 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0003
       SUB             #ff,L00 -> -(SP)
       MUL             L02,#09 -> -(SP)
       ADD             (SP)+,#0e -> -(SP)
       LOADB           L01,(SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0002
       PRINT           "'"
       CALL_2S         R0018 (L02) -> -(SP)
       PRINT_ADDR      (SP)+
       PRINT           "' "
L0002: INC             L02
       JUMP            L0001
L0003: RTRUE           

Routine R0021, 1 local

       JG              L00,#00 [FALSE] L0001
       SUB             #00,L00 -> L00
L0001: RANDOM          L00 -> L00
       RTRUE           

Routine R0022, 1 local

       RFALSE          

Routine R0023, 1 local

       RTRUE           

Routine R0024, 1 local

       RTRUE           

Routine R0025, 1 local

       RTRUE           

Routine R0026, 1 local

       STORE           Gef,L00
       JE              Gef,#00,#06 [FALSE] L0001
       SET_TEXT_STYLE  ROMAN
       JUMP            L0002
L0001: JE              Gef,#03,#04,#05 [FALSE] L0002
       SET_TEXT_STYLE  BOLDFACE
L0002: RTRUE           

Routine R0027, 1 local

       STORE           Gef,L00
       JL              Gef,#41 [TRUE] L0001
       JG              Gef,#5a [TRUE] L0001
       ADD             L00,#20 -> L00
       JUMP            L0012
L0001: JE              Gef,#ca,#cc,#d4 [TRUE] L0002
       JE              Gef,#d6,#dd [FALSE] L0003
L0002: DEC             L00
       JUMP            L0012
L0003: JE              Gef,#d9,#da [FALSE] L0004
       SUB             L00,#02 -> L00
       JUMP            L0012
L0004: JL              Gef,#9e [TRUE] L0005
       JG              Gef,#a0 [FALSE] L0007
L0005: JL              Gef,#a7 [TRUE] L0006
       JG              Gef,#a9 [FALSE] L0007
L0006: JL              Gef,#d0 [TRUE] L0008
       JG              Gef,#d2 [TRUE] L0008
L0007: SUB             L00,#03 -> L00
       JUMP            L0012
L0008: JL              Gef,#ba [TRUE] L0009
       JG              Gef,#be [FALSE] L0010
L0009: JL              Gef,#c4 [TRUE] L0011
       JG              Gef,#c8 [TRUE] L0011
L0010: SUB             L00,#05 -> L00
       JUMP            L0012
L0011: JL              Gef,#af [TRUE] L0012
       JG              Gef,#b4 [TRUE] L0012
       SUB             L00,#06 -> L00
L0012: RET             L00

Routine R0028, 1 local

       STORE           Gef,L00
       JL              Gef,#61 [TRUE] L0001
       JG              Gef,#7a [TRUE] L0001
       SUB             L00,#20 -> L00
       JUMP            L0012
L0001: JE              Gef,#c9,#cb,#d3 [TRUE] L0002
       JE              Gef,#d5,#dc [FALSE] L0003
L0002: INC             L00
       JUMP            L0012
L0003: JE              Gef,#d7,#d8 [FALSE] L0004
       ADD             L00,#02 -> L00
       JUMP            L0012
L0004: JL              Gef,#9b [TRUE] L0005
       JG              Gef,#9d [FALSE] L0007
L0005: JL              Gef,#a4 [TRUE] L0006
       JG              Gef,#a6 [FALSE] L0007
L0006: JL              Gef,#cd [TRUE] L0008
       JG              Gef,#cf [TRUE] L0008
L0007: ADD             L00,#03 -> L00
       JUMP            L0012
L0008: JL              Gef,#b5 [TRUE] L0009
       JG              Gef,#b9 [FALSE] L0010
L0009: JL              Gef,#bf [TRUE] L0011
       JG              Gef,#c3 [TRUE] L0011
L0010: ADD             L00,#05 -> L00
       JUMP            L0012
L0011: JL              Gef,#a9 [TRUE] L0012
       JG              Gef,#ae [TRUE] L0012
       ADD             L00,#06 -> L00
L0012: RET             L00

Routine R0029, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       ERASE_WINDOW    #ffff
       STORE           G6e,#00
       JUMP            L0003
L0001: JE              Gef,#01 [FALSE] L0002
       ERASE_WINDOW    #01
       JUMP            L0003
L0002: JE              Gef,#02 [FALSE] L0003
       ERASE_WINDOW    #00
L0003: RTRUE           

Routine R0030, 0 locals

       LOADB           #21,#00 -> -(SP)
       RET_POPPED      

Routine R0031, 0 locals

       LOADB           #20,#00 -> -(SP)
       RET_POPPED      

Routine R0032, 3 locals

       JZ              G6c [TRUE] L0005
       JZ              L00 [TRUE] L0005
       JZ              L01 [TRUE] L0005
       JZ              L02 [FALSE] L0001
       STORE           G6a,L01
       STORE           G6b,L00
L0001: JE              L02,#01 [FALSE] L0002
       STORE           G6a,L00
       STORE           G6b,L01
L0002: JE              L02,#00,#02 [FALSE] L0003
       STORE           G68,L00
       STORE           G69,L01
L0003: JZ              G6d [TRUE] L0004
       SET_COLOUR      G6a,G6b
       JUMP            L0005
L0004: SET_COLOUR      G68,G69
L0005: RTRUE           

Routine R0033, 0 locals

       JZ              G6c [TRUE] L0001
       CALL_VN         R0032 (G68,G69,#02)
       CALL_VN2        R0032 (G6a,G6b,#01,#01)
       CALL_1N         R0029
L0001: RTRUE           

Routine R0034, 0 locals

       JZ              G6d [TRUE] L0003
       JZ              G6c [TRUE] L0001
       JG              G6b,#01 [FALSE] L0001
       SET_COLOUR      G68,G69
       JUMP            L0002
L0001: SET_TEXT_STYLE  ROMAN
L0002: SET_WINDOW      #00
L0003: STORE           G6d,#00
       RTRUE           

Routine R0035, 2 locals

       JZ              G6d [FALSE] L0002
       SET_WINDOW      #01
       JZ              G6c [TRUE] L0001
       JG              G6b,#01 [FALSE] L0001
       SET_COLOUR      G6a,G6b
       JUMP            L0002
L0001: SET_TEXT_STYLE  REVERSE
L0002: JZ              L00 [FALSE] L0003
       STORE           L00,#01
       STORE           L01,#01
L0003: SET_CURSOR      L00,L01
       STORE           G6d,#01
       RTRUE           

Routine R0036, 1 local

       JE              G6e,L00 [TRUE] L0001
       SPLIT_WINDOW    L00
L0001: STORE           G6e,L00
       RTRUE           

Routine R0037, 1 local

       RESTORE_UNDO    -> L00
       RET             L00

Routine R0038, 1 local

       SAVE_UNDO       -> L00
       RET             L00

Routine R0039, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       CALL_VN         R0120 (#00,#02)
       CALL_1S         R0187 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       QUIT            
L0001: RTRUE           

Routine R0040, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       CALL_VN         R0120 (#01,#01)
       CALL_1S         R0187 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RESTART         
       CALL_VN         R0120 (#01,#02)
L0001: RTRUE           

Routine R0041, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       RESTORE         -> Gef
       JE              Gef,#02 [TRUE] L0001
       CALL_VS         R0120 (#02,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0120 (#02,#02)
       RTRUE           

Routine R0042, 1 local

       JE              G28,G22 [FALSE] RFALSE
       SAVE            -> L00
       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       CALL_VN         R0120 (#03,#01)
       JUMP            L0003
L0001: JE              Gef,#01 [FALSE] L0002
       CALL_VN         R0120 (#03,#02)
       JUMP            L0003
L0002: JE              Gef,#02 [FALSE] L0003
       CALL_VN         R0120 (#02,#02)
L0003: RTRUE           

Routine R0043, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       VERIFY          [TRUE] L0001
       JUMP            L0002
L0001: CALL_VS         R0120 (#04,#01) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0120 (#04,#02)
       RTRUE           

Routine R0044, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> G7a
       JZ              G7a [TRUE] L0001
       CALL_VS         R0120 (#05,#01) -> -(SP)
       RET_POPPED      
L0001: OUTPUT_STREAM   SCRIPTING_ENABLE
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#05,#03) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0120 (#05,#02)
       CALL_1N         R0328
       STORE           G7a,#01
       RTRUE           

Routine R0045, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> G7a
       JZ              G7a [FALSE] L0001
       CALL_VS         R0120 (#06,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0120 (#06,#02)
       OUTPUT_STREAM   #fffe
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#06,#03) -> -(SP)
       RET_POPPED      
L0002: STORE           G7a,#00
       RTRUE           

Routine R0046, 1 local

       JE              G28,G22 [FALSE] RFALSE
       CALL_1N         R0962
       PRINT           "Identification number: "
       STORE           L00,#06
L0001: LOADB           #1ace,#00 -> -(SP)
       JG              L00,(SP)+ [TRUE] L0002
       LOADB           #1ace,L00 -> -(SP)
       PRINT_CHAR      (SP)+
       INC             L00
       JUMP            L0001
L0002: PRINT           "
"
       STORE           L00,#00
       JG              G14,#00 [FALSE] L0003
       PRINT           "Standard interpreter "
       DIV             G14,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "."
       MOD             G14,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " ("
       LOADB           #1e,#00 -> -(SP)
       PRINT_NUM       (SP)+
       LOADB           #1f,#00 -> -(SP)
       PRINT_CHAR      (SP)+
       PRINT           ") / "
       JUMP            L0004
L0003: PRINT           "Interpreter "
       LOADB           #1e,#00 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " Version "
       LOADB           #1f,#00 -> -(SP)
       PRINT_CHAR      (SP)+
       PRINT           " / "
L0004: PRINT           "Library serial number "
       PRINT_PADDR     S002
       PRINT           "
"
       CALL_1N         R0002
       STORE           G05,#01
       RTRUE           

Routine R0047, 0 locals

       LOADW           #4d32,G2b -> -(SP)
       CALL_1N         (SP)+
       RTRUE           

Routine R0048, 0 locals

       RTRUE           

Routine R0049, 0 locals

       RTRUE           

Routine R0050, 0 locals

       RTRUE           

Routine R0051, 6 locals

       JL              L00,#01 [TRUE] L0002
       JG              L00,G00 [TRUE] L0002
       INC             L05
       JE              L01,#000e [FALSE] L0001
       TEST_ATTR       L00,#20 [TRUE] RTRUE
       RFALSE          
L0001: JE              L01,#000f [FALSE] L0002
       TEST_ATTR       L00,#21 [TRUE] RTRUE
       RFALSE          
L0002: JE              L01,#02,#01 [TRUE] L0004
       JE              L01,#03,#04 [TRUE] L0006
       JIN             L01,"Class" [FALSE] L0007
       JZ              L05 [TRUE] RFALSE
       GET_PROP_ADDR   L00,#02 -> L03
       JZ              L03 [TRUE] RFALSE
       GET_PROP_LEN    L03 -> L04
       DIV             L04,#02 -> L04
L0003: LOADW           L03,L02 -> -(SP)
       JE              (SP)+,L01 [TRUE] RTRUE
       INC             L02
       JL              L02,L04 [TRUE] L0003
       RFALSE          
L0004: JZ              L05 [TRUE] RFALSE
       JE              L01,#02 [TRUE] L0005
       JG              L00,#04 [FALSE] RTRUE
       JIN             L00,"Class" [TRUE] RTRUE
       RFALSE          
L0005: JG              L00,#04 [FALSE] RFALSE
       JIN             L00,"Class" [TRUE] RFALSE
       RTRUE           
L0006: JZ              L05 [FALSE] RFALSE
       CALL_2S         R1287 (L00) -> -(SP)
       INC             (SP)+
       JE              (SP)+,L01 [TRUE] RTRUE
       RFALSE          
L0007: CALL_VN         R1286 (S011,L01,#ffff)
       RFALSE          

Routine R0052, 4 locals

       JE              L00,L01 [TRUE] RFALSE
       JL              L00,#00 [TRUE] L0002
       JL              L01,#00 [TRUE] L0001
       JG              L00,L01 [TRUE] RTRUE
       RET             #ffff
L0001: RET             #ffff
L0002: JL              L01,#00 [FALSE] RTRUE
       JG              L00,L01 [TRUE] RTRUE
       RET             #ffff

Routine R0053, 2 locals

       LOADW           L00,L01 -> -(SP)
       RET             (SP)+

Routine R0054, 2 locals

       JZ              L00 [FALSE] L0001
       PRINT           "zero"
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       PRINT           "minus "
       SUB             #00,L00 -> L00
L0002: JL              L00,#03e8 [TRUE] L0004
       JE              L01,#01 [FALSE] L0003
       PRINT           ", "
L0003: DIV             L00,#03e8 -> -(SP)
       CALL_2N         R0054 ((SP)+)
       PRINT           " thousand"
       MOD             L00,#03e8 -> L00
       STORE           L01,#01
L0004: JL              L00,#64 [TRUE] L0006
       JE              L01,#01 [FALSE] L0005
       PRINT           ", "
L0005: DIV             L00,#64 -> -(SP)
       CALL_2N         R0054 ((SP)+)
       PRINT           " hundred"
       MOD             L00,#64 -> L00
       STORE           L01,#01
L0006: JZ              L00 [TRUE] RFALSE
       JE              L01,#01 [FALSE] L0007
       PRINT           " and "
L0007: STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0008
       PRINT           "one"
       JUMP            L0035
L0008: JE              Gef,#02 [FALSE] L0009
       PRINT           "two"
       JUMP            L0035
L0009: JE              Gef,#03 [FALSE] L0010
       PRINT           "three"
       JUMP            L0035
L0010: JE              Gef,#04 [FALSE] L0011
       PRINT           "four"
       JUMP            L0035
L0011: JE              Gef,#05 [FALSE] L0012
       PRINT           "five"
       JUMP            L0035
L0012: JE              Gef,#06 [FALSE] L0013
       PRINT           "six"
       JUMP            L0035
L0013: JE              Gef,#07 [FALSE] L0014
       PRINT           "seven"
       JUMP            L0035
L0014: JE              Gef,#08 [FALSE] L0015
       PRINT           "eight"
       JUMP            L0035
L0015: JE              Gef,#09 [FALSE] L0016
       PRINT           "nine"
       JUMP            L0035
L0016: JE              Gef,#0a [FALSE] L0017
       PRINT           "ten"
       JUMP            L0035
L0017: JE              Gef,#0b [FALSE] L0018
       PRINT           "eleven"
       JUMP            L0035
L0018: JE              Gef,#0c [FALSE] L0019
       PRINT           "twelve"
       JUMP            L0035
L0019: JE              Gef,#0d [FALSE] L0020
       PRINT           "thirteen"
       JUMP            L0035
L0020: JE              Gef,#0e [FALSE] L0021
       PRINT           "fourteen"
       JUMP            L0035
L0021: JE              Gef,#0f [FALSE] L0022
       PRINT           "fifteen"
       JUMP            L0035
L0022: JE              Gef,#10 [FALSE] L0023
       PRINT           "sixteen"
       JUMP            L0035
L0023: JE              Gef,#11 [FALSE] L0024
       PRINT           "seventeen"
       JUMP            L0035
L0024: JE              Gef,#12 [FALSE] L0025
       PRINT           "eighteen"
       JUMP            L0035
L0025: JE              Gef,#13 [FALSE] L0026
       PRINT           "nineteen"
       JUMP            L0035
L0026: JL              Gef,#14 [TRUE] L0035
       JG              Gef,#63 [TRUE] L0035
       DIV             L00,#0a -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0027
       PRINT           "twenty"
       JUMP            L0034
L0027: JE              Gef,#03 [FALSE] L0028
       PRINT           "thirty"
       JUMP            L0034
L0028: JE              Gef,#04 [FALSE] L0029
       PRINT           "forty"
       JUMP            L0034
L0029: JE              Gef,#05 [FALSE] L0030
       PRINT           "fifty"
       JUMP            L0034
L0030: JE              Gef,#06 [FALSE] L0031
       PRINT           "sixty"
       JUMP            L0034
L0031: JE              Gef,#07 [FALSE] L0032
       PRINT           "seventy"
       JUMP            L0034
L0032: JE              Gef,#08 [FALSE] L0033
       PRINT           "eighty"
       JUMP            L0034
L0033: JE              Gef,#09 [FALSE] L0034
       PRINT           "ninety"
L0034: MOD             L00,#0a -> -(SP)
       JZ              (SP)+ [TRUE] L0035
       PRINT           "-"
       MOD             L00,#0a -> -(SP)
       CALL_2N         R0054 ((SP)+)
L0035: RTRUE           

Routine R0055, 3 locals

       MOD             L00,#0c -> L02
       JZ              L02 [FALSE] L0001
       STORE           L02,#0c
L0001: JL              L02,#0a [FALSE] L0002
       PRINT           " "
L0002: PRINT_NUM       L02
       PRINT           ":"
       DIV             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       MOD             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       DIV             L00,#0c -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       PRINT           " pm"
       JUMP            L0004
L0003: PRINT           " am"
L0004: RTRUE           

Routine R0056, 1 local

       CALL_2N         R0977 (L00)
       RTRUE           

Routine R0057, 0 locals

       RTRUE           

Routine R0058, 1 local

       LOADB           L00,#00 -> -(SP)
       PULL            Gef
       JE              Gef,#61,#65,#69 [TRUE] L0001
       JE              Gef,#6f,#75,#41 [TRUE] L0001
       JE              Gef,#45,#49,#4f [TRUE] L0001
       JE              Gef,#55 [FALSE] L0002
L0001: RTRUE           
L0002: RFALSE          

Routine R0059, 1 local

       STORE           Gef,L00
       JE              Gef,"i","inv","inventory" [FALSE] L0001
       PRINT           "take inventory"
       JUMP            L0005
L0001: JE              Gef,"l" [FALSE] L0002
       PRINT           "look"
       JUMP            L0005
L0002: JE              Gef,"x" [FALSE] L0003
       PRINT           "examine"
       JUMP            L0005
L0003: JE              Gef,"z" [FALSE] L0004
       PRINT           "wait"
       JUMP            L0005
L0004: RFALSE          
L0005: RTRUE           

Routine R0060, 1 local

       JE              L00,"look","go","push" [TRUE] RTRUE
       JE              L00,"walk" [TRUE] RTRUE
       RFALSE          

Routine R0061, 1 local

       JE              L00,"long","short","normal" [TRUE] RTRUE
       JE              L00,"brief","full","verbose" [TRUE] RTRUE
       RFALSE          

Routine R0062, 1 local

       JE              L00,G22 [FALSE] L0001
       PRINT           "you"
       RTRUE           
L0001: TEST_ATTR       L00,#1a [FALSE] L0002
       PRINT           "those"
       RTRUE           
L0002: TEST_ATTR       L00,#01 [FALSE] L0004
       TEST_ATTR       L00,#18 [FALSE] L0003
       PRINT           "her"
       RTRUE           
L0003: TEST_ATTR       L00,#19 [TRUE] L0004
       PRINT           "him"
       RTRUE           
L0004: PRINT           "that"
       RTRUE           

Routine R0063, 1 local

       JE              L00,G22 [FALSE] L0001
       PRINT           "yourself"
       RTRUE           
L0001: TEST_ATTR       L00,#1a [FALSE] L0002
       PRINT           "them"
       RTRUE           
L0002: TEST_ATTR       L00,#01 [FALSE] L0004
       TEST_ATTR       L00,#18 [FALSE] L0003
       PRINT           "her"
       RTRUE           
L0003: TEST_ATTR       L00,#19 [TRUE] L0004
       PRINT           "him"
       RTRUE           
L0004: PRINT           "it"
       RTRUE           

Routine R0064, 1 local

       TEST_ATTR       L00,#1a [TRUE] L0001
       JE              L00,G22 [FALSE] L0002
L0001: PRINT           "are"
       JUMP            L0003
L0002: PRINT           "is"
L0003: RTRUE           

Routine R0065, 1 local

       TEST_ATTR       L00,#1a [TRUE] L0001
       JE              L00,G22 [FALSE] L0002
L0001: PRINT           "have"
       JUMP            L0003
L0002: PRINT           "has"
L0003: RTRUE           

Routine R0066, 1 local

       JE              L00,G22 [FALSE] L0001
       PRINT           "You"
       RTRUE           
L0001: TEST_ATTR       L00,#1a [FALSE] L0002
       PRINT           "Those"
       RTRUE           
L0002: TEST_ATTR       L00,#01 [FALSE] L0004
       TEST_ATTR       L00,#18 [FALSE] L0003
       PRINT           "She"
       RTRUE           
L0003: TEST_ATTR       L00,#19 [TRUE] L0004
       PRINT           "He"
       RTRUE           
L0004: PRINT           "That"
       RTRUE           

Routine R0067, 1 local

       JE              L00,G22 [FALSE] L0001
       PRINT           "You're"
       RTRUE           
L0001: TEST_ATTR       L00,#1a [FALSE] L0002
       PRINT           "They're"
       RTRUE           
L0002: TEST_ATTR       L00,#01 [FALSE] L0004
       TEST_ATTR       L00,#18 [FALSE] L0003
       PRINT           "She's"
       RTRUE           
L0003: TEST_ATTR       L00,#19 [TRUE] L0004
       PRINT           "He's"
       RTRUE           
L0004: PRINT           "That's"
       RTRUE           

Routine R0068, 1 local

       TEST_ATTR       L00,#1a [FALSE] L0001
       PRINT           "their"
       RTRUE           
L0001: TEST_ATTR       L00,#18 [FALSE] L0002
       PRINT           "her"
       RTRUE           
L0002: TEST_ATTR       L00,#19 [FALSE] L0003
       PRINT           "its"
       RTRUE           
L0003: PRINT           "his"
       RTRUE           

Routine R0069, 1 local

       TEST_ATTR       L00,#1a [FALSE] L0001
       PRINT           "theirselves"
       RTRUE           
L0001: TEST_ATTR       L00,#18 [FALSE] L0002
       PRINT           "herself"
       RTRUE           
L0002: TEST_ATTR       L00,#19 [FALSE] L0003
       PRINT           "itself"
       RTRUE           
L0003: PRINT           "himself"
       RTRUE           

Routine R0070, 3 locals

       STORE           G05,#01
       JE              Ge9,#07,#08 [FALSE] L0001
       PRINT_RET       "There is no reply."
L0001: JE              Ge9,#09 [FALSE] L0002
       PRINT_PADDR     S054
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#0a [FALSE] L0003
       PRINT_PADDR     S055
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#0b [FALSE] L0004
       PRINT_RET       "Nothing is on sale."
L0004: JE              Ge9,#0c [FALSE] L0005
       PRINT_PADDR     S056
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#0d [FALSE] L0012
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0006
       CALL_2N         R0067 (L01)
       PRINT_RET       " not something you can close."
L0006: JE              Gef,#02 [FALSE] L0007
       CALL_2N         R0067 (L01)
       PRINT_RET       " already closed."
L0007: JE              Gef,#03 [FALSE] L0008
       PRINT           "You close "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0008: JE              Gef,#04 [FALSE] L0009
       CALL_2N         R0976 (G28)
       PRINT           " closes "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
       JUMP            L0011
L0009: JE              Gef,#05 [FALSE] L0011
       CALL_2N         R0976 (L01)
       PRINT           " close"
       TEST_ATTR       L01,#1a [TRUE] L0010
       PRINT           "s"
L0010: PRINT           ".
"
L0011: RTRUE           
L0012: JE              Ge9,#0e [FALSE] L0015
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0013
       PRINT_PADDR     S057
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0013: JE              Gef,#02 [FALSE] L0014
       CALL_2N         R0976 (G28)
       PRINT           " looks at "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0014: RTRUE           
L0015: JE              Ge9,#0f [FALSE] L0016
       PRINT           "Cutting "
       CALL_2N         R0062 (L01)
       PRINT_RET       " up would achieve little."
L0016: JE              Ge9,#10 [FALSE] L0020
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0017
       PRINT           "You're not wearing "
       CALL_2N         R0062 (L01)
       PRINT_RET       "."
L0017: JE              Gef,#02 [FALSE] L0018
       PRINT           "You take off "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0018: JE              Gef,#03 [FALSE] L0019
       CALL_2N         R0976 (G28)
       PRINT           " takes off "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0019: RTRUE           
L0020: JE              Ge9,#11 [FALSE] L0021
       PRINT_PADDR     S058
       NEW_LINE        
       RTRUE           
L0021: JE              Ge9,#12 [FALSE] L0031
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0024
       TEST_ATTR       L01,#1a [FALSE] L0022
       CALL_2N         R0976 (L01)
       PRINT           " are "
       JUMP            L0023
L0022: CALL_2N         R0976 (L01)
       PRINT           " is "
L0023: PRINT_RET       "already here."
L0024: JE              Gef,#02 [FALSE] L0025
       PRINT           "You haven't got "
       CALL_2N         R0062 (L01)
       PRINT_RET       "."
L0025: JE              Gef,#03 [FALSE] L0026
       PRINT           "(first taking "
       CALL_2N         R0975 (L01)
       PRINT           " off)
"
       STORE           G05,#00
       RTRUE           
L0026: JE              Gef,#04 [FALSE] L0027
       PRINT_RET       "Dropped."
L0027: JE              Gef,#05 [FALSE] L0028
       PRINT           "There is no more room on "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0028: JE              Gef,#06 [FALSE] L0029
       PRINT           "There is no more room in "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0029: JE              Gef,#07 [FALSE] L0030
       CALL_2N         R0976 (G28)
       PRINT           " puts down "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0030: RTRUE           
L0031: JE              Ge9,#13 [FALSE] L0035
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0032
       CALL_2N         R0067 (L01)
       PRINT_RET       " plainly inedible."
L0032: JE              Gef,#02 [FALSE] L0033
       PRINT           "You eat "
       CALL_2N         R0975 (L01)
       PRINT_RET       ". Not bad."
L0033: JE              Gef,#03 [FALSE] L0034
       CALL_2N         R0976 (G28)
       PRINT           " eats "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0034: RTRUE           
L0035: JE              Ge9,#14 [FALSE] L0058
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0038
       PRINT           "But you're already "
       TEST_ATTR       L01,#11 [FALSE] L0036
       PRINT           "on "
       JUMP            L0037
L0036: PRINT           "in "
L0037: CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0038: JE              Gef,#02 [FALSE] L0044
       TEST_ATTR       L01,#1a [FALSE] L0039
       PRINT           "They're"
       JUMP            L0040
L0039: PRINT           "That's"
L0040: PRINT           " not something you can "
       STORE           Gef,G50
       JE              Gef,"stand" [FALSE] L0041
       PRINT_RET       "stand on."
L0041: JE              Gef,"sit" [FALSE] L0042
       PRINT_RET       "sit down on."
L0042: JE              Gef,"lie" [FALSE] L0043
       PRINT_RET       "lie down on."
L0043: PRINT_RET       "enter."
       JUMP            L0057
L0044: JE              Gef,#03 [FALSE] L0045
       PRINT           "You can't get into the closed "
       CALL_2N         R0977 (L01)
       PRINT_RET       "."
L0045: JE              Gef,#04 [FALSE] L0046
       PRINT_PADDR     S059
       NEW_LINE        
       RTRUE           
L0046: JE              Gef,#05 [FALSE] L0049
       PRINT           "You get "
       TEST_ATTR       L01,#11 [FALSE] L0047
       PRINT           "onto "
       JUMP            L0048
L0047: PRINT           "into "
L0048: CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0049: JE              Gef,#06 [FALSE] L0052
       PRINT           "(getting "
       TEST_ATTR       L01,#11 [FALSE] L0050
       PRINT           "off "
       JUMP            L0051
L0050: PRINT           "out of "
L0051: CALL_2N         R0975 (L01)
       PRINT           ")
"
       STORE           G05,#00
       RTRUE           
L0052: JE              Gef,#07 [FALSE] L0055
       TEST_ATTR       L01,#11 [FALSE] L0053
       PRINT           "(getting onto "
       CALL_2N         R0975 (L01)
       PRINT_RET       ")"
L0053: TEST_ATTR       L01,#04 [FALSE] L0054
       PRINT           "(getting into "
       CALL_2N         R0975 (L01)
       PRINT_RET       ")"
L0054: PRINT           "(entering "
       CALL_2N         R0975 (L01)
       PRINT_RET       ")"
L0055: JE              Gef,#08 [FALSE] L0056
       CALL_2N         R0976 (G28)
       PRINT           " gets into "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
       JUMP            L0057
L0056: JE              Gef,#09 [FALSE] L0057
       CALL_2N         R0976 (G28)
       PRINT           " gets onto "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0057: RTRUE           
L0058: JE              Ge9,#15 [FALSE] L0065
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0059
       PRINT_PADDR     S060
       NEW_LINE        
       RTRUE           
L0059: JE              Gef,#02 [FALSE] L0060
       PRINT           "You see nothing special about "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0060: JE              Gef,#03 [FALSE] L0062
       CALL_2N         R0976 (L01)
       PRINT           " "
       CALL_2N         R0064 (L01)
       PRINT           " currently switched "
       TEST_ATTR       L01,#0c [FALSE] L0061
       PRINT_RET       "on."
L0061: PRINT_RET       "off."
       JUMP            L0064
L0062: JE              Gef,#04 [FALSE] L0063
       CALL_2N         R0976 (G28)
       PRINT           " looks closely at "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
       JUMP            L0064
L0063: JE              Gef,#05 [FALSE] L0064
       PRINT_PADDR     S061
       NEW_LINE        
       RTRUE           
L0064: RTRUE           
L0065: JE              Ge9,#16 [FALSE] L0076
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0066
       PRINT_PADDR     S062
       NEW_LINE        
       RTRUE           
L0066: JE              Gef,#02 [FALSE] L0067
       PRINT           "You can't get out of the closed "
       CALL_2N         R0977 (L01)
       PRINT_RET       "."
L0067: JE              Gef,#03 [FALSE] L0070
       PRINT           "You get "
       TEST_ATTR       L01,#11 [FALSE] L0068
       PRINT           "off "
       JUMP            L0069
L0068: PRINT           "out of "
L0069: CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0070: JE              Gef,#04 [FALSE] L0073
       PRINT           "But you aren't "
       TEST_ATTR       L01,#11 [FALSE] L0071
       PRINT           "on "
       JUMP            L0072
L0071: PRINT           "in "
L0072: CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0073: JE              Gef,#05 [FALSE] L0074
       CALL_2N         R0976 (G28)
       PRINT           " gets off "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
       JUMP            L0075
L0074: JE              Gef,#06 [FALSE] L0075
       CALL_2N         R0976 (G28)
       PRINT           " gets out of "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0075: RTRUE           
L0076: JE              Ge9,#17 [FALSE] L0077
       PRINT           "But you aren't on "
       CALL_2N         R0975 (L01)
       PRINT_RET       " at the moment."
L0077: JE              Ge9,#18 [FALSE] L0089
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0078
       PRINT           "You aren't holding "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0078: JE              Gef,#02 [FALSE] L0079
       PRINT           "You juggle "
       CALL_2N         R0975 (L01)
       PRINT_PADDR     S063
       NEW_LINE        
       RTRUE           
L0079: JE              Gef,#03 [FALSE] L0082
       CALL_2N         R0976 (L01)
       TEST_ATTR       L01,#1a [FALSE] L0080
       PRINT           " don't"
       JUMP            L0081
L0080: PRINT           " doesn't"
L0081: PRINT_RET       " seem interested."
L0082: JE              Gef,#04 [FALSE] L0085
       CALL_2N         R0976 (L01)
       TEST_ATTR       L01,#1a [FALSE] L0083
       PRINT           " aren't"
       JUMP            L0084
L0083: PRINT           " isn't"
L0084: PRINT_RET       " able to receive things."
L0085: JE              Gef,#05 [FALSE] L0086
       PRINT           "You give "
       CALL_2N         R0975 (L01)
       PRINT           " to "
       CALL_2N         R0975 (G33)
       PRINT_RET       "."
L0086: JE              Gef,#06 [FALSE] L0087
       CALL_2N         R0976 (G28)
       PRINT           " gives "
       CALL_2N         R0975 (L01)
       PRINT           " to you.
"
       JUMP            L0088
L0087: JE              Gef,#07 [FALSE] L0088
       CALL_2N         R0976 (G28)
       PRINT           " gives "
       CALL_2N         R0975 (L01)
       PRINT           " to "
       CALL_2N         R0975 (G33)
       PRINT           ".
"
L0088: RTRUE           
L0089: JE              Ge9,#19 [FALSE] L0118
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0092
       PRINT           "You'll have to get "
       TEST_ATTR       L01,#11 [FALSE] L0090
       PRINT           "off "
       JUMP            L0091
L0090: PRINT           "out of "
L0091: CALL_2N         R0975 (L01)
       PRINT_RET       " first."
L0092: JE              Gef,#02 [FALSE] L0093
       PRINT_PADDR     G7e
       NEW_LINE        
       RTRUE           
L0093: JE              Gef,#06 [FALSE] L0095
       PRINT           "You can't, since "
       CALL_2N         R0975 (L01)
       TEST_ATTR       L01,#1a [FALSE] L0094
       PRINT_RET       " lead nowhere."
L0094: PRINT_RET       " leads nowhere."
       JUMP            L0117
L0095: JE              Gef,#07 [FALSE] L0096
       PRINT_PADDR     S064
       NEW_LINE        
       RTRUE           
L0096: JE              Gef,#08 [FALSE] L0097
       CALL_2N         R0976 (G28)
       PRINT           " goes up"
       JUMP            L0117
L0097: JE              Gef,#09 [FALSE] L0098
       CALL_2N         R0976 (G28)
       PRINT           " goes down"
       JUMP            L0117
L0098: JE              Gef,#0a [FALSE] L0099
       CALL_2N         R0976 (G28)
       PRINT           " goes "
       CALL_2N         R0977 (L01)
       JUMP            L0117
L0099: JE              Gef,#0b [FALSE] L0100
       CALL_2N         R0976 (G28)
       PRINT           " arrives from above"
       JUMP            L0117
L0100: JE              Gef,#0c [FALSE] L0101
       CALL_2N         R0976 (G28)
       PRINT           " arrives from below"
       JUMP            L0117
L0101: JE              Gef,#0d [FALSE] L0102
       CALL_2N         R0976 (G28)
       PRINT           " arrives from the "
       CALL_2N         R0977 (L01)
       JUMP            L0117
L0102: JE              Gef,#0e [FALSE] L0103
       CALL_2N         R0976 (G28)
       PRINT           " arrives"
       JUMP            L0117
L0103: JE              Gef,#0f [FALSE] L0104
       CALL_2N         R0976 (G28)
       PRINT           " arrives at "
       CALL_2N         R0975 (L01)
       PRINT           " from above"
       JUMP            L0117
L0104: JE              Gef,#10 [FALSE] L0105
       CALL_2N         R0976 (G28)
       PRINT           " arrives at "
       CALL_2N         R0975 (L01)
       PRINT           " from below"
       JUMP            L0117
L0105: JE              Gef,#11 [FALSE] L0106
       CALL_2N         R0976 (G28)
       PRINT           " arrives at "
       CALL_2N         R0975 (L01)
       PRINT           " from the "
       CALL_2N         R0977 (L02)
       JUMP            L0117
L0106: JE              Gef,#12 [FALSE] L0107
       CALL_2N         R0976 (G28)
       PRINT           " goes through "
       CALL_2N         R0975 (L01)
       JUMP            L0117
L0107: JE              Gef,#13 [FALSE] L0108
       CALL_2N         R0976 (G28)
       PRINT           " arrives from "
       CALL_2N         R0975 (L01)
       JUMP            L0117
L0108: JE              Gef,#14 [FALSE] L0109
       PRINT           "on "
       CALL_2N         R0975 (L01)
       JUMP            L0117
L0109: JE              Gef,#15 [FALSE] L0110
       PRINT           "in "
       CALL_2N         R0975 (L01)
       JUMP            L0117
L0110: JE              Gef,#16 [FALSE] L0111
       PRINT           ", pushing "
       CALL_2N         R0975 (L01)
       PRINT           " in front, and you along too"
       JUMP            L0117
L0111: JE              Gef,#17 [FALSE] L0112
       PRINT           ", pushing "
       CALL_2N         R0975 (L01)
       PRINT           " in front"
       JUMP            L0117
L0112: JE              Gef,#18 [FALSE] L0113
       PRINT           ", pushing "
       CALL_2N         R0975 (L01)
       PRINT           " away"
       JUMP            L0117
L0113: JE              Gef,#19 [FALSE] L0114
       PRINT           ", pushing "
       CALL_2N         R0975 (L01)
       PRINT           " in"
       JUMP            L0117
L0114: JE              Gef,#1a [FALSE] L0115
       PRINT           ", taking you along"
       JUMP            L0117
L0115: JE              Gef,#1b [FALSE] L0116
       PRINT           "(first getting off "
       CALL_2N         R0975 (L01)
       PRINT           ")
"
       STORE           G05,#00
       RTRUE           
L0116: JE              Gef,#1c [FALSE] L0117
       PRINT           "(first opening "
       CALL_2N         R0975 (L01)
       PRINT           ")
"
       STORE           G05,#00
       RTRUE           
L0117: RTRUE           
L0118: JE              Ge9,#1a [FALSE] L0129
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0119
       PRINT           "You need to be holding "
       CALL_2N         R0975 (L01)
       PRINT           " before you can put "
       CALL_2N         R0063 (L01)
       PRINT_RET       " into something else."
L0119: JE              Gef,#02 [FALSE] L0120
       CALL_2N         R0066 (L01)
       PRINT_RET       " can't contain things."
L0120: JE              Gef,#03 [FALSE] L0121
       CALL_2N         R0976 (L01)
       PRINT           " "
       CALL_2N         R0064 (L01)
       PRINT_RET       " closed."
L0121: JE              Gef,#04 [FALSE] L0122
       PRINT           "You'll need to take "
       CALL_2N         R0063 (L01)
       PRINT_RET       " off first."
L0122: JE              Gef,#05 [FALSE] L0123
       PRINT_PADDR     S065
       NEW_LINE        
       RTRUE           
L0123: JE              Gef,#06 [FALSE] L0124
       PRINT           "(first taking "
       CALL_2N         R0063 (L01)
       PRINT           " off)
"
       STORE           G05,#00
       RTRUE           
L0124: JE              Gef,#07 [FALSE] L0125
       PRINT           "There is no more room in "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0125: JE              Gef,#08 [FALSE] L0126
       PRINT_RET       "Done."
L0126: JE              Gef,#09 [FALSE] L0127
       PRINT           "You put "
       CALL_2N         R0975 (L01)
       PRINT           " into "
       CALL_2N         R0975 (G33)
       PRINT_RET       "."
L0127: JE              Gef,#0a [FALSE] L0128
       CALL_2N         R0976 (G28)
       PRINT           " puts "
       CALL_2N         R0975 (L01)
       PRINT           " into "
       CALL_2N         R0975 (G33)
       PRINT           ".
"
L0128: RTRUE           
L0129: JE              Ge9,#1b [FALSE] L0135
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0130
       PRINT_RET       "You are carrying nothing."
L0130: JE              Gef,#02 [FALSE] L0131
       PRINT           "You are carrying"
       JUMP            L0134
L0131: JE              Gef,#03 [FALSE] L0132
       PRINT           ":
"
       JUMP            L0134
L0132: JE              Gef,#04 [FALSE] L0133
       PRINT           ".
"
       JUMP            L0134
L0133: JE              Gef,#05 [FALSE] L0134
       CALL_2N         R0976 (L01)
       PRINT           " looks through "
       CALL_2N         R0068 (L01)
       PRINT           " possessions.
"
L0134: RTRUE           
L0135: JE              Ge9,#1c [FALSE] L0136
       PRINT_PADDR     S066
       NEW_LINE        
       RTRUE           
L0136: JE              Ge9,#1d [FALSE] L0137
       PRINT_RET       "Keep your mind on the game."
L0137: JE              Ge9,#1e [FALSE] L0138
       PRINT_RET       "You hear nothing unexpected."
L0138: JE              Ge9,#1000 [FALSE] L0161
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0139
       PRINT           " (providing light)"
       JUMP            L0160
L0139: JE              Gef,#02 [FALSE] L0140
       PRINT           " (closed)"
       JUMP            L0160
L0140: JE              Gef,#04 [FALSE] L0141
       PRINT           " (empty)"
       JUMP            L0160
L0141: JE              Gef,#06 [FALSE] L0142
       PRINT           " (closed and empty)"
       JUMP            L0160
L0142: JE              Gef,#03 [FALSE] L0143
       PRINT           " (closed and providing light)"
       JUMP            L0160
L0143: JE              Gef,#05 [FALSE] L0144
       PRINT           " (empty and providing light)"
       JUMP            L0160
L0144: JE              Gef,#07 [FALSE] L0145
       PRINT_PADDR     S067
       JUMP            L0160
L0145: JE              Gef,#08 [FALSE] L0146
       PRINT           " (providing light and being worn"
       JUMP            L0160
L0146: JE              Gef,#09 [FALSE] L0147
       PRINT           " (providing light"
       JUMP            L0160
L0147: JE              Gef,#0a [FALSE] L0148
       PRINT           " (being worn"
       JUMP            L0160
L0148: JE              Gef,#0b [FALSE] L0149
       PRINT           " ("
       JUMP            L0160
L0149: JE              Gef,#0c [FALSE] L0150
       PRINT           "open"
       JUMP            L0160
L0150: JE              Gef,#0d [FALSE] L0151
       PRINT           "open but empty"
       JUMP            L0160
L0151: JE              Gef,#0e [FALSE] L0152
       PRINT           "closed"
       JUMP            L0160
L0152: JE              Gef,#0f [FALSE] L0153
       PRINT           "closed and locked"
       JUMP            L0160
L0153: JE              Gef,#10 [FALSE] L0154
       PRINT           " and empty"
       JUMP            L0160
L0154: JE              Gef,#11 [FALSE] L0155
       PRINT           " (empty)"
       JUMP            L0160
L0155: JE              Gef,#12 [FALSE] L0156
       PRINT           " containing "
       JUMP            L0160
L0156: JE              Gef,#13 [FALSE] L0157
       PRINT           " (on "
       JUMP            L0160
L0157: JE              Gef,#14 [FALSE] L0158
       PRINT           ", on top of "
       JUMP            L0160
L0158: JE              Gef,#15 [FALSE] L0159
       PRINT           " (in "
       JUMP            L0160
L0159: JE              Gef,#16 [FALSE] L0160
       PRINT           ", inside "
L0160: RTRUE           
L0161: JE              Ge9,#1f [FALSE] L0162
       PRINT_PADDR     S068
       NEW_LINE        
       RTRUE           
L0162: JE              Ge9,#20 [FALSE] L0163
       PRINT_PADDR     S069
       NEW_LINE        
       RTRUE           
L0163: JE              Ge9,#21 [FALSE] L0164
       PRINT_PADDR     S070
       NEW_LINE        
       RTRUE           
L0164: JE              Ge9,#22 [FALSE] L0175
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0167
       TEST_ATTR       L01,#1a [FALSE] L0165
       PRINT           "They don't "
       JUMP            L0166
L0165: PRINT           "That doesn't "
L0166: PRINT_PADDR     S071
       NEW_LINE        
       RTRUE           
L0167: JE              Gef,#02 [FALSE] L0168
       CALL_2N         R0067 (L01)
       PRINT_RET       " locked at the moment."
L0168: JE              Gef,#03 [FALSE] L0169
       PRINT           "First you'll have to close "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0169: JE              Gef,#04 [FALSE] L0172
       TEST_ATTR       L01,#1a [FALSE] L0170
       PRINT           "Those don't "
       JUMP            L0171
L0170: PRINT           "That doesn't "
L0171: PRINT_RET       "seem to fit the lock."
L0172: JE              Gef,#05 [FALSE] L0173
       PRINT           "You lock "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0173: JE              Gef,#06 [FALSE] L0174
       CALL_2N         R0976 (G28)
       PRINT           " locks "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0174: RTRUE           
L0175: JE              Ge9,#23 [FALSE] L0194
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0176
       PRINT           " (on "
       CALL_2N         R0975 (L01)
       PRINT           ")"
       JUMP            L0193
L0176: JE              Gef,#02 [FALSE] L0177
       PRINT           " (in "
       CALL_2N         R0975 (L01)
       PRINT           ")"
       JUMP            L0193
L0177: JE              Gef,#03 [FALSE] L0178
       PRINT           " (as "
       PRINT_OBJ       L01
       PRINT           ")"
       JUMP            L0193
L0178: JE              Gef,#04 [FALSE] L0180
       PRINT           "On "
       CALL_2N         R0975 (L01)
       PRINT           " "
       GET_CHILD       L01 -> -(SP) [FALSE] L0179
L0179: CALL_VN         R0094 ((SP)+,#0cd8)
       PRINT_RET       "."
L0180: JE              Gef,#05,#06 [FALSE] L0188
       JE              L01,G02 [TRUE] L0183
       TEST_ATTR       L01,#11 [FALSE] L0181
       PRINT           "On "
       JUMP            L0182
L0181: PRINT           "In "
L0182: CALL_2N         R0975 (L01)
       PRINT           " you"
       JUMP            L0184
L0183: PRINT           "You"
L0184: PRINT           " can "
       JE              L00,#05 [FALSE] L0185
       PRINT           "also "
L0185: PRINT           "see "
       GET_CHILD       L01 -> -(SP) [FALSE] L0186
L0186: CALL_VN         R0094 ((SP)+,#0ad8)
       JE              L01,G02 [TRUE] L0187
       PRINT_RET       "."
L0187: PRINT_RET       " here."
       JUMP            L0193
L0188: JE              Gef,#07 [FALSE] L0189
       PRINT_PADDR     S072
       NEW_LINE        
       RTRUE           
L0189: JE              Gef,#08 [FALSE] L0192
       TEST_ATTR       L01,#11 [FALSE] L0190
       PRINT           " (on "
       JUMP            L0191
L0190: PRINT           " (in "
L0191: CALL_2N         R0975 (L01)
       PRINT           ")"
       JUMP            L0193
L0192: JE              Gef,#09 [FALSE] L0193
       CALL_2N         R0976 (G28)
       PRINT           " looks around.
"
L0193: RTRUE           
L0194: JE              Ge9,#24 [FALSE] L0198
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0195
       PRINT_RET       "But it's dark."
L0195: JE              Gef,#02 [FALSE] L0196
       PRINT_RET       "You find nothing of interest."
L0196: JE              Gef,#03 [FALSE] L0197
       CALL_2N         R0976 (G28)
       PRINT           " looks under "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0197: RTRUE           
L0198: JE              Ge9,#25 [FALSE] L0199
       PRINT_RET       "Quite."
L0199: JE              Ge9,#1001 [FALSE] L0286
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0200
       PRINT_PADDR     S073
       NEW_LINE        
       RTRUE           
L0200: JE              Gef,#02 [FALSE] L0201
       PRINT_RET       "Nothing to do!"
L0201: JE              Gef,#03 [FALSE] L0202
       PRINT           " You have died "
       JUMP            L0285
L0202: JE              Gef,#04 [FALSE] L0203
       PRINT           " You have won "
       JUMP            L0285
L0203: JE              Gef,#05 [FALSE] L0204
       PRINT_PADDR     S074
       PRINT_RET       " or QUIT?"
L0204: JE              Gef,#06 [FALSE] L0205
       PRINT_PADDR     S075
       NEW_LINE        
       RTRUE           
L0205: JE              Gef,#07 [FALSE] L0206
       PRINT_PADDR     S076
       NEW_LINE        
       RTRUE           
L0206: JE              Gef,#08 [FALSE] L0207
       PRINT_PADDR     S077
       NEW_LINE        
       RTRUE           
L0207: JE              Gef,#09 [FALSE] L0208
       PRINT_RET       "It is now pitch dark in here!"
L0208: JE              Gef,#0a [FALSE] L0209
       PRINT_RET       "I beg your pardon?"
L0209: JE              Gef,#0b [FALSE] L0210
       PRINT_PADDR     S078
       NEW_LINE        
       RTRUE           
L0210: JE              Gef,#0c [FALSE] L0211
       PRINT_PADDR     S079
       NEW_LINE        
       RTRUE           
L0211: JE              Gef,#0d [FALSE] L0212
       PRINT_RET       "[Previous turn undone.]"
L0212: JE              Gef,#0e [FALSE] L0213
       PRINT_RET       "Sorry, that can't be corrected."
L0213: JE              Gef,#0f [FALSE] L0214
       PRINT_RET       "Think nothing of it."
L0214: JE              Gef,#10 [FALSE] L0215
       PRINT_PADDR     S080
       NEW_LINE        
       RTRUE           
L0215: JE              Gef,#11 [FALSE] L0216
       PRINT_PADDR     S081
       NEW_LINE        
       RTRUE           
L0216: JE              Gef,#12 [FALSE] L0217
       PRINT           "yourself"
       JUMP            L0285
L0217: JE              Gef,#13 [FALSE] L0218
       PRINT_RET       "As good-looking as ever."
L0218: JE              Gef,#14 [FALSE] L0219
       PRINT_PADDR     S082
       NEW_LINE        
       RTRUE           
L0219: JE              Gef,#15 [FALSE] L0220
       PRINT_RET       "You can hardly repeat that."
L0220: JE              Gef,#16 [FALSE] L0221
       PRINT_RET       "You can't begin with a comma."
L0221: JE              Gef,#17 [FALSE] L0222
       PRINT_PADDR     S083
       NEW_LINE        
       RTRUE           
L0222: JE              Gef,#18 [FALSE] L0223
       PRINT           "You can't talk to "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0223: JE              Gef,#19 [FALSE] L0224
       PRINT_PADDR     S084
       NEW_LINE        
       RTRUE           
L0224: JE              Gef,#1a [FALSE] L0225
       PRINT           "(first taking "
       CALL_2N         R0975 (L01)
       PRINT_RET       ")"
L0225: JE              Gef,#1b [FALSE] L0226
       PRINT_PADDR     S085
       NEW_LINE        
       RTRUE           
L0226: JE              Gef,#1c [FALSE] L0227
       PRINT_PADDR     S086
       JUMP            L0285
L0227: JE              Gef,#1d [FALSE] L0228
       PRINT_RET       "I didn't understand that number."
L0228: JE              Gef,#1e [FALSE] L0229
       PRINT_RET       "You can't see any such thing."
L0229: JE              Gef,#1f [FALSE] L0230
       PRINT_PADDR     S087
       NEW_LINE        
       RTRUE           
L0230: JE              Gef,#20 [FALSE] L0231
       PRINT_RET       "You aren't holding that!"
L0231: JE              Gef,#21 [FALSE] L0232
       PRINT_PADDR     S088
       NEW_LINE        
       RTRUE           
L0232: JE              Gef,#22 [FALSE] L0233
       PRINT_PADDR     S089
       NEW_LINE        
       RTRUE           
L0233: JE              Gef,#23 [FALSE] L0234
       PRINT           "I'm not sure what ""
       PRINT_ADDR      G41
       PRINT_RET       "" refers to."
L0234: JE              Gef,#24 [FALSE] L0235
       PRINT_PADDR     S090
       NEW_LINE        
       RTRUE           
L0235: JE              Gef,#25 [FALSE] L0236
       PRINT_PADDR     S091
       NEW_LINE        
       RTRUE           
L0236: JE              Gef,#26 [FALSE] L0237
       PRINT_RET       "That's not a verb I recognise."
L0237: JE              Gef,#27 [FALSE] L0238
       PRINT_PADDR     S092
       NEW_LINE        
       RTRUE           
L0238: JE              Gef,#28 [FALSE] L0239
       PRINT           "You can't see ""
       PRINT_ADDR      G41
       PRINT           "" ("
       CALL_2N         R0975 (G42)
       PRINT_RET       ") at the moment."
L0239: JE              Gef,#29 [FALSE] L0240
       PRINT_PADDR     S093
       NEW_LINE        
       RTRUE           
L0240: JE              Gef,#2a [FALSE] L0245
       JZ              L01 [FALSE] L0241
       PRINT           "None"
       JUMP            L0242
L0241: PRINT           "Only "
       CALL_2N         R0964 (L01)
L0242: PRINT           " of those "
       JE              L01,#01 [FALSE] L0243
       PRINT           "is"
       JUMP            L0244
L0243: PRINT           "are"
L0244: PRINT_RET       " available."
L0245: JE              Gef,#2b [FALSE] L0246
       PRINT_RET       "Nothing to do!"
L0246: JE              Gef,#2c [FALSE] L0247
       PRINT_RET       "There are none at all available!"
L0247: JE              Gef,#2d [FALSE] L0248
       PRINT           "Who do you mean, "
       JUMP            L0285
L0248: JE              Gef,#2e [FALSE] L0249
       PRINT           "Which do you mean, "
       JUMP            L0285
L0249: JE              Gef,#2f [FALSE] L0250
       PRINT_PADDR     S094
       NEW_LINE        
       RTRUE           
L0250: JE              Gef,#30 [FALSE] L0252
       PRINT           "Whom do you want"
       JE              G28,G22 [TRUE] L0251
       PRINT           " "
       CALL_2N         R0975 (G28)
L0251: PRINT           " to "
       CALL_1N         R0159
       PRINT           "?
"
       JUMP            L0285
L0252: JE              Gef,#31 [FALSE] L0254
       PRINT           "What do you want"
       JE              G28,G22 [TRUE] L0253
       PRINT           " "
       CALL_2N         R0975 (G28)
L0253: PRINT           " to "
       CALL_1N         R0159
       PRINT           "?
"
       JUMP            L0285
L0254: JE              Gef,#32 [FALSE] L0258
       PRINT           "Your score has just gone "
       JG              L01,#00 [FALSE] L0255
       PRINT           "up"
       JUMP            L0256
L0255: SUB             #00,L01 -> L01
       PRINT           "down"
L0256: PRINT           " by "
       CALL_2N         R0964 (L01)
       PRINT           " point"
       JG              L01,#01 [FALSE] L0257
       PRINT           "s"
L0257: JUMP            L0285
L0258: JE              Gef,#33 [FALSE] L0259
       PRINT_PADDR     S095
       NEW_LINE        
       RTRUE           
L0259: JE              Gef,#34 [FALSE] L0260
       PRINT           "
Type a number from 1 to "
       PRINT_NUM       L01
       PRINT_RET       ", 0 to redisplay or press ENTER."
L0260: JE              Gef,#35 [FALSE] L0261
       PRINT_RET       "
[Please press SPACE.]"
L0261: JE              Gef,#36 [FALSE] L0262
       PRINT_RET       "[Comment recorded.]"
L0262: JE              Gef,#37 [FALSE] L0263
       PRINT_RET       "[Comment NOT recorded.]"
L0263: JE              Gef,#38 [FALSE] L0264
       PRINT           ".
"
       JUMP            L0285
L0264: JE              Gef,#39 [FALSE] L0265
       PRINT           "?
"
       JUMP            L0285
L0265: JE              Gef,#3a [FALSE] L0266
       CALL_2N         R0976 (G28)
       PRINT           " "
       CALL_2N         R0064 (G28)
       PRINT           " unable to do that.
"
       JUMP            L0285
L0266: JE              Gef,#3b [FALSE] L0267
       PRINT_RET       "You must supply a noun."
L0267: JE              Gef,#3c [FALSE] L0268
       PRINT_RET       "You may not supply a noun."
L0268: JE              Gef,#3d [FALSE] L0269
       PRINT_RET       "You must name an object."
L0269: JE              Gef,#3e [FALSE] L0270
       PRINT_RET       "You may not name an object."
L0270: JE              Gef,#3f [FALSE] L0271
       PRINT_RET       "You must name a second object."
L0271: JE              Gef,#40 [FALSE] L0272
       PRINT_PADDR     S096
       NEW_LINE        
       RTRUE           
L0272: JE              Gef,#41 [FALSE] L0273
       PRINT_RET       "You must supply a second noun."
L0273: JE              Gef,#42 [FALSE] L0274
       PRINT_PADDR     S097
       NEW_LINE        
       RTRUE           
L0274: JE              Gef,#43 [FALSE] L0275
       PRINT_PADDR     S098
       NEW_LINE        
       RTRUE           
L0275: JE              Gef,#44 [FALSE] L0276
       PRINT           "("
       CALL_2N         R0976 (G28)
       PRINT           " first taking "
       CALL_2N         R0975 (L01)
       PRINT           ")
"
       JUMP            L0285
L0276: JE              Gef,#45 [FALSE] L0277
       PRINT           "(first taking "
       CALL_2N         R0975 (L01)
       PRINT_RET       ")"
L0277: JE              Gef,#46 [FALSE] L0278
       PRINT_PADDR     S099
       NEW_LINE        
       RTRUE           
L0278: JE              Gef,#47 [FALSE] L0279
       PRINT_PADDR     S036
       JUMP            L0285
L0279: JE              Gef,#48 [FALSE] L0282
       CALL_2N         R0976 (L01)
       TEST_ATTR       L01,#1a [FALSE] L0280
       PRINT           " have"
       JUMP            L0281
L0280: PRINT           " has"
L0281: PRINT_RET       " better things to do."
L0282: JE              Gef,#49 [FALSE] L0283
       PRINT_PADDR     S100
       NEW_LINE        
       RTRUE           
L0283: JE              Gef,#4a [FALSE] L0284
       PRINT_PADDR     S101
       CALL_2N         R0976 (L01)
       PRINT           " cannot be asked to do this.]
"
       JUMP            L0285
L0284: JE              Gef,#4b [FALSE] L0285
       PRINT           " The End "
L0285: RTRUE           
L0286: JE              Ge9,#26,#27 [FALSE] L0287
       PRINT_RET       "That was a rhetorical question."
L0287: JE              Ge9,#28 [FALSE] L0288
       PRINT_RET       "Score notification off."
L0288: JE              Ge9,#29 [FALSE] L0289
       PRINT_RET       "Score notification on."
L0289: JE              Ge9,#2a [FALSE] L0302
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0290
       CALL_2N         R0067 (L01)
       PRINT_RET       " not something you can open."
L0290: JE              Gef,#02 [FALSE] L0293
       TEST_ATTR       L01,#1a [FALSE] L0291
       PRINT           "They seem "
       JUMP            L0292
L0291: PRINT           "It seems "
L0292: PRINT_RET       "to be locked."
L0293: JE              Gef,#03 [FALSE] L0294
       CALL_2N         R0067 (L01)
       PRINT_RET       " already open."
L0294: JE              Gef,#04 [FALSE] L0297
       PRINT           "You open "
       CALL_2N         R0975 (L01)
       PRINT           ", revealing "
       GET_CHILD       L01 -> -(SP) [FALSE] L0295
L0295: CALL_VS         R0094 ((SP)+,#0848) -> -(SP)
       JZ              (SP)+ [FALSE] L0296
       PRINT_RET       "nothing."
L0296: PRINT_RET       "."
L0297: JE              Gef,#05 [FALSE] L0298
       PRINT           "You open "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0298: JE              Gef,#06 [FALSE] L0299
       CALL_2N         R0976 (G28)
       PRINT           " opens "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
       JUMP            L0301
L0299: JE              Gef,#07 [FALSE] L0301
       CALL_2N         R0976 (L01)
       PRINT           " open"
       TEST_ATTR       L01,#1a [TRUE] L0300
       PRINT           "s"
L0300: PRINT           ".
"
L0301: RTRUE           
L0302: JE              Ge9,#2b [FALSE] L0308
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0303
       PRINT           "At the moment, "
       JUMP            L0307
L0303: JE              Gef,#02 [FALSE] L0304
       PRINT           "means "
       JUMP            L0307
L0304: JE              Gef,#03 [FALSE] L0305
       PRINT           "is unset"
       JUMP            L0307
L0305: JE              Gef,#04 [FALSE] L0306
       PRINT_PADDR     S102
       NEW_LINE        
       RTRUE           
L0306: JE              Gef,#05 [FALSE] L0307
       PRINT_RET       "."
L0307: RTRUE           
L0308: JE              Ge9,#2c,#2d,#2e [FALSE] L0318
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0311
       TEST_ATTR       L01,#1a [FALSE] L0309
       PRINT           "Those are "
       JUMP            L0310
L0309: PRINT           "It is "
L0310: PRINT_RET       "fixed in place."
L0311: JE              Gef,#02 [FALSE] L0312
       PRINT_RET       "You are unable to."
L0312: JE              Gef,#03 [FALSE] L0313
       PRINT_RET       "Nothing obvious happens."
L0313: JE              Gef,#04 [FALSE] L0314
       PRINT_PADDR     S103
       NEW_LINE        
       RTRUE           
L0314: JE              Gef,#05 [FALSE] L0315
       CALL_2N         R0976 (G28)
       PRINT           " pulls "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
       JUMP            L0317
L0315: JE              Gef,#06 [FALSE] L0316
       CALL_2N         R0976 (G28)
       PRINT           " pushes "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
       JUMP            L0317
L0316: JE              Gef,#07 [FALSE] L0317
       CALL_2N         R0976 (G28)
       PRINT           " turns "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0317: RTRUE           
L0318: JE              Ge9,#2f [FALSE] L0322
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0319
       CALL_2N         R0976 (L01)
       PRINT_PADDR     S104
       JUMP            L0321
L0319: JE              Gef,#02 [FALSE] L0320
       PRINT_RET       "That's not a direction."
L0320: JE              Gef,#03 [FALSE] L0321
       PRINT_RET       "Not that way you can't."
L0321: RTRUE           
L0322: JE              Ge9,#30 [FALSE] L0332
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0323
       PRINT           "You need to be holding "
       CALL_2N         R0975 (L01)
       PRINT           " before you can put "
       CALL_2N         R0063 (L01)
       PRINT_RET       " on top of something else."
L0323: JE              Gef,#02 [FALSE] L0324
       PRINT_PADDR     S105
       NEW_LINE        
       RTRUE           
L0324: JE              Gef,#03 [FALSE] L0325
       PRINT           "Putting things on "
       CALL_2N         R0975 (L01)
       PRINT_RET       " would achieve nothing."
L0325: JE              Gef,#04 [FALSE] L0326
       PRINT_RET       "You lack the dexterity."
L0326: JE              Gef,#05 [FALSE] L0327
       PRINT           "(first taking "
       CALL_2N         R0063 (L01)
       PRINT           " off)
"
       STORE           G05,#00
       RTRUE           
L0327: JE              Gef,#06 [FALSE] L0328
       PRINT           "There is no more room on "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0328: JE              Gef,#07 [FALSE] L0329
       PRINT_RET       "Done."
L0329: JE              Gef,#08 [FALSE] L0330
       PRINT           "You put "
       CALL_2N         R0975 (L01)
       PRINT           " on "
       CALL_2N         R0975 (G33)
       PRINT_RET       "."
L0330: JE              Gef,#09 [FALSE] L0331
       CALL_2N         R0976 (G28)
       PRINT           " puts "
       CALL_2N         R0975 (L01)
       PRINT           " on "
       CALL_2N         R0975 (G33)
       PRINT           ".
"
L0331: RTRUE           
L0332: JE              Ge9,#00 [FALSE] L0335
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0333
       PRINT           "Please answer yes or no."
       JUMP            L0334
L0333: JE              Gef,#02 [FALSE] L0334
       PRINT           "Are you sure you want to quit? "
L0334: RTRUE           
L0335: JE              Ge9,#31 [FALSE] L0343
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0338
       TEST_ATTR       L01,#1a [FALSE] L0336
       PRINT           "They are"
       JUMP            L0337
L0336: PRINT           "It is"
L0337: PRINT_RET       " unfortunately closed."
L0338: JE              Gef,#02 [FALSE] L0341
       TEST_ATTR       L01,#1a [FALSE] L0339
       PRINT           "But they aren't"
       JUMP            L0340
L0339: PRINT           "But it isn't"
L0340: PRINT_RET       " there now."
L0341: JE              Gef,#03 [FALSE] L0342
       PRINT_RET       "Removed."
L0342: RTRUE           
L0343: JE              Ge9,#01 [FALSE] L0346
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0344
       PRINT_PADDR     S106
       JUMP            L0345
L0344: JE              Gef,#02 [FALSE] L0345
       PRINT_RET       "Failed."
L0345: RTRUE           
L0346: JE              Ge9,#02 [FALSE] L0349
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0347
       PRINT_RET       "Restore failed."
L0347: JE              Gef,#02 [FALSE] L0348
       PRINT_RET       "Ok."
L0348: RTRUE           
L0349: JE              Ge9,#32 [FALSE] L0350
       PRINT_RET       "You achieve nothing by this."
L0350: JE              Ge9,#03 [FALSE] L0353
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0351
       PRINT_RET       "Save failed."
L0351: JE              Gef,#02 [FALSE] L0352
       PRINT_RET       "Ok."
L0352: RTRUE           
L0353: JE              Ge9,#33 [FALSE] L0360
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0357
       JZ              G16 [TRUE] L0354
       PRINT           "In that game you scored "
       JUMP            L0355
L0354: PRINT           "You have so far scored "
L0355: PRINT_NUM       G1d
       PRINT           " out of a possible "
       PRINT_NUM       G01
       PRINT           ", in "
       PRINT_NUM       G1a
       PRINT           " turn"
       JE              G1a,#01 [TRUE] L0356
       PRINT           "s"
L0356: RTRUE           
L0357: JE              Gef,#02 [FALSE] L0358
       PRINT_RET       "There is no score in this story."
L0358: JE              Gef,#03 [FALSE] L0359
       PRINT           ", earning you the rank of "
L0359: RTRUE           
L0360: JE              Ge9,#06 [FALSE] L0364
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0361
       PRINT_RET       "Transcripting is already off."
L0361: JE              Gef,#02 [FALSE] L0362
       PRINT_RET       "
End of transcript."
L0362: JE              Gef,#03 [FALSE] L0363
       PRINT_PADDR     S107
       NEW_LINE        
       RTRUE           
L0363: RTRUE           
L0364: JE              Ge9,#05 [FALSE] L0368
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0365
       PRINT_RET       "Transcripting is already on."
L0365: JE              Gef,#02 [FALSE] L0366
       PRINT_RET       "Start of a transcript of"
L0366: JE              Gef,#03 [FALSE] L0367
       PRINT_PADDR     S108
       NEW_LINE        
       RTRUE           
L0367: RTRUE           
L0368: JE              Ge9,#34 [FALSE] L0379
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0369
       PRINT_RET       "But it's dark."
L0369: JE              Gef,#02 [FALSE] L0370
       PRINT           "There is nothing on "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0370: JE              Gef,#03 [FALSE] L0372
       PRINT           "On "
       CALL_2N         R0975 (L01)
       PRINT           " "
       GET_CHILD       L01 -> -(SP) [FALSE] L0371
L0371: CALL_VN         R0094 ((SP)+,#0c48)
       PRINT_RET       "."
L0372: JE              Gef,#04 [FALSE] L0373
       PRINT_RET       "You find nothing of interest."
L0373: JE              Gef,#05 [FALSE] L0374
       PRINT           "You can't see inside, since "
       CALL_2N         R0975 (L01)
       PRINT           " "
       CALL_2N         R0064 (L01)
       PRINT_RET       " closed."
L0374: JE              Gef,#06 [FALSE] L0375
       CALL_2N         R0976 (L01)
       PRINT           " "
       CALL_2N         R0064 (L01)
       PRINT_RET       " empty."
L0375: JE              Gef,#07 [FALSE] L0377
       PRINT           "In "
       CALL_2N         R0975 (L01)
       PRINT           " "
       GET_CHILD       L01 -> -(SP) [FALSE] L0376
L0376: CALL_VN         R0094 ((SP)+,#0c48)
       PRINT_RET       "."
L0377: JE              Gef,#08 [FALSE] L0378
       CALL_2N         R0976 (G28)
       PRINT           " searches "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0378: RTRUE           
L0379: JE              Ge9,#35 [FALSE] L0380
       PRINT           "No, you can't set "
       CALL_2N         R0062 (L01)
       PRINT_RET       " to anything."
L0380: JE              Ge9,#36 [FALSE] L0383
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0381
       PRINT           "You aren't holding "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0381: JE              Gef,#02 [FALSE] L0382
       CALL_2N         R0976 (L01)
       PRINT           " "
       CALL_2N         R0064 (L01)
       PRINT_RET       " unimpressed."
L0382: RTRUE           
L0383: JE              Ge9,#37 [FALSE] L0384
       PRINT_RET       "Your singing is abominable."
L0384: JE              Ge9,#38 [FALSE] L0385
       PRINT_PADDR     S109
       NEW_LINE        
       RTRUE           
L0385: JE              Ge9,#39 [FALSE] L0386
       PRINT_RET       "You smell nothing unexpected."
L0386: JE              Ge9,#3a [FALSE] L0387
       PRINT_RET       "Oh, don't apologise."
L0387: JE              Ge9,#3b [FALSE] L0391
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0388
       PRINT_RET       "Keep your hands to yourself."
L0388: JE              Gef,#02 [FALSE] L0389
       PRINT_RET       "You achieve nothing by this."
L0389: JE              Gef,#03 [FALSE] L0390
       CALL_2N         R0976 (G28)
       PRINT           " squeezes "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0390: RTRUE           
L0391: JE              Ge9,#3c [FALSE] L0392
       PRINT_PADDR     S110
       NEW_LINE        
       RTRUE           
L0392: JE              Ge9,#3d [FALSE] L0393
       PRINT_PADDR     S111
       NEW_LINE        
       RTRUE           
L0393: JE              Ge9,#3e [FALSE] L0398
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0394
       CALL_2N         R0067 (L01)
       PRINT_RET       " not something you can switch."
L0394: JE              Gef,#02 [FALSE] L0395
       CALL_2N         R0067 (L01)
       PRINT_RET       " already off."
L0395: JE              Gef,#03 [FALSE] L0396
       PRINT           "You switch "
       CALL_2N         R0975 (L01)
       PRINT_RET       " off."
L0396: JE              Gef,#04 [FALSE] L0397
       CALL_2N         R0976 (G28)
       PRINT           " switches "
       CALL_2N         R0975 (L01)
       PRINT           " off.
"
L0397: RTRUE           
L0398: JE              Ge9,#3f [FALSE] L0403
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0399
       CALL_2N         R0067 (L01)
       PRINT_RET       " not something you can switch."
L0399: JE              Gef,#02 [FALSE] L0400
       CALL_2N         R0067 (L01)
       PRINT_RET       " already on."
L0400: JE              Gef,#03 [FALSE] L0401
       PRINT           "You switch "
       CALL_2N         R0975 (L01)
       PRINT_RET       " on."
L0401: JE              Gef,#04 [FALSE] L0402
       CALL_2N         R0976 (G28)
       PRINT           " switches "
       CALL_2N         R0975 (L01)
       PRINT           " on.
"
L0402: RTRUE           
L0403: JE              Ge9,#40 [FALSE] L0430
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0404
       PRINT_RET       "Taken."
L0404: JE              Gef,#02 [FALSE] L0405
       PRINT_RET       "You are always self-possessed."
L0405: JE              Gef,#03 [FALSE] L0406
       PRINT           "I don't suppose "
       CALL_2N         R0975 (L01)
       PRINT_RET       " would care for that."
L0406: JE              Gef,#04 [FALSE] L0409
       PRINT           "You'd have to get "
       TEST_ATTR       L01,#11 [FALSE] L0407
       PRINT           "off "
       JUMP            L0408
L0407: PRINT           "out of "
L0408: CALL_2N         R0975 (L01)
       PRINT_RET       " first."
L0409: JE              Gef,#05 [FALSE] L0410
       PRINT           "You already have "
       CALL_2N         R0062 (L01)
       PRINT_RET       "."
L0410: JE              Gef,#06 [FALSE] L0413
       TEST_ATTR       G32,#1a [FALSE] L0411
       PRINT           "Those seem "
       JUMP            L0412
L0411: PRINT           "That seems "
L0412: PRINT           "to belong to "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0413: JE              Gef,#07 [FALSE] L0416
       TEST_ATTR       G32,#1a [FALSE] L0414
       PRINT           "Those seem "
       JUMP            L0415
L0414: PRINT           "That seems "
L0415: PRINT           "to be a part of "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0416: JE              Gef,#08 [FALSE] L0417
       CALL_2N         R0066 (L01)
       PRINT           " "
       CALL_2N         R0064 (L01)
       PRINT_RET       "n't available."
L0417: JE              Gef,#09 [FALSE] L0418
       CALL_2N         R0976 (L01)
       PRINT           " "
       CALL_2N         R0064 (L01)
       PRINT_RET       "n't open."
L0418: JE              Gef,#0a [FALSE] L0421
       TEST_ATTR       L01,#1a [FALSE] L0419
       PRINT           "They're "
       JUMP            L0420
L0419: PRINT           "That's "
L0420: PRINT_RET       "hardly portable."
L0421: JE              Gef,#0b [FALSE] L0424
       TEST_ATTR       L01,#1a [FALSE] L0422
       PRINT           "They're "
       JUMP            L0423
L0422: PRINT           "That's "
L0423: PRINT_RET       "fixed in place."
L0424: JE              Gef,#0c [FALSE] L0425
       PRINT_PADDR     S112
       NEW_LINE        
       RTRUE           
L0425: JE              Gef,#0d [FALSE] L0426
       PRINT           "(putting "
       CALL_2N         R0975 (L01)
       PRINT           " into "
       CALL_2N         R0975 (L02)
       PRINT           " to make room)
"
       STORE           G05,#00
       RTRUE           
L0426: JE              Gef,#0e [FALSE] L0427
       PRINT           "You can't reach into "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0427: JE              Gef,#0f [FALSE] L0428
       PRINT           "You cannot carry "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0428: JE              Gef,#10 [FALSE] L0429
       CALL_2N         R0976 (G28)
       PRINT           " picks up "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0429: RTRUE           
L0430: JE              Ge9,#41 [FALSE] L0431
       PRINT_RET       "You taste nothing unexpected."
L0431: JE              Ge9,#42 [FALSE] L0434
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0432
       PRINT_RET       "You talk to yourself a while."
L0432: JE              Gef,#02 [FALSE] L0433
       PRINT_RET       "This provokes no reaction."
L0433: RTRUE           
L0434: JE              Ge9,#43 [FALSE] L0435
       PRINT_RET       "What a good idea."
L0435: JE              Ge9,#44 [FALSE] L0438
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0436
       PRINT_RET       "Futile."
L0436: JE              Gef,#02 [FALSE] L0437
       PRINT_PADDR     S113
       NEW_LINE        
       RTRUE           
L0437: RTRUE           
L0438: JE              Ge9,#45 [FALSE] L0439
       PRINT_PADDR     S114
       NEW_LINE        
       RTRUE           
L0439: JE              Ge9,#46 [FALSE] L0446
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0440
       PRINT_RET       "Keep your hands to yourself!"
L0440: JE              Gef,#02 [FALSE] L0441
       PRINT_RET       "You feel nothing unexpected."
L0441: JE              Gef,#03 [FALSE] L0442
       PRINT_RET       "If you think that'll help."
L0442: JE              Gef,#04 [FALSE] L0443
       CALL_2N         R0976 (G28)
       PRINT           " touches "
       CALL_2N         R0069 (L01)
       PRINT           ".
"
       JUMP            L0445
L0443: JE              Gef,#05 [FALSE] L0444
       CALL_2N         R0976 (G28)
       PRINT           " touches you.
"
       JUMP            L0445
L0444: JE              Gef,#06 [FALSE] L0445
       CALL_2N         R0976 (G28)
       PRINT           " touches "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0445: RTRUE           
L0446: JE              Ge9,#47 [FALSE] L0456
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0449
       TEST_ATTR       L01,#1a [FALSE] L0447
       PRINT           "They don't "
       JUMP            L0448
L0447: PRINT           "That doesn't "
L0448: PRINT_PADDR     S115
       NEW_LINE        
       RTRUE           
L0449: JE              Gef,#02 [FALSE] L0450
       CALL_2N         R0067 (L01)
       PRINT_RET       " unlocked at the moment."
L0450: JE              Gef,#03 [FALSE] L0453
       TEST_ATTR       L01,#1a [FALSE] L0451
       PRINT           "Those don't "
       JUMP            L0452
L0451: PRINT           "That doesn't "
L0452: PRINT_RET       "seem to fit the lock."
L0453: JE              Gef,#04 [FALSE] L0454
       PRINT           "You unlock "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0454: JE              Gef,#05 [FALSE] L0455
       CALL_2N         R0976 (G28)
       PRINT           " unlocks "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0455: RTRUE           
L0456: JE              Ge9,#04 [FALSE] L0459
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0457
       PRINT_PADDR     S116
       NEW_LINE        
       RTRUE           
L0457: JE              Gef,#02 [FALSE] L0458
       PRINT_PADDR     S117
       NEW_LINE        
       RTRUE           
L0458: RTRUE           
L0459: JE              Ge9,#48 [FALSE] L0462
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0460
       PRINT_RET       "Time passes."
L0460: JE              Gef,#02 [FALSE] L0461
       CALL_2N         R0976 (G28)
       PRINT           " waits.
"
L0461: RTRUE           
L0462: JE              Ge9,#49 [FALSE] L0463
       PRINT_PADDR     S118
       NEW_LINE        
       RTRUE           
L0463: JE              Ge9,#4a [FALSE] L0464
       PRINT_RET       "That seems unnecessary."
L0464: JE              Ge9,#4b [FALSE] L0468
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0465
       PRINT           "But you aren't holding "
       CALL_2N         R0062 (L01)
       PRINT_RET       "."
L0465: JE              Gef,#02 [FALSE] L0466
       PRINT           "You look ridiculous waving "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0466: JE              Gef,#03 [FALSE] L0467
       CALL_2N         R0976 (G28)
       PRINT           " waves "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0467: RTRUE           
L0468: JE              Ge9,#4c [FALSE] L0469
       PRINT_RET       "You wave, feeling foolish."
L0469: JE              Ge9,#4d [FALSE] L0474
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0470
       PRINT           "You can't wear "
       CALL_2N         R0062 (L01)
       PRINT_RET       "!"
L0470: JE              Gef,#02 [FALSE] L0471
       PRINT           "You're not holding "
       CALL_2N         R0062 (L01)
       PRINT_RET       "!"
L0471: JE              Gef,#03 [FALSE] L0472
       PRINT           "You're already wearing "
       CALL_2N         R0062 (L01)
       PRINT_RET       "!"
L0472: JE              Gef,#04 [FALSE] L0473
       PRINT           "You put on "
       CALL_2N         R0975 (L01)
       PRINT_RET       "."
L0473: JE              Gef,#05 [FALSE] L0474
       CALL_2N         R0976 (G28)
       PRINT           " puts on "
       CALL_2N         R0975 (L01)
       PRINT           ".
"
L0474: RTRUE           

Routine R0071, 6 locals

       PUSH            Ge9
       STORE           Ge9,L00
       JZ              L01 [FALSE] L0001
       STORE           L01,#01
L0001: PUSH            G2b
       STORE           G70,L00
       STORE           G71,L01
       STORE           G72,L02
       STORE           G73,L03
       STORE           Gef,L00
       JE              Gef,#1001 [FALSE] L0002
       CALL_1S         R1169 -> L04
       JUMP            L0004
L0002: JE              Gef,#1000 [FALSE] L0003
       CALL_1S         R1170 -> L04
       JUMP            L0004
L0003: CALL_1S         R1171 -> L04
L0004: STORE           G2b,Ge9
       JZ              L04 [FALSE] L0005
       CALL_VS         R0112 (#0006,#004b) -> L04
L0005: PULL            G2b
       JZ              L04 [FALSE] L0006
       CALL_VN         R0070 (L01,L02,L03)
L0006: PULL            Ge9
       RTRUE           

Routine R0072, 2 locals

L0001: JZ              L00 [TRUE] L0008
       TEST_ATTR       L00,#08 [TRUE] RTRUE
       GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: PULL            L01
       JZ              L01 [TRUE] L0004
L0003: CALL_2S         R0073 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       GET_SIBLING     L01 -> L01 [TRUE] L0003
L0004: TEST_ATTR       L00,#04 [FALSE] L0005
       TEST_ATTR       L00,#0d [TRUE] L0005
       TEST_ATTR       L00,#14 [FALSE] RFALSE
L0005: CALL_VS         R1284 (L00,#08) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       GET_PROP        L00,#08 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0006
       GET_PROP        L00,#08 -> Gef
       STORE           L00,Gef
       JUMP            L0007
L0006: GET_PARENT      L00 -> L00
L0007: JUMP            L0001
L0008: RFALSE          

Routine R0073, 5 locals

       JZ              L00 [TRUE] RFALSE
       TEST_ATTR       L00,#08 [TRUE] RTRUE
       CALL_2S         R0078 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0075 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L01
       JZ              L01 [TRUE] L0003
L0002: CALL_2S         R0073 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       GET_SIBLING     L01 -> L01 [TRUE] L0002
L0003: GET_PROP_ADDR   L00,#04 -> Gef
       STORE           L02,Gef
       GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              L02 [TRUE] L0008
       LOADW           L02,#00 -> -(SP)
       CALL_VS         R1288 ((SP)+) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0004
       STORE           G59,#00
       STORE           G58,#01
       STORE           L03,G52
       STORE           L04,G49
       STORE           G52,#05
       STORE           G49,#00
       CALL_VN         R0112 (L00,#04)
       STORE           G52,L03
       STORE           G49,L04
       STORE           G58,#00
       JE              G59,#01 [TRUE] RTRUE
       JUMP            L0008
L0004: STORE           L01,#00
L0005: GET_PROP_ADDR   L00,#04 -> Gef
       JZ              Gef [TRUE] L0006
       GET_PROP_LEN    Gef -> Gef
L0006: PUSH            Gef
       MUL             #02,L01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0008
       LOADW           L02,L01 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       LOADW           L02,L01 -> -(SP)
       CALL_2S         R0073 ((SP)+) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
L0007: INC             L01
       JUMP            L0005
L0008: CALL_2S         R0074 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0074, 3 locals

       CALL_VS         R1284 (L00,#07) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       GET_PROP        L00,#07 -> Gef
       STORE           L01,Gef
L0001: JZ              L01 [TRUE] L0003
       GET_PROP        L01,#09 -> Gef
       STORE           L02,Gef
       TEST_ATTR       L01,#08 [TRUE] RTRUE
       CALL_2S         R0073 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VS         R1284 (L01,#07) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0074 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: STORE           L01,L02
       JUMP            L0001
L0003: RFALSE          

Routine R0075, 1 local

       JE              L00,G22 [TRUE] RFALSE
       TEST_ATTR       L00,#14 [TRUE] RFALSE
       TEST_ATTR       L00,#11 [TRUE] RFALSE
       TEST_ATTR       L00,#01 [TRUE] RFALSE
       TEST_ATTR       L00,#04 [FALSE] L0003
       TEST_ATTR       L00,#0d [FALSE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: TEST_ATTR       L00,#07 [FALSE] L0004
       PUSH            #00
       JUMP            L0005
L0004: PUSH            #01
L0005: RET_POPPED      

Routine R0076, 1 local

       STORE           L00,G87
       GET_PARENT      G22 -> -(SP)
       CALL_2S         R0072 ((SP)+) -> G87
       JZ              L00 [FALSE] L0001
       JZ              G87 [FALSE] L0001
       STORE           G02,#07
       RFALSE          
L0001: JZ              L00 [FALSE] L0002
       JE              G87,#01 [FALSE] L0002
       STORE           G02,G23
       CALL_2N         R0904 (#0b)
       RFALSE          
L0002: JE              L00,#01 [FALSE] L0004
       JZ              G87 [FALSE] L0004
       STORE           G02,#07
       CALL_1N         R0946
       CALL_2N         R0905 (#0a)
       CALL_2S         R0906 (#0a) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_VN         R0071 (#1001,#09)
L0003: CALL_2N         R0907 (#0a)
       RFALSE          
L0004: JE              L00,#01 [FALSE] L0005
       JE              G87,#01 [FALSE] L0005
       STORE           G02,G23
       RFALSE          
L0005: RFALSE          

Routine R0077, 0 locals

       GET_PARENT      G22 -> -(SP)
       CALL_2S         R0072 ((SP)+) -> G87
       JZ              G87 [TRUE] L0001
       STORE           G02,G23
       JUMP            L0002
L0001: STORE           G02,#07
L0002: RFALSE          

Routine R0078, 1 local

       TEST_ATTR       L00,#11 [TRUE] RTRUE
       TEST_ATTR       L00,#14 [TRUE] RTRUE
       TEST_ATTR       L00,#01 [TRUE] RTRUE
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0d [TRUE] RTRUE
L0001: RFALSE          

Routine R0079, 1 local

       JZ              L00 [TRUE] L0001
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0d [TRUE] L0001
       TEST_ATTR       L00,#14 [TRUE] L0001
       RFALSE          
L0001: JZ              L00 [TRUE] L0002
       CALL_2S         R1110 (L00) -> L00
L0002: RET             L00

Routine R0080, 2 locals

       JE              G02,#07 [FALSE] L0001
       STORE           G24,#07
       STORE           G25,#00
       JUMP            L0005
L0001: STORE           G24,G22
L0002: JZ              #01 [TRUE] L0004
       CALL_2S         R0079 (G24) -> L01
       JZ              L01 [FALSE] L0003
       JUMP            L0004
L0003: STORE           G24,L01
       INC             L00
       JUMP            L0002
L0004: STORE           G25,L00
L0005: RTRUE           

Routine R0081, 2 locals

       JE              L00,G22 [FALSE] L0001
       JE              G02,#07 [FALSE] L0001
       RET             #07
L0001: GET_PARENT      L00 -> L01
       JZ              L01 [FALSE] L0002
       RET             L00
L0002: CALL_2S         R0079 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0079 (L01) -> L01
       JUMP            L0002
L0003: RET             L01

Routine R0082, 6 locals

       JE              L03,G22 [TRUE] L0002
       CALL_2S         R1111 (G22) -> -(SP)
       CALL_2S         R1111 (L03) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0002
       CALL_VS         R0051 (L00,#0015) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0051 (L00,#0019) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: STORE           L05,#00
       JUMP            L0008
L0002: STORE           G37,L00
       STORE           G38,L01
       STORE           G39,L03
       JE              L03,G28 [FALSE] L0003
       STORE           G39,#00
L0003: STORE           L04,G05
       STORE           G05,#00
       CALL_VS         R1041 (#0e,#00,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_1S         R1050 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           L05,#00
       JUMP            L0005
L0004: STORE           L05,#01
L0005: JUMP            L0007
L0006: STORE           L05,#00
L0007: JZ              G05 [FALSE] L0008
       STORE           G05,L04
L0008: STORE           G38,#00
       RET             L05

Routine R0083, 5 locals

       STORE           L04,G39
       JZ              L04 [FALSE] L0001
       STORE           L04,G28
L0001: CALL_VS         R1112 (L04,G37) -> L00
       JZ              L00 [FALSE] L0005
       CALL_2S         R1111 (G37) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_VS         R0051 (G37,#0015) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0051 (G37,#0019) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       PUSH            #00
       JUMP            L0003
L0002: PUSH            #01
L0003: JZ              (SP)+ [FALSE] L0005
       JZ              G39 [FALSE] L0004
       CALL_VN         R0120 (#40,#08,G37)
L0004: CALL_1N         R1045
       RTRUE           
L0005: CALL_2S         R1109 (L04) -> -(SP)
       JE              (SP)+,L00 [TRUE] L0009
       CALL_2S         R1109 (L04) -> -(SP)
       GET_PARENT      (SP)+ -> L01
       CALL_2S         R1109 (L01) -> L02
       STORE           L03,#00
       JE              L02,L01 [TRUE] L0006
       STORE           L01,L02
       STORE           L03,#01
L0006: JE              L01,L00 [TRUE] L0009
       JZ              L01 [TRUE] L0009
       JZ              L03 [FALSE] L0007
       CALL_VS         R1041 (#10,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_1S         R1049 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0007: CALL_2S         R1109 (L01) -> -(SP)
       GET_PARENT      (SP)+ -> L01
       CALL_2S         R1109 (L01) -> L02
       STORE           L03,#00
       JE              L02,L01 [TRUE] L0008
       STORE           L01,L02
       STORE           L03,#01
L0008: JUMP            L0006
L0009: CALL_2S         R1109 (G37) -> -(SP)
       JE              (SP)+,L00 [TRUE] L0014
       CALL_2S         R1109 (G37) -> L01
       GET_PARENT      L01 -> L01
       STORE           L03,#00
L0010: JE              L01,L00 [TRUE] L0014
       JZ              L01 [TRUE] L0014
       JZ              L03 [FALSE] L0011
       CALL_VS         R1041 (#0f,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       CALL_1S         R1049 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0011: CALL_2S         R1109 (L01) -> L01
       JE              L01,L00 [FALSE] L0012
       JUMP            L0014
L0012: GET_PARENT      L01 -> L01
       CALL_2S         R1109 (L01) -> L02
       STORE           L03,#00
       JE              L02,L01 [TRUE] L0013
       STORE           L01,L02
       STORE           L03,#01
L0013: JUMP            L0010
L0014: CALL_1N         R1044
       RTRUE           

Routine R0084, 0 locals

       TEST_ATTR       G0c,#04 [FALSE] L0002
       TEST_ATTR       G0c,#0d [TRUE] L0002
       JZ              G39 [FALSE] L0001
       CALL_VN         R0120 (#40,#09,G0c)
L0001: CALL_1N         R1045
       RTRUE           
L0002: RFALSE          

Routine R0085, 0 locals

       TEST_ATTR       G0c,#04 [FALSE] L0002
       TEST_ATTR       G0c,#0d [TRUE] L0002
       JZ              G39 [FALSE] L0001
       CALL_VN         R0120 (#40,#09,G0c)
L0001: CALL_1N         R1045
       RTRUE           
L0002: RFALSE          

Routine R0086, 0 locals

       JZ              G0c [TRUE] L0002
       CALL_VS         R0051 (G0c,#000e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       JZ              G39 [FALSE] L0001
       CALL_VN         R0120 (#40,#0e,G0c)
L0001: CALL_1N         R1045
       RTRUE           
L0002: RFALSE          

Routine R0087, 3 locals

       ADD             G88,L00 -> L01
       JG              L01,#75 [FALSE] L0001
       RFALSE          
L0001: MUL             G88,#02 -> -(SP)
       ADD             #217b,(SP)+ -> L02
       STORE           G88,L01
       RET             L02

Routine R0088, 1 local

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: SUB             L00,#217b -> -(SP)
       DIV             (SP)+,#02 -> G88
       RTRUE           

Routine R0089, 6 locals

       STORE           L01,#01
L0001: CALL_VS         R0051 (L01,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       TEST_ATTR       L01,#23 [FALSE] L0003
       INC             L05
       JZ              L03 [FALSE] L0002
       STORE           L03,L01
       GET_PARENT      L01 -> L02
       JUMP            L0003
L0002: GET_PARENT      L01 -> -(SP)
       JE              (SP)+,L02 [TRUE] L0003
       STORE           L04,#01
L0003: INC             L01
       JG              L01,#0043 [TRUE] L0004
       JUMP            L0001
L0004: JZ              L04 [TRUE] L0005
       STORE           L02,#00
L0005: JZ              L05 [FALSE] L0009
       AND             L00,#0400 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       PRINT_PADDR     G85
       PRINT           " "
       PRINT_PADDR     S040
       JUMP            L0008
L0006: AND             L00,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       PRINT_PADDR     S041
       JUMP            L0008
L0007: PRINT_PADDR     S040
L0008: JUMP            L0020
L0009: PUSH            G89
       PUSH            G8a
       CALL_2S         R0087 (L05) -> G89
       STORE           G8a,L05
       JZ              G89 [FALSE] L0010
       CALL_2S         R1025 (#2a) -> -(SP)
       RET_POPPED      
L0010: JZ              L02 [TRUE] L0016
       GET_CHILD       L02 -> -(SP) [FALSE] L0011
L0011: CALL_2N         R0093 ((SP)+)
       STORE           L05,#00
       GET_CHILD       L02 -> -(SP) [FALSE] L0012
L0012: PULL            L01
       JZ              L01 [TRUE] L0015
L0013: TEST_ATTR       L01,#23 [FALSE] L0014
       PUSH            L05
       INC             L05
       STOREW          G89,(SP)+,L01
L0014: GET_SIBLING     L01 -> L01 [TRUE] L0013
L0015: JUMP            L0019
L0016: STORE           L05,#00
       STORE           L01,#01
L0017: CALL_VS         R0051 (L01,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       TEST_ATTR       L01,#23 [FALSE] L0018
       PUSH            L05
       INC             L05
       STOREW          G89,(SP)+,L01
L0018: INC             L01
       JG              L01,#0043 [TRUE] L0019
       JUMP            L0017
L0019: CALL_VN2        R0094 (L03,L00,#00,#00,#237e)
       CALL_2N         R0088 (G89)
       PULL            G8a
       PULL            G89
L0020: RTRUE           

Routine R0090, 5 locals

       JZ              L00 [FALSE] L0001
       RFALSE          
L0001: STORE           Gef,L03
       JE              Gef,#03 [FALSE] L0002
       LOADW           G89,#00 -> -(SP)
       RET_POPPED      
L0002: JE              Gef,#02 [FALSE] L0003
       CALL_1S         R0091 -> -(SP)
       RET_POPPED      
L0003: JE              Gef,#00,#01 [FALSE] L0013
       STORE           L04,#00
L0004: JL              L04,G8a [FALSE] L0013
       LOADW           G89,L04 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0012
       JE              L03,#01 [FALSE] L0005
       INC             L04
L0005: JL              L04,G8a [FALSE] L0011
       LOADW           G89,L04 -> L00
       JZ              L02 [TRUE] L0006
       GET_PROP        L00,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [TRUE] L0006
       JUMP            L0010
L0006: AND             G60,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JZ              L01 [FALSE] L0007
       TEST_ATTR       L00,#22 [TRUE] L0007
       JUMP            L0010
L0007: AND             G60,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       TEST_ATTR       L00,#03 [TRUE] L0008
       TEST_ATTR       L00,#0f [FALSE] L0009
L0008: JUMP            L0010
L0009: RET             L00
L0010: INC             L04
       JUMP            L0005
L0011: RFALSE          
L0012: INC             L04
       JUMP            L0004
L0013: RFALSE          

Routine R0091, 6 locals

       STORE           L01,#00
L0001: JL              L01,G8a [FALSE] L0011
       LOADW           G89,L01 -> -(SP)
       GET_PROP        (SP)+,#0f -> Gef
       STORE           L02,Gef
       JZ              L02 [TRUE] L0010
       INC             L01
L0002: JL              L01,G8a [FALSE] L0003
       LOADW           G89,L01 -> -(SP)
       GET_PROP        (SP)+,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [FALSE] L0003
       INC             L01
       JUMP            L0002
L0003: JE              L01,G8a [FALSE] L0004
       LOADW           G89,#00 -> -(SP)
       RET_POPPED      
L0004: ADD             L01,#01 -> L03
L0005: JL              L03,G8a [FALSE] L0009
       LOADW           G89,L03 -> -(SP)
       GET_PROP        (SP)+,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [FALSE] L0008
       LOADW           G89,L03 -> L04
       STORE           L05,L03
L0006: JG              L05,L01 [FALSE] L0007
       SUB             L05,#01 -> -(SP)
       LOADW           G89,(SP)+ -> -(SP)
       STOREW          G89,L05,(SP)+
       DEC             L05
       JUMP            L0006
L0007: STOREW          G89,L01,L04
       INC             L01
       JE              L01,G8a [FALSE] L0008
       LOADW           G89,#00 -> -(SP)
       RET_POPPED      
L0008: INC             L03
       JUMP            L0005
L0009: DEC             L01
L0010: INC             L01
       JUMP            L0001
L0011: LOADW           G89,#00 -> -(SP)
       RET_POPPED      

Routine R0092, 4 locals

       JZ              L00 [TRUE] L0001
       GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0001: RFALSE          
L0002: JE              L03,#03 [FALSE] L0004
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0003
L0003: RET_POPPED      
L0004: JE              L03,#02 [FALSE] L0005
       CALL_2S         R0093 (L00) -> -(SP)
       RET_POPPED      
L0005: JE              L03,#01 [FALSE] L0006
       GET_SIBLING     L00 -> L00 [FALSE] L0006
L0006: JUMP            L0008
L0007: GET_SIBLING     L00 -> L00 [FALSE] L0008
L0008: JZ              L00 [FALSE] L0009
       RFALSE          
L0009: JZ              L02 [TRUE] L0010
       GET_PROP        L00,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [TRUE] L0010
       JUMP            L0007
L0010: AND             G60,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       JZ              L01 [FALSE] L0011
       TEST_ATTR       L00,#22 [TRUE] L0011
       JUMP            L0007
L0011: TEST_ATTR       L00,#1d [TRUE] L0012
       JUMP            L0007
L0012: AND             G60,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       TEST_ATTR       L00,#03 [TRUE] L0013
       TEST_ATTR       L00,#0f [FALSE] L0014
L0013: JUMP            L0007
L0014: RET             L00

Routine R0093, 4 locals

L0001: STORE           L01,L00
       JUMP            L0003
L0002: GET_SIBLING     L01 -> L01 [FALSE] L0003
L0003: JZ              L01 [TRUE] L0014
       GET_PROP        L01,#0f -> Gef
       STORE           L02,Gef
       JZ              L02 [TRUE] L0013
       GET_SIBLING     L01 -> L01 [FALSE] L0004
L0004: JUMP            L0006
L0005: GET_SIBLING     L01 -> L01 [FALSE] L0006
L0006: JZ              L01 [TRUE] L0007
       GET_PROP        L01,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [FALSE] L0007
       JUMP            L0005
L0007: JZ              L01 [FALSE] L0008
       RET             L00
L0008: GET_SIBLING     L01 -> L03 [FALSE] L0009
L0009: JUMP            L0011
L0010: GET_SIBLING     L03 -> L03 [FALSE] L0011
L0011: JZ              L03 [TRUE] L0013
       GET_PROP        L03,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [FALSE] L0012
       GET_PARENT      L00 -> -(SP)
       CALL_VS         R0110 ((SP)+,#0f,L02) -> L00
       JUMP            L0001
L0012: JUMP            L0010
L0013: JUMP            L0002
L0014: RET             L00

Routine R0094, 7 locals

       PUSH            G62
       PUSH            G60
       PUSH            G61
       PUSH            G66
       JZ              L04 [TRUE] L0001
       STORE           G62,L04
       JUMP            L0002
L0001: STORE           G62,#23c5
L0002: STORE           G60,L01
       STORE           G61,L02
       STORE           G66,#00
       AND             L01,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           G66,#01
L0003: STORE           L05,#01
L0004: CALL_VS         R0051 (L05,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       SET_ATTR        L05,#1d
       JZ              G8b [TRUE] L0005
       CALL_2S         G8b (L05) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CLEAR_ATTR      L05,#1d
L0005: INC             L05
       JG              L05,#0043 [TRUE] L0006
       JUMP            L0004
L0006: CALL_VS2        G62 (L00,L02,#00,#03) -> L00
       JZ              L00 [FALSE] L0008
       PRINT_PADDR     S040
       AND             L01,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       NEW_LINE        
L0007: JUMP            L0014
L0008: JZ              L03 [FALSE] L0009
       JZ              L04 [TRUE] L0010
L0009: CALL_VN         R0100 (L00,G61,#01)
       STORE           G05,#01
       JUMP            L0014
L0010: STORE           L06,#01
L0011: CALL_VS         R1284 (L06,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       PUT_PROP        L06,#0f,#00
L0012: INC             L06
       JG              L06,#0043 [TRUE] L0013
       JUMP            L0011
L0013: GET_PARENT      L00 -> -(SP)
       CALL_VN         R0904 (#04,(SP)+)
L0014: PULL            G66
       PULL            G61
       PULL            G60
       PULL            G62
       RTRUE           

Routine R0095, 0 locals

       GET_CHILD       G0c -> -(SP) [FALSE] L0001
L0001: CALL_VN2        R0094 ((SP)+,G60,G61,#01)
       RTRUE           

Routine R0096, 10 locals

       STORE           L05,#00
L0001: JL              L05,L01 [FALSE] L0002
       STOREB          L03,L05,#00
       INC             L05
       JUMP            L0001
L0002: STORE           L08,#01
       STORE           L05,L00
       STORE           L06,#00
       JUMP            L0004
L0003: CALL_VS2        G62 (L05,L02,G63,#01) -> L05
       INC             L06
L0004: JL              L06,L01 [FALSE] L0011
       LOADB           L03,L06 -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       STOREB          L03,L06,L08
       STOREB          L04,L08,#01
       CALL_VS2        G62 (L05,L02,G63,#01) -> L07
       ADD             L06,#01 -> L09
       JUMP            L0006
L0005: CALL_VS2        G62 (L07,L02,G63,#01) -> L07
       INC             L09
L0006: JZ              L07 [TRUE] L0009
       JL              L09,L01 [FALSE] L0009
       LOADB           L03,L09 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       CALL_VS         R0097 (L05,L07) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       LOADB           L04,L08 -> -(SP)
       JL              (SP)+,#ff [FALSE] L0007
       STORE           Gef,L04
       STORE           Gee,L08
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
L0007: STOREB          L03,L09,L08
L0008: JUMP            L0005
L0009: JL              L08,#ff [FALSE] L0010
       INC             L08
L0010: JUMP            L0003
L0011: DEC             L08
       RET             L08

Routine R0097, 2 locals

       GET_PROP        L00,#12 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] RFALSE
       GET_PROP        L01,#12 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] RFALSE
       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0098 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0002: GET_CHILD       L01 -> -(SP) [FALSE] L0003
L0003: JZ              (SP)+ [TRUE] L0004
       CALL_2S         R0098 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0004: AND             G60,#84 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       TEST_ATTR       L00,#16 [TRUE] L0005
       TEST_ATTR       L01,#16 [TRUE] RFALSE
L0005: TEST_ATTR       L01,#16 [TRUE] L0006
       TEST_ATTR       L00,#16 [TRUE] RFALSE
L0006: TEST_ATTR       L00,#08 [TRUE] L0007
       TEST_ATTR       L01,#08 [TRUE] RFALSE
L0007: TEST_ATTR       L01,#08 [TRUE] L0008
       TEST_ATTR       L00,#08 [TRUE] RFALSE
L0008: TEST_ATTR       L00,#04 [FALSE] L0011
       TEST_ATTR       L01,#04 [FALSE] RFALSE
       TEST_ATTR       L00,#0d [FALSE] L0009
       TEST_ATTR       L01,#0d [FALSE] RFALSE
L0009: TEST_ATTR       L01,#0d [FALSE] L0010
       TEST_ATTR       L00,#0d [FALSE] RFALSE
L0010: JUMP            L0012
L0011: TEST_ATTR       L01,#04 [TRUE] RFALSE
L0012: CALL_VS         R0157 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0098, 1 local

       AND             G60,#20 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       AND             G60,#10 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       TEST_ATTR       L00,#11 [TRUE] RTRUE
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0d [TRUE] RTRUE
       TEST_ATTR       L00,#14 [TRUE] RTRUE
L0001: RFALSE          

Routine R0099, 11 locals

       STORE           L05,L01
       STORE           L06,#01
       STORE           L07,L00
       STORE           L08,#00
L0001: JG              L06,L01 [TRUE] L0007
L0002: LOADB           L03,L08 -> -(SP)
       JE              (SP)+,L06 [TRUE] L0003
       INC             L08
       CALL_VS2        G62 (L07,L02,G63,#01) -> L07
       JUMP            L0002
L0003: JZ              L07 [TRUE] L0006
       GET_PROP        L07,#0f -> Gef
       STORE           L0a,Gef
       JE              L0a,G63 [TRUE] L0005
       CALL_VS         R0051 (L0a,#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       CALL_VS         R0051 (L0a,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
L0004: JE              L0a,L09 [FALSE] L0005
       DEC             L05
L0005: STORE           L09,L0a
L0006: INC             L06
       JUMP            L0001
L0007: RET             L05

Routine R0100, 15 locals

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: JZ              L02 [TRUE] L0002
       CALL_VS2        G62 (L00,L01,#00,#02) -> L00
L0002: CALL_VS2        G62 (L00,L01,#00,#00) -> L00
       JZ              L00 [FALSE] L0003
       RTRUE           
L0003: STORE           L06,L00
       STORE           L07,#00
       JUMP            L0005
L0004: CALL_VS2        G62 (L06,L01,G63,#01) -> L06
L0005: JZ              L06 [TRUE] L0006
       INC             L07
       JUMP            L0004
L0006: AND             G60,#0400 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       JE              L07,#01 [FALSE] L0007
       TEST_ATTR       L00,#1a [TRUE] L0007
       PRINT_PADDR     G85
       JUMP            L0008
L0007: PRINT_PADDR     G86
L0008: AND             G60,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       PRINT           ":
"
       JUMP            L0010
L0009: PRINT_CHAR      ' '
L0010: SUB             G60,#0400 -> G60
L0011: DIV             L07,#02 -> -(SP)
       ADD             (SP)+,#02 -> -(SP)
       CALL_2S         R0087 ((SP)+) -> L03
       DIV             L07,#02 -> -(SP)
       ADD             (SP)+,#02 -> -(SP)
       CALL_2S         R0087 ((SP)+) -> L04
       JZ              L03 [TRUE] L0012
       JZ              L04 [FALSE] L0013
L0012: CALL_2S         R1025 (#2a) -> -(SP)
       RET_POPPED      
L0013: CALL_VS2        R0096 (L00,L07,L01,L03,L04) -> L0b
       CALL_VS2        R0099 (L00,L0b,L01,L03,L04) -> L0d
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       STORE           L0e,#00
L0014: JG              L0d,#00 [FALSE] L0032
L0015: LOADB           L03,L07 -> -(SP)
       JE              (SP)+,L05 [TRUE] L0017
       INC             L07
       CALL_VS2        G62 (L06,L01,G63,#01) -> L06
       JZ              L06 [FALSE] L0016
       PRINT           "*** Error in list-writer ***
"
       JUMP            L0017
L0016: JUMP            L0015
L0017: GET_PROP        L06,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,G63 [TRUE] L0018
       GET_PROP        L06,#0f -> Gef
       PUSH            Gef
       PULL            Gef
       CALL_VS         R0051 (Gef,#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
       CALL_VS         R0051 (Gef,#04) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
L0018: STORE           L0e,#00
       JUMP            L0027
L0019: GET_PROP        L06,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0020
       JUMP            L0031
L0020: PUSH            G65
       STORE           L0c,L06
       STORE           G65,#01
       STORE           L09,L07
       STORE           L0a,L05
L0021: JL              L0a,L0b [FALSE] L0025
       GET_PROP        L06,#0f -> Gef
       PUSH            Gef
       GET_PROP        L0c,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] L0025
       INC             L0a
L0022: LOADB           L03,L09 -> -(SP)
       JE              (SP)+,L0a [TRUE] L0023
       INC             L09
       CALL_VS2        G62 (L0c,L01,G63,#01) -> L0c
       JUMP            L0022
L0023: GET_PROP        L06,#0f -> Gef
       PUSH            Gef
       GET_PROP        L0c,#0f -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] L0024
       INC             G65
L0024: JUMP            L0021
L0025: JG              G65,#01 [FALSE] L0026
       CALL_VN2        R0101 (L05,L06,L01,L04)
       GET_PROP        L06,#0f -> Gef
       STORE           L0e,Gef
       JUMP            L0028
L0026: STORE           L0e,#00
       PULL            G65
L0027: LOADB           L04,L05 -> -(SP)
       CALL_VN2        R0102 (L05,L06,L01,(SP)+)
L0028: DEC             L0d
       AND             G60,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0031
       JE              L0d,#01 [FALSE] L0030
       JG              L05,#01 [TRUE] L0029
       PRINT_PADDR     S050
       JUMP            L0030
L0029: PRINT_PADDR     S049
L0030: JG              L0d,#01 [FALSE] L0031
       PRINT_PADDR     S053
L0031: INC             L05
       JUMP            L0014
L0032: CALL_2N         R0088 (L04)
       CALL_2N         R0088 (L03)
       RTRUE           

Routine R0101, 7 locals

       STORE           L04,G60
       AND             G60,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L02,G66 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0111 ((SP)+)
L0001: CALL_VN         R0905 (#05,L01)
       CALL_VS         R0906 (#05,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       AND             G60,#fffe -> G60
       JUMP            L0011
L0002: GET_PROP        L01,#0f -> Gef
       PUSH            Gef
       CALL_VS         R0051 ((SP)+,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       STORE           L05,#00
       STORE           L06,#00
L0003: JL              L06,G65 [FALSE] L0004
       ADD             L06,L00 -> -(SP)
       LOADB           L03,(SP)+ -> -(SP)
       ADD             L05,(SP)+ -> L05
       INC             L06
       JUMP            L0003
L0004: CALL_2N         R0964 (L05)
       PRINT           " "
       GET_PROP        L01,#0f -> Gef
       PUSH            Gef
       PRINT_PADDR     (SP)+
       AND             G60,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       PRINT           " ("
L0005: AND             G60,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       PRINT           ":
"
L0006: JUMP            L0008
L0007: STORE           G67,#01
       STORE           G49,L01
       ADD             L02,G66 -> G4a
       CALL_VS         R0112 (L01,#0f) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0008
       JUMP            L0011
L0008: INC             G66
       PUSH            G63
       PUSH            G64
       PUSH            G65
       GET_PROP        L01,#0f -> Gef
       STORE           G63,Gef
       STORE           G64,L01
       CALL_VN         R0100 (L01,L02,#00)
       PULL            G65
       PULL            G64
       PULL            G63
       DEC             G66
       GET_PROP        L01,#0f -> Gef
       PUSH            Gef
       CALL_VS         R0051 ((SP)+,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       AND             L04,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       PRINT           ")"
L0009: JUMP            L0011
L0010: STORE           G67,#02
       STORE           G49,L01
       ADD             L02,G66 -> G4a
       CALL_VN         R0112 (L01,#0f)
L0011: CALL_VN         R0907 (#05,L01)
       AND             L04,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       AND             G60,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0012
       NEW_LINE        
L0012: STORE           G60,L04
       RTRUE           

Routine R0102, 5 locals

       STORE           L04,G60
       AND             G60,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L02,G66 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0111 ((SP)+)
L0001: JE              L03,#01 [FALSE] L0008
       AND             G60,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2N         R0977 (L01)
       JUMP            L0007
L0002: AND             G60,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JE              L00,#01 [FALSE] L0003
       AND             G60,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2N         R0976 (L01)
       JUMP            L0004
L0003: CALL_2N         R0975 (L01)
L0004: JUMP            L0007
L0005: JE              L00,#01 [FALSE] L0006
       AND             G60,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_2N         R0974 (L01)
       JUMP            L0007
L0006: CALL_2N         R0973 (L01)
L0007: JUMP            L0011
L0008: AND             G60,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       JE              L00,#01 [FALSE] L0009
       AND             G60,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VN         R0972 (L01,#00,L03)
       JUMP            L0010
L0009: CALL_VN         R0972 (L01,#01,L03)
L0010: PUSH            G65
       STORE           G65,L03
       CALL_VN         R0904 (#02,L01)
       PULL            G65
L0011: JG              L03,#01 [FALSE] L0012
       TEST_ATTR       L01,#1a [TRUE] L0012
       SET_ATTR        L01,#1a
       CALL_VN         R0103 (L01,L02)
       CLEAR_ATTR      L01,#1a
       JUMP            L0013
L0012: CALL_VN         R0103 (L01,L02)
L0013: STORE           G60,L04
       RTRUE           

Routine R0103, 8 locals

       STORE           G67,#02
       AND             G60,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_2N         R0905 (#03)
       CALL_2S         R0906 (#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       STORE           L07,#00
       TEST_ATTR       L00,#08 [FALSE] L0001
       TEST_ATTR       G02,#08 [TRUE] L0001
       ADD             L07,#01 -> L07
L0001: TEST_ATTR       L00,#04 [FALSE] L0002
       TEST_ATTR       L00,#0d [TRUE] L0002
       ADD             L07,#02 -> L07
L0002: TEST_ATTR       L00,#04 [FALSE] L0005
       TEST_ATTR       L00,#0d [TRUE] L0003
       TEST_ATTR       L00,#14 [FALSE] L0005
L0003: GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [FALSE] L0005
       ADD             L07,#04 -> L07
L0005: JZ              L07 [TRUE] L0006
       CALL_VN         R0071 (#1000,L07,L00)
L0006: CALL_2N         R0907 (#03)
L0007: AND             G60,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       TEST_ATTR       L00,#08 [FALSE] L0008
       TEST_ATTR       L00,#16 [FALSE] L0008
       CALL_VN         R0071 (#1000,#08,L00)
       STORE           L04,#01
       JUMP            L0010
L0008: TEST_ATTR       L00,#08 [FALSE] L0009
       CALL_VN         R0071 (#1000,#09,L00)
       STORE           L04,#01
L0009: TEST_ATTR       L00,#16 [FALSE] L0010
       CALL_VN         R0071 (#1000,#0a,L00)
       STORE           L04,#01
L0010: TEST_ATTR       L00,#04 [FALSE] L0022
       TEST_ATTR       L00,#0e [FALSE] L0019
       JZ              L04 [TRUE] L0011
       PRINT_PADDR     S048
       JUMP            L0012
L0011: CALL_VN         R0071 (#1000,#0b,L00)
L0012: TEST_ATTR       L00,#0d [FALSE] L0016
       GET_CHILD       L00 -> -(SP) [FALSE] L0013
L0013: JZ              (SP)+ [TRUE] L0014
       CALL_VN         R0071 (#1000,#0c,L00)
       JUMP            L0015
L0014: CALL_VN         R0071 (#1000,#0d,L00)
L0015: JUMP            L0018
L0016: TEST_ATTR       L00,#09 [FALSE] L0017
       TEST_ATTR       L00,#0a [FALSE] L0017
       CALL_VN         R0071 (#1000,#0f,L00)
       JUMP            L0018
L0017: CALL_VN         R0071 (#1000,#0e,L00)
L0018: STORE           L04,#01
       JUMP            L0022
L0019: GET_CHILD       L00 -> -(SP) [FALSE] L0020
L0020: JZ              (SP)+ [FALSE] L0022
       TEST_ATTR       L00,#14 [FALSE] L0022
       JZ              L04 [TRUE] L0021
       CALL_VN         R0071 (#1000,#10,L00)
       JUMP            L0022
L0021: CALL_VN         R0071 (#1000,#11,L00)
L0022: JZ              L04 [TRUE] L0023
       PRINT           ")"
L0023: STORE           L06,#00
       STORE           L05,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0024
L0024: PULL            L02
       JZ              L02 [TRUE] L0028
L0025: AND             G60,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       TEST_ATTR       L02,#03 [TRUE] L0027
       TEST_ATTR       L02,#0f [TRUE] L0027
L0026: TEST_ATTR       L02,#1d [FALSE] L0027
       INC             L06
       JZ              L05 [FALSE] L0027
       STORE           L05,L02
L0027: GET_SIBLING     L02 -> L02 [TRUE] L0025
L0028: JZ              L06 [TRUE] L0030
       AND             G60,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0030
       AND             G60,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       CALL_VN         R0071 (#1000,#12,L00)
L0029: STORE           L03,#01
L0030: JZ              L06 [TRUE] L0041
       AND             G60,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0041
       TEST_ATTR       L00,#11 [FALSE] L0035
       AND             G60,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       AND             G60,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0031
       CALL_VN         R0071 (#1000,#13,L00)
       JUMP            L0032
L0031: CALL_VN         R0071 (#1000,#14,L00)
L0032: TEST_ATTR       L00,#01 [FALSE] L0033
       PRINT_PADDR     S051
       JUMP            L0034
L0033: PRINT_PADDR     S052
L0034: STORE           L03,#01
L0035: TEST_ATTR       L00,#04 [FALSE] L0041
       TEST_ATTR       L00,#0d [TRUE] L0036
       TEST_ATTR       L00,#14 [FALSE] L0041
L0036: AND             G60,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0040
       AND             G60,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0037
       CALL_VN         R0071 (#1000,#15,L00)
       JUMP            L0038
L0037: CALL_VN         R0071 (#1000,#16,L00)
L0038: TEST_ATTR       L00,#01 [FALSE] L0039
       PRINT_PADDR     S051
       JUMP            L0040
L0039: PRINT_PADDR     S052
L0040: STORE           L03,#01
L0041: JZ              L03 [TRUE] L0044
       AND             G60,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       JG              L06,#01 [TRUE] L0042
       TEST_ATTR       L05,#1a [FALSE] L0043
L0042: PRINT_PADDR     G84
       JUMP            L0044
L0043: PRINT_PADDR     G83
L0044: AND             G60,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0045
       NEW_LINE        
L0045: JZ              L03 [TRUE] L0047
       GET_CHILD       L00 -> L00 [FALSE] L0046
L0046: PUSH            G63
       PUSH            G64
       PUSH            G65
       PUSH            G62
       STORE           G62,#23c5
       STORE           G63,#00
       STORE           G64,#00
       STORE           G65,#00
       ADD             L01,#01 -> -(SP)
       CALL_VN         R0100 (L00,(SP)+,#01)
       PULL            G62
       PULL            G65
       PULL            G64
       PULL            G63
       AND             G60,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0047
       PRINT           ")"
L0047: RTRUE           

Routine R0104, 1 local

       JZ              L00 [FALSE] L0001
       PRINT           "nothing"
       JUMP            L0002
L0001: LOADW           L00,#02 -> -(SP)
       PRINT_PADDR     (SP)+
L0002: RTRUE           

Routine R0105, 1 local

       JL              L00,#00 [TRUE] L0001
       JL              L00,#2c [FALSE] L0001
       RET             L00
L0001: LOADW           L00,#00 -> -(SP)
       RET_POPPED      

Routine R0106, 1 local

       JL              L00,#00 [TRUE] L0001
       JL              L00,#2c [FALSE] L0001
       RFALSE          
L0001: LOADW           L00,#01 -> -(SP)
       RET_POPPED      

Routine R0107, 2 locals

       JL              L00,#00 [TRUE] L0001
       JL              L00,#2c [FALSE] L0001
       RTRUE           
L0001: ADD             #02,L01 -> -(SP)
       LOADW           L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0108, 2 locals

       SUB             L00,#30 -> L01
       JL              L01,#00 [TRUE] L0001
       JG              L01,#09 [FALSE] L0002
L0001: RET             #ffff
L0002: RET             L01

Routine R0109, 3 locals

       JE              L00,L01 [FALSE] L0001
       RET             L00
L0001: JG              L00,L01 [FALSE] L0002
       STORE           L02,L00
       STORE           L00,L01
       STORE           L01,L02
L0002: DEC             L00
       SUB             L01,L00 -> -(SP)
       RANDOM          (SP)+ -> -(SP)
       ADD             (SP)+,L00 -> -(SP)
       RET_POPPED      

Routine R0110, 3 locals

L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: JZ              (SP)+ [TRUE] L0008
       GET_CHILD       L00 -> -(SP) [FALSE] L0003
L0003: CALL_VS         R1280 ((SP)+,L01) -> -(SP)
       JE              (SP)+,L02 [TRUE] L0005
       GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: INSERT_OBJ      (SP)+,""
       JUMP            L0007
L0005: GET_CHILD       L00 -> -(SP) [FALSE] L0006
L0006: INSERT_OBJ      (SP)+,""
L0007: JUMP            L0001
L0008: GET_CHILD       "" -> -(SP) [FALSE] L0009
L0009: JZ              (SP)+ [TRUE] L0011
       GET_CHILD       "" -> -(SP) [FALSE] L0010
L0010: INSERT_OBJ      (SP)+,L00
       JUMP            L0008
L0011: GET_CHILD       "" -> -(SP) [FALSE] L0012
L0012: JZ              (SP)+ [TRUE] L0014
       GET_CHILD       "" -> -(SP) [FALSE] L0013
L0013: INSERT_OBJ      (SP)+,L00
       JUMP            L0011
L0014: GET_CHILD       L00 -> -(SP) [FALSE] L0015
L0015: RET_POPPED      

Routine R0111, 1 local

L0001: JG              L00,#00 [FALSE] L0002
       PRINT           " "
       SUB             L00,#01 -> L00
       JUMP            L0001
L0002: RTRUE           

Routine R0112, 2 locals

       JE              L00,#07 [FALSE] L0001
       STORE           L00,G23
L0001: CALL_VS         R1282 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       JL              L01,#40 [FALSE] RFALSE
L0002: CALL_VS         R1281 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0113, 2 locals

       STORE           L00,#01
L0001: CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           L01,#00
       TEST_ATTR       L00,#23 [FALSE] L0002
       STORE           L01,#01
L0002: CLEAR_ATTR      L00,#23
       TEST_ATTR       L00,#22 [FALSE] L0003
       SET_ATTR        L00,#23
L0003: CLEAR_ATTR      L00,#22
       JZ              L01 [TRUE] L0004
       SET_ATTR        L00,#22
L0004: INC             L00
       JG              L00,#0043 [TRUE] L0005
       JUMP            L0001
L0005: RTRUE           

Routine R0114, 1 local

       JE              L00,#01 [TRUE] RTRUE
       JE              L00,#02 [TRUE] RTRUE
       JE              L00,#03 [TRUE] RTRUE
       RFALSE          

Routine R0115, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT           "ineffectual option"
       JUMP            L0022
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S119
       JUMP            L0022
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S120
       JUMP            L0022
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_PADDR     S121
       JUMP            L0022
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT           "American dialect option"
       JUMP            L0022
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT           "serial comma option"
       JUMP            L0022
L0006: JE              Gef,#06 [FALSE] L0007
       PRINT_PADDR     S122
       JUMP            L0022
L0007: JE              Gef,#07 [FALSE] L0008
       PRINT_PADDR     S123
       JUMP            L0022
L0008: JE              Gef,#08 [FALSE] L0009
       PRINT           "memory economy option"
       JUMP            L0022
L0009: JE              Gef,#09 [FALSE] L0010
       PRINT           "authorial modesty option"
       JUMP            L0022
L0010: JE              Gef,#0a [FALSE] L0011
       PRINT           "no scoring option"
       JUMP            L0022
L0011: JE              Gef,#0b [FALSE] L0012
       PRINT           "command line echoing option"
       JUMP            L0022
L0012: JE              Gef,#0c [FALSE] L0013
       PRINT           "undo prevention option"
       JUMP            L0022
L0013: JE              Gef,#0d [FALSE] L0014
       PRINT           "predictable randomisation option"
       JUMP            L0022
L0014: JE              Gef,#0e [FALSE] L0015
       PRINT           "fast route-finding option"
       JUMP            L0022
L0015: JE              Gef,#0f [FALSE] L0016
       PRINT           "slow route-finding option"
       JUMP            L0022
L0016: JE              Gef,#10 [FALSE] L0017
       PRINT           "numbered rules option"
       JUMP            L0022
L0017: JE              Gef,#11 [FALSE] L0018
       PRINT           "telemetry recordings option"
       JUMP            L0022
L0018: JE              Gef,#12 [FALSE] L0019
       PRINT           "no deprecated features option"
       JUMP            L0022
L0019: JE              Gef,#13 [FALSE] L0020
       PRINT           "VERBOSE room descriptions option"
       JUMP            L0022
L0020: JE              Gef,#14 [FALSE] L0021
       PRINT           "BRIEF room descriptions option"
       JUMP            L0022
L0021: JE              Gef,#15 [FALSE] L0022
       PRINT_PADDR     S124
L0022: RTRUE           

Routine R0116, 2 locals

       JZ              L01 [FALSE] L0001
       CALL_2N         R1025 (#11)
       RFALSE          
L0001: DIV             L00,L01 -> -(SP)
       RET_POPPED      

Routine R0117, 2 locals

       JZ              L01 [FALSE] L0001
       CALL_2N         R1025 (#11)
       RFALSE          
L0001: MOD             L00,L01 -> -(SP)
       RET_POPPED      

Routine R0118, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0119, 1 local

       CALL_VS         R1288 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0001
       RFALSE          
L0001: JE              Gef,#02,#01 [FALSE] L0002
       RTRUE           
L0002: JE              Gef,#03 [FALSE] L0003
       RET             #02
L0003: JE              Gef,#04 [FALSE] L0004
       RET             #03
L0004: RTRUE           

Routine R0120, 4 locals

       JE              G28,G22 [FALSE] RTRUE
       JZ              G38 [FALSE] RTRUE
       CALL_VS2        R0071 (L00,L01,L02,L03) -> -(SP)
       RET_POPPED      

Routine R0121, 4 locals

       JZ              G38 [FALSE] RTRUE
       CALL_VS2        R0071 (L00,L01,L02,L03) -> -(SP)
       RET_POPPED      

Routine R0122, 0 locals

       LOADB           #1fb3,#01 -> -(SP)
       RET_POPPED      

Routine R0123, 1 local

       MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADB           #1fb3,(SP)+ -> -(SP)
       ADD             #1e42,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0124, 1 local

       MUL             L00,#04 -> -(SP)
       LOADB           #1fb3,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0125, 5 locals

       MUL             L00,#02 -> -(SP)
       SUB             (SP)+,#01 -> L03
       MUL             L02,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       PUSH            L04
       INC             L04
       LOADW           L01,(SP)+ -> -(SP)
       PUSH            L03
       INC             L03
       STOREW          #1fb3,(SP)+,(SP)+
       LOADW           L01,L04 -> -(SP)
       STOREW          #1fb3,L03,(SP)+
       RTRUE           

Routine R0126, 5 locals

       LOADB           L01,#01 -> L04
       MUL             L00,#02 -> -(SP)
       SUB             (SP)+,#01 -> L02
       JL              L00,#01 [TRUE] L0001
       JG              L00,L04 [FALSE] L0002
L0001: RFALSE          
L0002: LOADW           L01,L02 -> L03
       JE              L03,"," [FALSE] L0003
       STORE           L03,"comma,"
L0003: JE              L03,"." [FALSE] L0004
       STORE           L03,"then"
L0004: RET             L03

Routine R0127, 3 locals

       LOADB           #1fb3,#01 -> L02
       MUL             G4e,#02 -> -(SP)
       SUB             (SP)+,#01 -> L00
       INC             G4e
       JL              G4e,#02 [TRUE] L0001
       ADD             L02,#01 -> -(SP)
       JG              G4e,(SP)+ [FALSE] L0002
L0001: RFALSE          
L0002: LOADW           #1fb3,L00 -> L01
       JE              L01,"," [FALSE] L0003
       STORE           L01,"comma,"
L0003: JE              L01,"." [FALSE] L0004
       STORE           L01,"then"
L0004: RET             L01

Routine R0128, 1 local

       LOADB           #1fb3,#01 -> L00
       JL              G4e,#01 [TRUE] L0001
       JG              G4e,L00 [FALSE] L0002
L0001: INC             G4e
       RET             #ffff
L0002: CALL_1S         R0127 -> -(SP)
       RET_POPPED      

Routine R0129, 6 locals

       DIV             L00,#64 -> L04
       MOD             L00,#64 -> -(SP)
       ADD             L04,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L05
       JL              L05,L04 [TRUE] L0001
       JL              L04,#01 [TRUE] L0001
       CALL_1S         R0122 -> -(SP)
       JG              L05,(SP)+ [FALSE] L0003
L0001: JE              L04,#01 [FALSE] L0002
       JZ              L05 [TRUE] RFALSE
L0002: CALL_VS         R1025 (#27,L04,L05) -> -(SP)
       RET_POPPED      
L0003: CALL_2S         R0123 (L04) -> L01
       CALL_2S         R0124 (L05) -> -(SP)
       CALL_2S         R0123 (L05) -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L02
       STORE           L03,L01
L0004: JG              L03,L02 [TRUE] L0005
       LOADB           L03,#00 -> -(SP)
       PRINT_CHAR      (SP)+
       INC             L03
       JUMP            L0004
L0005: RTRUE           

Routine R0130, 9 locals

       DIV             L00,#64 -> L03
       MOD             L00,#64 -> -(SP)
       ADD             L03,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L04
       JL              L04,L03 [TRUE] L0001
       JL              L03,#01 [FALSE] L0003
L0001: JE              L03,#01 [FALSE] L0002
       JZ              L04 [FALSE] L0002
       RTRUE           
L0002: CALL_VS         R1025 (#28,L03,L04) -> -(SP)
       RET_POPPED      
L0003: PUSH            G05
       PUSH            G06
       ADD             L04,#01 -> L05
       CALL_2S         R0123 (L03) -> -(SP)
       SUB             (SP)+,#1e42 -> L06
       CALL_1S         R0122 -> -(SP)
       JG              L05,(SP)+ [TRUE] L0004
       CALL_1S         R0122 -> -(SP)
       SUB             (SP)+,L05 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       MUL             #64,L05 -> -(SP)
       ADD             (SP)+,(SP)+ -> L07
L0004: STOREW          #1ebd,#00,#78
       CALL_VS2        R0013 (#1ebd,#78,#2793,L01,L07) -> L08
       STORE           L02,#00
L0005: JL              L02,L08 [FALSE] L0006
       ADD             L06,L02 -> -(SP)
       JL              (SP)+,#78 [FALSE] L0006
       ADD             #02,L02 -> -(SP)
       LOADB           #1ebd,(SP)+ -> -(SP)
       ADD             L06,L02 -> -(SP)
       STOREB          #1e42,(SP)+,(SP)+
       INC             L02
       JUMP            L0005
L0006: ADD             L06,L02 -> -(SP)
       STOREB          #1e42,#01,(SP)+
L0007: ADD             L06,L02 -> -(SP)
       JL              (SP)+,#78 [FALSE] L0008
       ADD             L06,L02 -> -(SP)
       STOREB          #1e42,(SP)+,#20
       INC             L02
       JUMP            L0007
L0008: CALL_VN         R0014 (#1e42,#1fb3)
       CALL_1S         R0122 -> -(SP)
       ADD             #64,(SP)+ -> G43
       PULL            G06
       PULL            G05
       RTRUE           

Routine R0131, 2 locals

       CALL_2N         R0965 (L00)
       JZ              L01 [TRUE] L0001
       PRINT           " "
       CALL_2N         R0129 (L01)
L0001: RTRUE           

Routine R0132, 7 locals

       DIV             L01,#64 -> L02
       MOD             L01,#64 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L03
       JL              L03,L02 [TRUE] L0001
       JL              L02,#01 [FALSE] L0003
L0001: JE              L02,#01 [FALSE] L0002
       JZ              L03 [TRUE] RFALSE
L0002: CALL_VS         R1025 (#29,L02,L03) -> -(SP)
       RET_POPPED      
L0003: CALL_VS         R1288 (L00) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0007
       MOD             L01,#64 -> L04
       STORE           L05,L02
       STORE           L06,L04
       JUMP            L0005
L0004: INC             L05
       DEC             L06
L0005: JG              L06,#00 [FALSE] L0007
       CALL_VS         L00 (L05,#00) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0006
       MUL             L05,#64 -> -(SP)
       ADD             (SP)+,G4e -> -(SP)
       SUB             (SP)+,L05 -> -(SP)
       RET_POPPED      
L0006: JUMP            L0004
L0007: RFALSE          

Routine R0133, 3 locals

       STORE           G4e,#01
       JZ              L01 [TRUE] RFALSE
       CALL_VS         R1288 (L01) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0001
       MOD             L00,#64 -> -(SP)
       DIV             L00,#64 -> -(SP)
       CALL_VS         L01 ((SP)+,(SP)+) -> L02
       JE              L02,#ffff [FALSE] RTRUE
       RFALSE          
L0001: CALL_2N         R1025 (#1d)
       RFALSE          

Routine R0134, 3 locals

       STORE           L01,#00
L0001: JL              L01,#20 [FALSE] L0002
       STOREW          #2365,L01,#0f
       STOREW          #22e5,L01,#01
       STOREW          #2325,L01,#0f
       INC             L01
       JUMP            L0001
L0002: LOADB           L00,#01 -> -(SP)
       LOADB           L00,#00 -> -(SP)
       MUL             #0100,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> G4c
       AND             G4c,#0400 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PUSH            #00
       JUMP            L0004
L0003: PUSH            #01
L0004: PULL            G4d
       AND             G4c,#03ff -> G4c
       DEC             L00
       STORE           L02,#03
       STORE           G92,#00
       STORE           L01,#00
L0005: ADD             L00,L02 -> L00
       LOADB           L00,#00 -> -(SP)
       JE              (SP)+,#0f [FALSE] L0006
       JUMP            L0008
L0006: STOREW          #2365,L01,L00
       CALL_2N         R0135 (L00)
       JE              G9c,#02 [TRUE] L0007
       INC             G92
L0007: STOREW          #22e5,L01,G9c
       STOREW          #2325,L01,G9d
       INC             L01
       JUMP            L0005
L0008: ADD             L00,#01 -> -(SP)
       RET_POPPED      

Routine R0135, 1 local

       JE              L00,#0f [FALSE] L0001
       STORE           G9c,#01
       STORE           G9d,#0f
       RTRUE           
L0001: LOADB           L00,#00 -> -(SP)
       AND             (SP)+,#0f -> G9c
       ADD             L00,#01 -> -(SP)
       LOADW           (SP)+,#00 -> G9d
       RTRUE           

Routine R0136, 2 locals

       LOADB           L00,#07 -> -(SP)
       SUB             #ff,(SP)+ -> L01
       RET             L01

Routine R0137, 2 locals

       CALL_VS         R0011 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0138, 8 locals

       STORE           G03,G1d
       STORE           G04,G1a
L0001: JZ              #01 [TRUE] L0025
       STORE           L03,#00
L0002: JL              L03,#40 [FALSE] L0003
       LOADB           L00,L03 -> -(SP)
       STOREB          #23a5,L03,(SP)+
       INC             L03
       JUMP            L0002
L0003: STOREB          L00,#00,#78
       STOREB          L01,#00,#0f
       CALL_1N         R0955
       CALL_1N         R0959
       CALL_VN         R0137 (L00,L01)
       LOADB           L01,#01 -> L02
       JZ              L02 [FALSE] L0005
       PUSH            G35
       STORE           G35,#14
       STORE           G43,#64
       CALL_2N         R0905 (#15)
       CALL_2S         R0906 (#15) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       CALL_VN         R0071 (#1001,#0a)
L0004: CALL_2N         R0907 (#15)
       PULL            G35
       JUMP            L0001
L0005: LOADW           L01,#01 -> L04
       JE              L04,"oops","o","oops" [FALSE] L0020
       JZ              G97 [FALSE] L0006
       CALL_VN         R0071 (#1001,#0e)
       JUMP            L0001
L0006: JE              L02,#01 [FALSE] L0007
       CALL_VN         R0071 (#1001,#0f)
       JUMP            L0001
L0007: JG              L02,#02 [FALSE] L0008
       CALL_VN         R0071 (#1001,#10)
       JUMP            L0001
L0008: STORE           L03,#00
L0009: JL              L03,#78 [FALSE] L0010
       LOADB           L00,L03 -> -(SP)
       STOREB          #1ebd,L03,(SP)+
       INC             L03
       JUMP            L0009
L0010: LOADB           L01,#09 -> L06
       LOADB           L01,#08 -> L07
       STORE           L03,#00
L0011: JL              L03,#40 [FALSE] L0012
       LOADB           #23a5,L03 -> -(SP)
       STOREB          L00,L03,(SP)+
       INC             L03
       JUMP            L0011
L0012: CALL_VN         R0014 (L00,L01)
       MUL             #04,G97 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADB           L01,(SP)+ -> L04
       MUL             #04,G97 -> -(SP)
       LOADB           L01,(SP)+ -> L05
       STORE           L03,#00
L0013: JL              L03,L05 [FALSE] L0014
       ADD             L03,L04 -> -(SP)
       STOREB          L00,(SP)+,#20
       INC             L03
       JUMP            L0013
L0014: JL              L05,L07 [FALSE] L0017
       STORE           L03,#77
L0015: ADD             L04,L07 -> -(SP)
       JL              L03,(SP)+ [TRUE] L0016
       SUB             L03,L07 -> -(SP)
       ADD             (SP)+,L05 -> -(SP)
       LOADB           L00,(SP)+ -> -(SP)
       STOREB          L00,L03,(SP)+
       DEC             L03
       JUMP            L0015
L0016: SUB             L07,L05 -> -(SP)
       LOADB           L00,#01 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       STOREB          L00,#01,(SP)+
L0017: STORE           L03,#00
L0018: JL              L03,L07 [FALSE] L0019
       ADD             L03,L06 -> -(SP)
       LOADB           #1ebd,(SP)+ -> -(SP)
       ADD             L03,L04 -> -(SP)
       STOREB          L00,(SP)+,(SP)+
       INC             L03
       JUMP            L0018
L0019: CALL_VN         R0014 (L00,L01)
       LOADB           L01,#01 -> L02
       RET             L02
L0020: JE              L04,"undo","undo","undo" [FALSE] L0021
       JE              L02,#01 [FALSE] L0021
       CALL_1N         R0932
       JUMP            L0001
L0021: CALL_1S         R0038 -> L03
       STORE           G15,#02
       JE              L03,#ffff [FALSE] L0022
       STORE           G15,#00
L0022: JZ              L03 [FALSE] L0023
       STORE           G15,#01
L0023: JE              L03,#02 [FALSE] L0024
       CALL_1N         R0033
       CALL_2N         R0026 (#04)
       CALL_1N         R0961
       PRINT           "
"
       CALL_2N         R0026 (#00)
       CALL_VN         R0071 (#1001,#0d)
       JUMP            L0001
L0024: RET             L02
       JUMP            L0001
L0025: RTRUE           

Routine R0139, 10 locals

       STORE           G96,#00
       STOREW          #1e22,#0000,#00
       STOREW          #1e22,#0001,#00
       STOREW          #1e22,#0002,#00
       STOREW          #1e22,#0003,#00
       STORE           G2c,#00
       JE              G99,#01 [FALSE] L0001
       STORE           G99,#00
       CALL_VN         R0014 (#1e42,#1fb3)
       JUMP            L0003
L0001: STORE           G96,#00
       CALL_2S         R0081 (G22) -> G29
       CALL_2N         R0905 (#0f)
       CALL_2S         R0906 (#0f) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VN         R0138 (#1e42,#1fb3)
       CALL_1S         R0122 -> -(SP)
       ADD             #64,(SP)+ -> G43
       CALL_1S         R0122 -> G4f
L0002: CALL_2S         R0907 (#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JUMP            L0001
L0003: STORE           G8e,#01
       CALL_1S         R0122 -> G4f
       STORE           G4e,#01
       CALL_1N         R0057
       CALL_VN         R0014 (#1e42,#1fb3)
       CALL_1S         R0122 -> G4f
       STORE           L06,#00
       STORE           G51,#01
       STORE           G28,G22
       CALL_2S         R0081 (G22) -> G29
       STORE           G9b,#00
L0004: STORE           G53,#00
       STORE           G4c,#ffff
L0005: STORE           G4e,G51
       CALL_1S         R0128 -> G50
       JE              G50,#ffff [FALSE] L0006
       STORE           G8c,#01
       JUMP            L0099
L0006: JE              G50,"g","again" [FALSE] L0007
       STORE           G50,"again"
L0007: JE              G50,"again" [FALSE] L0012
       JE              G28,G22 [TRUE] L0008
       CALL_VN         R0071 (#1001,#14)
       JUMP            L0001
L0008: LOADB           #1f38,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       CALL_VN         R0071 (#1001,#15)
       JUMP            L0001
L0009: STORE           L04,#00
L0010: JL              L04,#78 [FALSE] L0011
       LOADB           #1f38,L04 -> -(SP)
       STOREB          #1e42,L04,(SP)+
       INC             L04
       JUMP            L0010
L0011: CALL_VN         R0014 (#1e42,#1fb3)
       CALL_1S         R0122 -> G4f
       CALL_1S         R0122 -> -(SP)
       ADD             #64,(SP)+ -> G43
       JUMP            L0003
L0012: JE              G50,"again" [TRUE] L0014
       STORE           L04,#00
L0013: JL              L04,#78 [FALSE] L0014
       LOADB           #1e42,L04 -> -(SP)
       STOREB          #1f38,L04,(SP)+
       INC             L04
       JUMP            L0013
L0014: JZ              G9b [FALSE] L0021
       STORE           L05,G51
       CALL_VS         R0112 (G28,#25) -> L04
       JE              L04,#00,#01 [TRUE] L0015
       CALL_2S         R0016 (L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       STORE           G9b,G51
       SUB             #00,L04 -> L04
L0015: JE              L04,#01 [FALSE] L0018
       STOREW          #1e22,#0000,G2b
       STOREW          #1e22,#0001,#00
       STOREW          #1e22,#0002,G32
       STOREW          #1e22,#0003,G33
       JZ              G32 [TRUE] L0016
       STOREW          #1e22,#0001,#01
L0016: JZ              G33 [TRUE] L0017
       STOREW          #1e22,#0001,#02
L0017: RTRUE           
L0018: JZ              L04 [TRUE] L0019
       STORE           G50,L04
       DEC             G4e
       DEC             G51
       JUMP            L0020
L0019: STORE           G4e,G51
       CALL_1S         R0127 -> G50
L0020: JUMP            L0022
L0021: STORE           G9b,#00
L0022: JZ              G50 [TRUE] L0023
       LOADB           G50,#06 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0025
L0023: STORE           G4e,G51
       STORE           Ga5,#00
       STORE           G9e,#00
       STORE           G4b,#00
       PUSH            G28
       PUSH            G2b
       PUSH            G4c
       STORE           G28,G22
       STORE           G2c,#00
       STORE           G2b,#19
       STORE           G4c,#19
       CALL_VS         R0149 (#05,#00,#00) -> L08
       PULL            G4c
       PULL            G2b
       PULL            G28
       JE              L08,#2710 [FALSE] L0024
       JUMP            L0003
L0024: JZ              L08 [TRUE] L0025
       CALL_VS         R0051 (L08,#001c) -> -(SP)
       JZ              (SP)+ [TRUE] L0025
       STOREW          #1e22,#0000,#19
       STOREW          #1e22,#0001,#01
       STOREW          #1e22,#0002,L08
       JUMP            L0141
L0025: JE              G28,G22 [FALSE] L0028
       STORE           L05,#02
L0026: JG              L05,G4f [TRUE] L0028
       CALL_1S         R0127 -> L04
       JE              L04,"comma," [FALSE] L0027
       JUMP            L0029
L0027: INC             L05
       JUMP            L0026
L0028: JUMP            L0038
L0029: SUB             G4e,#01 -> L05
       JE              L05,#01 [FALSE] L0030
       CALL_VN         R0071 (#1001,#16)
       JUMP            L0001
L0030: STORE           G4e,#01
       STORE           Ga0,#01
       STORE           G52,#01
       CALL_VS         R0149 (G22,G29,#06) -> L08
       STORE           G52,#00
       JE              L08,#2710 [FALSE] L0031
       JUMP            L0003
L0031: JZ              L08 [FALSE] L0033
       JZ              G50 [TRUE] L0032
       LOADB           G50,#06 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0032
       JUMP            L0038
L0032: CALL_VN         R0071 (#1001,#17)
       JUMP            L0001
L0033: TEST_ATTR       L08,#01 [TRUE] L0034
       TEST_ATTR       L08,#13 [TRUE] L0034
       CALL_VN         R0071 (#1001,#18,L08)
       JUMP            L0001
L0034: JE              G4e,L05 [TRUE] L0036
       JZ              G50 [TRUE] L0035
       LOADB           G50,#06 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0035
       JUMP            L0038
L0035: CALL_VN         R0071 (#1001,#19)
       JUMP            L0001
L0036: CALL_2N         R0185 (L08)
       ADD             L05,#01 -> G51
       JE              L08,G22 [FALSE] L0037
       STORE           G4e,G51
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"again","g","again" [FALSE] L0037
       CALL_VN         R0071 (#1001,#14)
       JUMP            L0001
L0037: STORE           G28,L08
       CALL_2S         R0081 (L08) -> G29
       JUMP            L0005
L0038: JZ              G50 [TRUE] L0039
       LOADB           G50,#06 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0041
L0039: JE              G28,G22 [FALSE] L0040
       CALL_2S         R1207 (G50) -> G50
       JZ              G50 [TRUE] L0040
       JUMP            L0041
L0040: STORE           G8c,#0c
       JUMP            L0099
L0041: LOADB           G50,#06 -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       DIV             (SP)+,#02 -> G2c
       JE              G2c,#01 [FALSE] L0042
       JE              G28,G22 [TRUE] L0042
       STORE           G8c,#0c
       STORE           G2c,#00
       JUMP            L0099
L0042: CALL_2S         R0136 (G50) -> L04
       LOADW           #0e,#00 -> -(SP)
       LOADW           (SP)+,L04 -> L00
       LOADB           L00,#00 -> -(SP)
       SUB             (SP)+,#01 -> L02
       STORE           G41,#ffff
       STORE           G42,#ffff
       STORE           G8c,#01
       STORE           G8d,#01
       STORE           G30,#00
       ADD             L00,#01 -> L03
       STORE           L01,#00
L0043: JG              L01,L02 [TRUE] L0099
       STORE           L04,#00
L0044: JL              L04,#20 [FALSE] L0045
       STOREW          #2365,L04,#0f
       STOREW          #22e5,L04,#01
       STOREW          #2325,L04,#0f
       INC             L04
       JUMP            L0044
L0045: CALL_2S         R0134 (L03) -> L03
       STORE           G93,#00
       STORE           G4b,#00
       STORE           G91,#00
       STORE           G3a,#00
       STOREW          #1d5a,#00,#00
       STORE           Ga4,#00
       STORE           G35,#01
       ADD             G51,#01 -> G4e
       STORE           G56,#ffff
       STORE           Ga5,#00
       STORE           L04,#00
       STORE           L09,#00
       STORE           G8f,#00
L0046: LOADW           #2365,G8f -> -(SP)
       JE              (SP)+,#0f [TRUE] L0065
       STORE           G53,#00
       LOADW           #22e5,G8f -> -(SP)
       JE              (SP)+,#02 [TRUE] L0047
       INC             L04
L0047: LOADW           #22e5,G8f -> -(SP)
       JE              (SP)+,#01 [FALSE] L0064
       LOADW           #2325,G8f -> -(SP)
       JE              (SP)+,#02 [FALSE] L0048
       STORE           L09,#01
L0048: LOADW           #2325,G8f -> -(SP)
       JE              (SP)+,#04,#05 [FALSE] L0064
       JE              L04,#01 [FALSE] L0064
       INC             G8f
       LOADW           #22e5,G8f -> -(SP)
       JE              (SP)+,#02 [FALSE] L0063
L0049: CALL_1S         R0127 -> L08
       JG              G4e,G4f [TRUE] L0050
       JZ              L08 [TRUE] L0049
       LOADB           L08,#06 -> -(SP)
       AND             (SP)+,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0049
L0050: JG              G4e,G4f [FALSE] L0051
       JUMP            L0095
L0051: CALL_VS         R0147 (L08,G8f) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0056
       LOADW           #2365,G8f -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0054
       INC             G8f
L0052: LOADW           #2365,G8f -> -(SP)
       JE              (SP)+,#0f [TRUE] L0053
       LOADW           #2365,G8f -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0053
       INC             G8f
       JUMP            L0052
L0053: JUMP            L0055
L0054: INC             G8f
L0055: JUMP            L0059
L0056: CALL_1S         R0127 -> L08
       JL              G4e,G4f [FALSE] L0057
       JZ              L08 [TRUE] L0056
       LOADB           L08,#06 -> -(SP)
       AND             (SP)+,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0056
L0057: JZ              L08 [TRUE] L0058
       LOADB           L08,#06 -> -(SP)
       AND             (SP)+,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0058
       JUMP            L0060
L0058: JUMP            L0095
L0059: CALL_1S         R0127 -> L08
L0060: LOADW           #22e5,G8f -> -(SP)
       JE              (SP)+,#02 [TRUE] L0051
       DEC             G4e
       LOADW           #22e5,G8f -> -(SP)
       JE              (SP)+,#01 [FALSE] L0063
       LOADW           #2325,G8f -> -(SP)
       JZ              (SP)+ [FALSE] L0063
       CALL_1S         R0145 -> L08
       JZ              L08 [TRUE] L0061
       STORE           G35,L08
L0061: LOADW           #1e22,#0002 -> L06
       PUSH            L06
       PUSH            G4b
       STORE           G4b,#01
       STOREW          #1e22,#0002,#00
       CALL_VS         R0149 (G29,G28,#00) -> L08
       PULL            G4b
       PULL            L06
       STOREW          #1e22,#0002,L06
       JE              L08,#2710 [FALSE] L0062
       JUMP            L0003
L0062: JL              L08,#02 [TRUE] L0063
       STORE           G56,L08
L0063: JUMP            L0065
L0064: INC             G8f
       JUMP            L0046
L0065: STORE           Gae,#00
       JZ              L09 [TRUE] L0066
       JE              G92,#01 [FALSE] L0066
       JE              G4c,#40 [FALSE] L0066
       STORE           Gae,#01
L0066: STORE           G93,#00
       STORE           G4b,#00
       STORE           G91,#00
       STORE           G3a,#00
       STOREW          #1d5a,#00,#00
       STORE           G35,#01
       ADD             G51,#01 -> G4e
       STORE           G8f,#01
L0067: STOREW          #2265,G8f,#ffff
       STORE           G53,#00
       SUB             G8f,#01 -> -(SP)
       LOADW           #2365,(SP)+ -> L07
       LOADW           #2365,G8f -> Ga0
       JE              L07,#0f [TRUE] L0081
       STORE           G52,#00
       CALL_2N         R0135 (L07)
       SUB             G8f,#01 -> -(SP)
       CALL_VS2        R0141 (G9c,G9d,(SP)+,L07) -> L08
L0068: JL              L08,#ff00 [TRUE] L0069
       JL              L08,#ffff [FALSE] L0069
       ADD             L08,#0100 -> -(SP)
       CALL_VS         R0141 (#01,(SP)+) -> L08
       JUMP            L0068
L0069: STORE           G52,#00
       JZ              L08 [FALSE] L0072
       JE              G9c,#02 [TRUE] L0071
       JE              G9c,#01 [FALSE] L0070
       JE              G9d,#09 [TRUE] L0071
L0070: DEC             G92
L0071: STORE           L08,#01
       JUMP            L0078
L0072: JL              L08,#00 [FALSE] L0073
       STORE           L08,#00
       JUMP            L0078
L0073: JE              L08,#2710 [TRUE] L0078
       JE              L08,#01 [FALSE] L0076
       JZ              G91 [FALSE] L0074
       STORE           G3e,G3d
       JUMP            L0075
L0074: STORE           G3f,G3d
L0075: INC             G91
       STORE           L08,#01
L0076: JE              L08,#02 [FALSE] L0077
       STORE           L08,#00
L0077: ADD             G4b,#0002 -> -(SP)
       STOREW          #1e22,(SP)+,L08
       INC             G4b
       STOREW          #2265,G8f,L08
       STORE           L08,#01
L0078: JE              L08,#2710 [FALSE] L0079
       JUMP            L0003
L0079: JZ              L08 [FALSE] L0080
       JUMP            L0095
L0080: JUMP            L0094
L0081: JG              G4e,G4f [TRUE] L0086
       CALL_1S         R0127 -> L08
       JE              L08,"then","then","then" [TRUE] L0082
       JE              L08,"comma," [FALSE] L0083
L0082: STORE           G99,#01
       SUB             G4e,#01 -> G9a
       JUMP            L0086
L0083: STORE           L09,#00
L0084: JL              L09,#20 [FALSE] L0085
       LOADW           #2265,L09 -> -(SP)
       STOREW          #22a5,L09,(SP)+
       INC             L09
       JUMP            L0084
L0085: STORE           G90,G8f
       STORE           G35,#02
       JUMP            L0095
L0086: JL              G4b,#01 [TRUE] L0087
       LOADW           #1e22,#0002 -> -(SP)
       JZ              (SP)+ [FALSE] L0087
       LOADW           #1e22,#0003 -> -(SP)
       CALL_2S         R0151 ((SP)+) -> L08
       JZ              L08 [TRUE] L0087
       STORE           G35,L08
       STOREW          #1e22,#0000,G4c
       JUMP            L0095
L0087: JL              G4b,#02 [TRUE] L0088
       LOADW           #1e22,#0003 -> -(SP)
       JZ              (SP)+ [FALSE] L0088
       LOADW           #1e22,#0002 -> -(SP)
       CALL_2S         R0151 ((SP)+) -> L08
       JZ              L08 [TRUE] L0088
       STORE           G35,L08
       JUMP            L0095
L0088: JE              Gae,#02 [FALSE] L0089
       LOADW           #1e22,#0002 -> -(SP)
       JE              (SP)+,G28 [FALSE] L0089
       STORE           G8c,#11
       JUMP            L0099
L0089: STORE           G97,#00
       JZ              G93 [TRUE] L0090
       CALL_2N         R0158 (G93)
       CALL_1N         R0945
L0090: STOREW          #1e22,#0000,G4c
       STOREW          #1e22,#0001,G4b
       JZ              G4d [TRUE] L0091
       JE              G4b,#02 [FALSE] L0091
       LOADW           #1e22,#0002 -> L04
       LOADW           #1e22,#0003 -> -(SP)
       STOREW          #1e22,#0002,(SP)+
       STOREW          #1e22,#0003,L04
       JE              G91,#02 [FALSE] L0091
       STORE           L04,G3e
       STORE           G3e,G3f
       STORE           G3f,L04
L0091: JG              G4b,#00 [FALSE] L0092
       LOADW           #1e22,#0002 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0092
       LOADW           #1e22,#0002 -> -(SP)
       CALL_2N         R0185 ((SP)+)
L0092: JE              G99,#01 [FALSE] L0093
       STORE           G4e,G9a
       JUMP            L0141
L0093: RTRUE           
L0094: INC             G8f
       JUMP            L0067
L0095: JG              G35,G8c [FALSE] L0096
       STORE           G8c,G35
L0096: JE              G35,#12 [TRUE] L0097
       JG              G35,G8d [FALSE] L0097
       STORE           G8d,G35
L0097: JE              Gae,#02 [FALSE] L0098
       JE              G35,#11 [FALSE] L0098
       JUMP            L0099
L0098: INC             L01
       JUMP            L0043
L0099: STORE           G35,G8c
       JE              G28,G22 [TRUE] L0102
       JZ              G9b [TRUE] L0100
       STORE           G51,G9b
       JUMP            L0004
L0100: STORE           G4e,G51
       CALL_1S         R0127 -> G3a
       JE              G3a,"comma," [FALSE] L0101
       CALL_1S         R0127 -> G3a
       INC             G51
L0101: STOREW          #1e22,#0000,#07
       STOREW          #1e22,#0001,#02
       STOREW          #1e22,#0002,G28
       STOREW          #1e22,#0003,#01
       STORE           G3e,G3a
       STORE           G28,G22
       STORE           G3b,G51
       SUB             G4f,G3b -> -(SP)
       ADD             (SP)+,#01 -> G3c
       RTRUE           
L0102: CALL_VS         R0051 (G35,#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0103
       CALL_VS         R0051 (G35,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0105
L0103: CALL_2S         R0194 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0104
       JUMP            L0001
L0104: JUMP            L0107
L0105: JZ              G51 [FALSE] L0106
       JE              G35,#05 [FALSE] L0106
       STORE           G35,#0c
L0106: CALL_1S         R0122 -> -(SP)
       ADD             #64,(SP)+ -> G43
       CALL_2N         R0905 (#15)
       CALL_2S         R0906 (#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0107
       JUMP            L0138
L0107: STORE           G41,Gb0
       STORE           G42,Gb1
       JE              G35,#01 [FALSE] L0108
       CALL_VN         R0071 (#1001,#1b)
       STORE           G97,#01
L0108: JE              G35,#02 [FALSE] L0111
       CALL_VN         R0071 (#1001,#1c)
       STORE           L09,#00
L0109: JL              L09,#20 [FALSE] L0110
       LOADW           #22a5,L09 -> -(SP)
       STOREW          #2265,L09,(SP)+
       INC             L09
       JUMP            L0109
L0110: STORE           G8f,G90
       CALL_2N         R0159 (#00)
       CALL_VN         R0071 (#1001,#38)
L0111: JE              G35,#03 [FALSE] L0112
       CALL_VN         R0071 (#1001,#1d)
L0112: JE              G35,#05 [FALSE] L0113
       CALL_VN         R0071 (#1001,#1e)
       STORE           G97,G98
L0113: JE              G35,#06 [FALSE] L0114
       CALL_VN         R0071 (#1001,#1f)
L0114: JE              G35,#07 [FALSE] L0115
       CALL_VN         R0071 (#1001,#20)
       STORE           G97,G98
L0115: JE              G35,#08 [FALSE] L0116
       CALL_VN         R0071 (#1001,#21)
L0116: JE              G35,#09 [FALSE] L0117
       CALL_VN         R0071 (#1001,#22)
L0117: JE              G35,#0a [FALSE] L0118
       CALL_VN         R0071 (#1001,#23)
L0118: JE              G35,#0b [FALSE] L0119
       CALL_VN         R0071 (#1001,#24)
L0119: JE              G35,#04 [FALSE] L0120
       CALL_VN         R0071 (#1001,#25)
L0120: JE              G35,#0c [FALSE] L0121
       CALL_VN         R0071 (#1001,#26)
L0121: JE              G35,#0d [FALSE] L0122
       CALL_VN         R0071 (#1001,#27)
L0122: JE              G35,#0e [FALSE] L0124
       JE              G42,#ffff [FALSE] L0123
       CALL_VN         R0071 (#1001,#23)
       JUMP            L0124
L0123: CALL_VN         R0071 (#1001,#28)
L0124: JE              G35,#0f [FALSE] L0125
       CALL_VN         R0071 (#1001,#29)
L0125: JE              G35,#10 [FALSE] L0126
       CALL_VN         R0071 (#1001,#2a,Ga3)
L0126: JE              G35,#11 [FALSE] L0135
       LOADW           #1e22,#0000 -> -(SP)
       JE              (SP)+,#31 [FALSE] L0133
       LOADW           #1e22,#0003 -> -(SP)
       CALL_VS         R0051 ((SP)+,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0133
       LOADW           #1e22,#0003 -> G32
       TEST_ATTR       G32,#01 [FALSE] L0127
       CALL_VN         R0071 (#40,#06,G32)
       JUMP            L0133
L0127: TEST_ATTR       G32,#04 [TRUE] L0128
       TEST_ATTR       G32,#11 [TRUE] L0128
       CALL_VN         R0071 (#1a,#02,G32)
       JUMP            L0133
L0128: TEST_ATTR       G32,#04 [FALSE] L0129
       TEST_ATTR       G32,#0d [TRUE] L0129
       CALL_VN         R0071 (#40,#09,G32)
       JUMP            L0133
L0129: STORE           Gef,#00
       GET_CHILD       G32 -> -(SP) [FALSE] L0131
L0130: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0130
L0131: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0132
       CALL_VN         R0071 (#34,#06,G32)
       JUMP            L0133
L0132: STOREW          #1e22,#0000,#00
L0133: LOADW           #1e22,#0000 -> -(SP)
       JE              (SP)+,#31 [TRUE] L0135
       JE              Ga2,#64 [FALSE] L0134
       CALL_VN         R0071 (#1001,#2b)
       JUMP            L0135
L0134: CALL_VN         R0071 (#1001,#2c)
L0135: JE              G35,#12 [FALSE] L0137
       STORE           G55,#03
       CALL_1S         G54 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0137
       STORE           G8c,G8d
       CALL_VS         R0051 (G35,#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0136
       CALL_VS         R0051 (G35,#04) -> -(SP)
       JZ              (SP)+ [FALSE] L0136
       CALL_2N         R0907 (#15)
L0136: JUMP            L0099
L0137: JE              G35,#13 [FALSE] L0138
       CALL_VN         R0071 (#1001,#49)
L0138: CALL_VS         R0051 (G35,#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0139
       CALL_VS         R0051 (G35,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0140
L0139: JUMP            L0001
L0140: STORE           G05,#01
       CALL_2N         R0907 (#15)
       JUMP            L0001
L0141: JG              G4e,G4f [TRUE] RTRUE
       CALL_1S         R0127 -> L04
       JE              L04,"then","then","then" [TRUE] L0142
       JE              L04,"comma," [FALSE] L0149
L0142: JG              G4e,G4f [FALSE] L0143
       STORE           G99,#00
       RTRUE           
L0143: CALL_2S         R0123 (G51) -> L04
       CALL_2S         R0123 (G4e) -> L05
L0144: JL              L04,L05 [FALSE] L0145
       STOREB          L04,#00,#20
       INC             L04
       JUMP            L0144
L0145: CALL_1S         R0127 -> L04
       JE              L04,"again","g","again" [FALSE] L0148
       SUB             G4e,#02 -> -(SP)
       CALL_2S         R0123 ((SP)+) -> -(SP)
       SUB             (SP)+,#1e42 -> L04
       JG              G4e,G4f [FALSE] L0146
       STORE           L05,#77
       JUMP            L0147
L0146: CALL_2S         R0123 (G4e) -> -(SP)
       SUB             (SP)+,#1e42 -> L05
L0147: JL              L04,L05 [FALSE] L0148
       STOREB          #1f38,L04,#20
       INC             L04
       JUMP            L0147
L0148: CALL_VN         R0014 (#1e42,#1fb3)
       STORE           G99,#01
       RTRUE           
L0149: STORE           G8c,#02
       JUMP            L0099

Routine R0140, 2 locals

       CALL_1S         R0122 -> -(SP)
       JG              G4e,(SP)+ [FALSE] L0001
       RET             #ffff
L0001: CALL_VS         R0141 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0141, 7 locals

       JG              Gb6,#00 [FALSE] L0003
       PUSH            Gb5
       PUSH            G9e
       PUSH            Gb4
       PUSH            Gb3
       PUSH            G97
       STORE           L04,#00
L0001: JL              L04,Gb2 [FALSE] L0002
       LOADW           #23e5,L04 -> L05
       PUSH            L05
       LOADW           #24ad,L04 -> L05
       PUSH            L05
       LOADW           #2575,L04 -> L05
       PUSH            L05
       INC             L04
       JUMP            L0001
L0002: PUSH            Gb2
L0003: INC             Gb6
       CALL_VS2        R0142 (L00,L01,L02,L03) -> L06
       DEC             Gb6
       JG              Gb6,#00 [FALSE] L0006
       PULL            Gb2
       STORE           L04,#00
L0004: JL              L04,Gb2 [FALSE] L0005
       PULL            L05
       STOREW          #2575,L04,L05
       PULL            L05
       STOREW          #24ad,L04,L05
       PULL            L05
       STOREW          #23e5,L04,L05
       INC             L04
       JUMP            L0004
L0005: PULL            G97
       PULL            Gb3
       PULL            Gb4
       PULL            G9e
       PULL            Gb5
L0006: RET             L06

Routine R0142, 15 locals

       STORE           G9e,#00
       STORE           G8e,#01
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0014
       STORE           Gef,L01
       JE              Gef,#07 [FALSE] L0002
       CALL_2S         R0177 (G4e) -> L04
       CALL_1S         R0127 -> G3a
       JE              L04,#fc18 [FALSE] L0001
       STORE           L04,G3a
L0001: STORE           G3d,L04
       RTRUE           
L0002: JE              Gef,#08 [FALSE] L0004
       PUSH            G4e
       INC             G4e
       CALL_2S         R0177 ((SP)+) -> L04
       JE              L04,#fc18 [FALSE] L0003
       STORE           G35,#03
       RET             #ffff
L0003: STORE           G3d,L04
       RTRUE           
L0004: JE              Gef,#06 [FALSE] L0007
       JE              G4c,#07,#08,#4e [TRUE] L0005
       JE              G4c,#42 [FALSE] L0006
L0005: STORE           G52,#01
L0006: JUMP            L0013
L0007: JE              Gef,#09 [FALSE] L0013
       STORE           G3b,G4e
       ADD             L02,#01 -> -(SP)
       LOADW           #22e5,(SP)+ -> -(SP)
       JE              (SP)+,#02 [TRUE] L0008
       ADD             L02,#01 -> -(SP)
       LOADW           #2365,(SP)+ -> -(SP)
       JE              (SP)+,#0f [TRUE] L0008
       CALL_2N         R1026 (#0d)
L0008: CALL_1S         R0128 -> L05
       JE              L05,#ffff [TRUE] L0009
       ADD             L02,#01 -> -(SP)
       CALL_VS         R0147 (L05,(SP)+) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0008
L0009: DEC             G4e
       SUB             G4e,G3b -> G3c
       JZ              G3c [FALSE] L0010
       RET             #ffff
L0010: JE              G4c,#08,#07,#42 [FALSE] L0011
       STORE           L05,G4e
       STORE           G4e,G3b
       CALL_1S         R0127 -> G3d
       STORE           G4e,L05
       RTRUE           
L0011: JE              L05,#ffff [FALSE] L0012
       ADD             L02,#01 -> -(SP)
       LOADW           #22e5,(SP)+ -> -(SP)
       JE              (SP)+,#02 [FALSE] L0012
       RET             #ffff
L0012: RFALSE          
L0013: JUMP            L0027
L0014: JE              Gef,#02 [FALSE] L0021
       LOADB           L03,#00 -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       RFALSE          
L0015: JG              G4e,G4f [FALSE] L0018
       JZ              G93 [FALSE] L0016
       JL              G4b,G92 [FALSE] L0016
       STORE           G93,G8f
       STORE           G94,L03
       CALL_2S         R0017 (L01) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2265,G8f,(SP)+
L0016: JZ              G93 [FALSE] L0017
       RET             #ffff
L0017: CALL_2S         R0017 (L01) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2265,G8f,(SP)+
       RFALSE          
L0018: CALL_1S         R0127 -> L05
       CALL_2S         R0017 (L05) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2265,G8f,(SP)+
       JE              L05,L01 [FALSE] L0019
       RFALSE          
L0019: CALL_VS         R0147 (L05,L02) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0020
       RFALSE          
L0020: RET             #ffff
L0021: JE              Gef,#06 [FALSE] L0022
       CALL_1S         L01 -> L04
       RET             L04
L0022: JE              Gef,#05 [FALSE] L0025
       STORE           G53,L01
       STORE           G55,#01
       CALL_1S         G53 -> L04
       JE              L04,#01 [FALSE] L0023
       STORE           L01,#02
       JUMP            L0024
L0023: STORE           L01,#00
L0024: JUMP            L0027
L0025: JE              Gef,#04 [FALSE] L0026
       ADD             #01,L01 -> G9e
       STORE           L01,#00
       JUMP            L0027
L0026: JE              Gef,#03 [FALSE] L0027
       STORE           G9e,L01
       STORE           L01,#00
L0027: STORE           L03,L01
       STORE           L0d,#00
       JE              L03,#02,#03,#04 [TRUE] L0028
       JE              L03,#05 [FALSE] L0029
L0028: STORE           L0d,#01
L0029: STORE           L0c,#00
       STORE           L09,#01
       STORE           G95,#00
L0030: CALL_1S         R0127 -> L05
       DEC             G4e
       STORE           G41,#ffff
       STORE           G42,#ffff
       CALL_2S         R0183 (L05) -> L04
       JZ              L04 [TRUE] L0036
       STORE           G41,L05
       STORE           G42,L04
       JE              L04,#ffff [FALSE] L0036
       STORE           L04,#01
       JUMP            L0032
L0031: ADD             L04,#04 -> L04
L0032: LOADW           #204f,#00 -> -(SP)
       JG              L04,(SP)+ [TRUE] L0034
       LOADW           #204f,L04 -> -(SP)
       JE              L05,(SP)+ [FALSE] L0033
       JUMP            L0036
L0033: JUMP            L0031
L0034: STORE           Gb0,G41
       STORE           Gb1,G42
       STORE           G35,#0a
       JL              G40,#03 [TRUE] L0035
       PRINT           "  [Stop: unset pronoun]
"
L0035: RET             #ffff
L0036: JE              L05,"me","myself","self" [FALSE] L0037
       STORE           G41,L05
       STORE           G42,G22
L0037: STORE           Gad,#01
       STORE           L0b,G4e
L0038: CALL_2S         R0145 (L0d) -> L04
       JZ              L04 [TRUE] L0039
       STORE           G35,L04
       RFALSE          
L0039: STORE           G97,G4e
       JE              L03,#01 [TRUE] L0058
       LOADW           #1d5a,#00 -> L06
       CALL_VS         R0149 (G29,G28,L03) -> L04
       JE              L04,#2710 [FALSE] L0040
       RET             L04
L0040: JE              Ga7,#7fff [FALSE] L0041
       JZ              L04 [FALSE] L0041
       JZ              Gb2 [FALSE] L0041
       STORE           L04,#01
L0041: JZ              L0d [TRUE] L0043
       JZ              G30 [FALSE] L0043
       JE              G8c,#08 [FALSE] L0042
       STORE           G8c,#01
L0042: STORE           G30,#01
L0043: JZ              L04 [FALSE] L0046
       JZ              Gab [TRUE] L0044
       CALL_1N         R0143
       STORE           G4e,L0b
       JUMP            L0039
L0044: JE              G35,#08,#10 [FALSE] L0045
       JZ              G30 [TRUE] L0045
       STORE           G35,#01
L0045: CALL_1S         R0160 -> G35
       JUMP            L0073
L0046: JE              L04,#01 [FALSE] L0052
       JZ              L0c [FALSE] L0047
       STORE           L0c,#01
       JUMP            L0051
L0047: LOADW           #1d5a,#00 -> L08
       STOREW          #1d5a,#00,L06
       ADD             L06,#01 -> L07
L0048: JG              L07,L08 [TRUE] L0051
       JZ              L09 [TRUE] L0049
       LOADW           #1d5a,L07 -> -(SP)
       CALL_2N         R0161 ((SP)+)
       JUMP            L0050
L0049: LOADW           #1d5a,L07 -> -(SP)
       CALL_2N         R0162 ((SP)+)
L0050: INC             L07
       JUMP            L0048
L0051: JUMP            L0057
L0052: JZ              Gb4 [FALSE] L0053
       JZ              Gab [TRUE] L0053
       CALL_1N         R0143
       STORE           G4e,L0b
       JUMP            L0039
L0053: JE              L03,#06 [FALSE] L0054
       CALL_2S         R0148 (L04) -> -(SP)
       JZ              (SP)+ [FALSE] L0054
       STORE           G35,#04
       JUMP            L0073
L0054: JZ              L0c [FALSE] L0055
       STORE           L0a,L04
       JUMP            L0057
L0055: JZ              L09 [TRUE] L0056
       CALL_2N         R0161 (L04)
       JUMP            L0057
L0056: CALL_2N         R0162 (L04)
L0057: JUMP            L0063
L0058: CALL_VS         R0149 (G28,G29,L03) -> L04
       JE              L04,#2710 [FALSE] L0059
       RET             L04
L0059: JZ              L04 [FALSE] L0061
       JZ              Gab [TRUE] L0060
       CALL_1N         R0143
       STORE           G4e,L0b
       JUMP            L0039
L0060: CALL_1S         R0160 -> G35
       JUMP            L0073
L0061: GET_PARENT      L04 -> L05
       JE              L05,G28 [TRUE] L0062
L0062: STORE           L0a,L04
L0063: ADD             G97,Gb4 -> G4e
       CALL_1S         R0127 -> L05
       JE              L05,"and","and","and" [TRUE] L0064
       JE              L05,"but","except","but" [TRUE] L0064
       JE              L05,"comma," [FALSE] L0069
L0064: JZ              L0d [FALSE] L0066
       JZ              G30 [TRUE] L0065
       JUMP            L0070
L0065: STORE           G35,#08
       JUMP            L0073
L0066: JE              L05,"but","except","but" [FALSE] L0067
       SUB             #01,L09 -> L09
L0067: JZ              L0c [FALSE] L0068
       STOREW          #1d5a,#00,#01
       STOREW          #1d5a,#01,L0a
       STORE           L0c,#01
L0068: STORE           G95,#01
       STORE           G93,#00
       JUMP            L0030
L0069: DEC             G4e
L0070: JZ              L0c [TRUE] L0071
       STORE           L0a,#02
       STORE           Ga4,L03
       JUMP            L0072
L0071: JE              Ga5,#01 [FALSE] L0072
       AND             Ga6,#0008 -> -(SP)
       JZ              (SP)+ [TRUE] L0072
       JL              Ga7,#7fff [FALSE] L0072
       JG              Ga7,#01 [FALSE] L0072
       STORE           Ga3,#01
       STORE           Ga2,Ga7
       STORE           G35,#10
       JUMP            L0073
L0072: RET             L0a
L0073: JZ              Gad [TRUE] L0074
       JE              Ga8,#01 [FALSE] L0074
       STORE           L0e,Ga7
       STORE           Gad,#00
       STORE           G4e,L0b
       JUMP            L0038
L0074: JG              Ga7,#00 [TRUE] L0075
       JG              L0e,#00 [FALSE] L0076
L0075: JZ              G30 [FALSE] L0076
       STORE           G35,#08
L0076: RET             #ffff

Routine R0143, 0 locals

       STORE           Ga5,#00
       STORE           Ga6,#00
       STORE           Ga7,#00
       STORE           Ga8,#00
       STORE           Gab,#00
       STORE           Ga9,#00
       STORE           Gaa,#0fff
       STORE           Gac,#00
       RTRUE           

Routine R0144, 6 locals

       JG              G4e,G4f [FALSE] L0001
       RFALSE          
L0001: STORE           L02,#01
L0002: JZ              L02 [TRUE] L0007
       CALL_1S         R0128 -> L00
       STORE           L02,#00
       STORE           L01,#01
       JUMP            L0004
L0003: ADD             L01,#04 -> L01
L0004: LOADW           #204f,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0006
       LOADW           #204f,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0005
       ADD             L01,#02 -> -(SP)
       LOADW           #204f,(SP)+ -> L04
       JE              L04,#0101,#0102 [FALSE] L0005
       STORE           L02,#01
L0005: JUMP            L0003
L0006: JUMP            L0002
L0007: DEC             G4e
       RFALSE          

Routine R0145, 6 locals

       CALL_1N         R0143
       JG              G4e,G4f [FALSE] L0001
       RFALSE          
L0001: STORE           L02,#01
L0002: JZ              L02 [TRUE] L0021
       CALL_1S         R0128 -> L00
       STORE           L02,#00
       STORE           L01,#01
       JUMP            L0004
L0003: ADD             L01,#04 -> L01
L0004: LOADW           #204f,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0011
       LOADW           #204f,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0010
       STORE           L02,#01
       ADD             L01,#02 -> -(SP)
       LOADW           #204f,(SP)+ -> L04
       JE              L04,#0101 [TRUE] L0005
       STORE           Ga5,#01
L0005: STORE           Gab,#01
       ADD             L01,#01 -> -(SP)
       LOADW           #204f,(SP)+ -> -(SP)
       AND             Gaa,(SP)+ -> Gaa
       JE              L04,#0100 [FALSE] L0008
       ADD             L01,#03 -> -(SP)
       LOADW           #204f,(SP)+ -> L03
       STORE           Gef,L03
       JE              Gef,#00 [FALSE] L0006
       OR              Ga6,#02 -> Ga6
       JUMP            L0008
L0006: JE              Gef,#01 [FALSE] L0007
       OR              Ga6,#04 -> Ga6
       JUMP            L0008
L0007: CALL_2S         R0183 (L03) -> Ga9
       JE              Ga9,#ffff [FALSE] L0008
       STORE           Ga9,#08
L0008: JE              L04,#08 [FALSE] L0009
       OR              Ga6,#10 -> Ga6
L0009: JE              L04,#fff8 [FALSE] L0010
       OR              Ga6,#20 -> Ga6
L0010: JUMP            L0003
L0011: JE              L00,"another","other","other" [FALSE] L0012
       STORE           Ga5,#01
       STORE           L02,#01
       OR              Ga6,#01 -> Ga6
L0012: JE              L00,"all","each","every" [TRUE] L0013
       JE              L00,"everythin","both" [FALSE] L0015
L0013: STORE           Ga5,#01
       STORE           L02,#01
       STORE           Ga7,#7fff
       JE              Gae,#01 [FALSE] L0014
       STORE           Gae,#02
L0014: OR              Ga6,#08 -> Ga6
L0015: JZ              Gad [TRUE] L0019
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0016
       DEC             G4e
       SUB             G4e,#01 -> -(SP)
       CALL_2S         R0177 ((SP)+) -> L05
       JUMP            L0017
L0016: STORE           L05,#00
       DEC             G4e
L0017: JE              L05,#01 [FALSE] L0018
       STORE           Ga5,#01
       STORE           L02,#01
L0018: JG              L05,#01 [FALSE] L0019
       STORE           Ga8,#01
       STORE           Ga5,#01
       STORE           L02,#01
       STORE           Ga7,L05
       SUB             G4e,#01 -> Gac
       OR              Ga6,#08 -> Ga6
L0019: JE              L02,#01 [FALSE] L0020
       CALL_1S         R0128 -> -(SP)
       PULL            Gef
       JE              Gef,"of","of","of" [TRUE] L0020
       JE              Gef,"of" [TRUE] L0020
       DEC             G4e
L0020: JUMP            L0002
L0021: DEC             G4e
       RFALSE          

Routine R0146, 0 locals

       PUSH            Ga5
       PUSH            Ga6
       PUSH            Ga7
       PUSH            Ga8
       PUSH            Gab
       PUSH            Ga9
       PUSH            Gaa
       PUSH            Gac
       CALL_1N         R0145
       PULL            Gac
       PULL            Gaa
       PULL            Ga9
       PULL            Gab
       PULL            Ga8
       PULL            Ga7
       PULL            Ga6
       PULL            Ga5
       RTRUE           

Routine R0147, 2 locals

       LOADW           #2325,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0001
       RET             L00
L0001: LOADW           #2365,L01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#20 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       RET             #ffff
L0002: LOADW           #2325,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       RET             L00
L0003: INC             L01
       LOADW           #2365,L01 -> -(SP)
       JE              (SP)+,#0f [TRUE] L0004
       LOADW           #2365,L01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0004: RET             #ffff

Routine R0148, 1 local

       TEST_ATTR       L00,#01 [TRUE] RTRUE
       TEST_ATTR       L00,#13 [FALSE] RFALSE
       JE              G4c,#08,#07,#42 [TRUE] RTRUE
       JE              G4c,#4e [TRUE] RTRUE
       RFALSE          

Routine R0149, 10 locals

       STORE           Gb4,#00
       STORE           Gb2,#00
       STORE           Gb5,G4e
       CALL_VN         R0168 (L00,L01,L02)
       ADD             Gb5,Gb4 -> G4e
       JZ              Gb2 [FALSE] L0001
       INC             G4e
       RFALSE          
L0001: JG              Gb5,G4f [TRUE] L0003
       JE              Gb2,#01 [FALSE] L0002
       LOADW           #23e5,#00 -> L04
       RET             L04
L0002: JG              G4e,G4f [TRUE] L0003
       CALL_1S         R0127 -> L04
       DEC             G4e
       JE              L04,"and","and","and" [TRUE] L0003
       JE              L04,"comma,","then","then" [TRUE] L0003
       JE              L04,"then","but","except" [TRUE] L0003
       JE              L04,"but" [TRUE] L0003
       JE              Ga0,#0f [TRUE] RFALSE
L0003: STORE           Gb3,#00
       JE              Gb2,#01 [FALSE] L0004
       LOADW           #23e5,#00 -> L04
L0004: JG              Gb2,#01 [FALSE] L0009
       STORE           L04,#01
       JG              Gb2,#01 [FALSE] L0007
       STORE           L05,#00
L0005: SUB             Gb2,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0007
       ADD             L05,#01 -> -(SP)
       LOADW           #23e5,(SP)+ -> -(SP)
       LOADW           #23e5,L05 -> -(SP)
       CALL_VS         R0157 ((SP)+,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       STORE           L04,#00
L0006: INC             L05
       JUMP            L0005
L0007: JZ              L04 [TRUE] L0008
       STORE           G95,#01
L0008: CALL_2S         R0150 (L02) -> L04
       JE              L04,#ffff [TRUE] RFALSE
       JE              L04,#01 [TRUE] RTRUE
L0009: JZ              L04 [TRUE] L0012
       JZ              G95 [TRUE] L0010
       RET             L04
L0010: JZ              G93 [FALSE] L0011
       STORE           G93,G8f
L0011: STOREW          #2265,G8f,L04
       RET             L04
L0012: JG              Gb5,G4f [FALSE] L0013
       JUMP            L0049
L0013: CALL_2N         R0905 (#14)
       CALL_2S         R0906 (#14) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       JUMP            L0030
L0014: STORE           L05,#01
       STORE           L09,#00
       STORE           L04,#01
L0015: JG              L04,Gb3 [TRUE] L0019
L0016: LOADW           #24ad,L09 -> -(SP)
       JE              (SP)+,L04 [TRUE] L0017
       SUB             #00,L04 -> -(SP)
       LOADW           #24ad,L09 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0017
       INC             L09
       JUMP            L0016
L0017: LOADW           #23e5,L09 -> -(SP)
       TEST_ATTR       (SP)+,#01 [TRUE] L0018
       STORE           L05,#00
L0018: INC             L04
       JUMP            L0015
L0019: JZ              L05 [TRUE] L0020
       CALL_VN         R0071 (#1001,#2d)
       JUMP            L0021
L0020: CALL_VN         R0071 (#1001,#2e)
L0021: STORE           L05,Gb3
       STORE           L09,#00
       STORE           L04,#01
L0022: JG              L04,Gb3 [TRUE] L0029
L0023: LOADW           #24ad,L09 -> -(SP)
       JE              (SP)+,L04 [TRUE] L0024
       SUB             #00,L04 -> -(SP)
       LOADW           #24ad,L09 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0024
       INC             L09
       JUMP            L0023
L0024: LOADW           #23e5,L09 -> L06
       LOADW           #24ad,L09 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0025
       CALL_2N         R0975 (L06)
       JUMP            L0026
L0025: CALL_2N         R0973 (L06)
L0026: SUB             L05,#01 -> -(SP)
       JL              L04,(SP)+ [FALSE] L0027
       PRINT_PADDR     S053
L0027: SUB             L05,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0028
       PRINT_PADDR     S039
L0028: INC             L04
       JUMP            L0022
L0029: CALL_VN         R0071 (#1001,#39)
L0030: CALL_2N         R0907 (#14)
L0031: STORE           L04,#02
L0032: JL              L04,#78 [FALSE] L0033
       STOREB          #1ebd,L04,#20
       INC             L04
       JUMP            L0032
L0033: CALL_VS         R0138 (#1ebd,#1ff4) -> L08
       LOADW           #1ff4,#01 -> L03
       JE              L03,"all","each","every" [TRUE] L0034
       JE              L03,"everythin","both" [FALSE] L0039
L0034: JE              L02,#02,#03,#04 [TRUE] L0035
       JE              L02,#05 [FALSE] L0038
L0035: LOADW           #1d5a,#00 -> L07
       STORE           L04,#00
L0036: JL              L04,Gb2 [FALSE] L0037
       ADD             L07,L04 -> -(SP)
       JL              (SP)+,#64 [FALSE] L0037
       LOADW           #23e5,L04 -> L06
       ADD             L04,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       STOREW          #1d5a,(SP)+,L06
       INC             L04
       JUMP            L0036
L0037: ADD             L04,L07 -> -(SP)
       STOREW          #1d5a,#00,(SP)+
       RTRUE           
L0038: CALL_VN         R0071 (#1001,#2f)
       JUMP            L0031
L0039: STORE           L04,#01
L0040: JG              L04,L08 [TRUE] L0042
       CALL_VS         R0126 (L04,#1ff4) -> -(SP)
       JE              (SP)+,"comma," [FALSE] L0041
       CALL_VN         R0012 (#1e42,#1ebd)
       JUMP            L0048
L0041: INC             L04
       JUMP            L0040
L0042: JZ              L03 [TRUE] L0043
       LOADB           L03,#06 -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0043
       CALL_2S         R0061 (L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0043
       CALL_VN         R0012 (#1e42,#1ebd)
       JUMP            L0048
L0043: CALL_2S         R0123 (Gb5) -> -(SP)
       SUB             (SP)+,#1e42 -> L06
       LOADB           #1ebd,#01 -> -(SP)
       ADD             (SP)+,#01 -> L07
       LOADB           #1e42,#00 -> -(SP)
       ADD             #1e42,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L05
L0044: ADD             #1e42,L06 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       JL              L05,(SP)+ [TRUE] L0045
       SUB             L05,L07 -> -(SP)
       LOADB           #00,(SP)+ -> -(SP)
       STOREB          L05,#00,(SP)+
       DEC             L05
       JUMP            L0044
L0045: STORE           L04,#00
L0046: JL              L04,L07 [FALSE] L0047
       ADD             #02,L04 -> -(SP)
       LOADB           #1ebd,(SP)+ -> -(SP)
       ADD             L06,L04 -> -(SP)
       STOREB          #1e42,(SP)+,(SP)+
       INC             L04
       JUMP            L0046
L0047: ADD             L06,L07 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       STOREB          #1e42,(SP)+,#20
       LOADB           #1e42,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       STOREB          #1e42,#01,(SP)+
       LOADB           #1e42,#00 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       LOADB           #1e42,#01 -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0048
       LOADB           #1e42,#00 -> -(SP)
       STOREB          #1e42,#01,(SP)+
L0048: CALL_1S         R0122 -> G4f
       STORE           G4e,#01
       CALL_1N         R0057
       CALL_VN         R0014 (#1e42,#1fb3)
       CALL_1S         R0122 -> G4f
       CALL_1S         R0122 -> -(SP)
       ADD             #64,(SP)+ -> G43
       CALL_2S         R0081 (G22) -> G29
       LOADW           #2ba7,#0f -> -(SP)
       CALL_VN         R1038 ((SP)+,#01)
       RET             #2710
L0049: JE              L02,#06 [FALSE] L0050
       CALL_VN         R0071 (#1001,#30)
       JUMP            L0051
L0050: CALL_VN         R0071 (#1001,#31)
L0051: STORE           L04,#02
L0052: JL              L04,#78 [FALSE] L0053
       STOREB          #1ebd,L04,#20
       INC             L04
       JUMP            L0052
L0053: CALL_VS         R0138 (#1ebd,#1ff4) -> L08
       LOADW           #1ff4,#01 -> L03
       JZ              L03 [TRUE] L0054
       LOADB           L03,#06 -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0054
       CALL_VN         R0012 (#1e42,#1ebd)
       RET             #2710
L0054: JZ              G93 [TRUE] L0066
       STORE           L05,G93
L0055: JL              L05,G8f [FALSE] L0066
       LOADW           #2265,L05 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0056
       JUMP            L0065
L0056: LOADB           #1e42,#01 -> -(SP)
       ADD             #02,(SP)+ -> L04
       STORE           Gef,#1e42
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       PUSH            L04
       INC             L04
       STOREB          #1e42,(SP)+,#20
       STOREW          #1ff4,#01,#00
       LOADW           #2265,L05 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0061
       LOADW           #2265,L05 -> -(SP)
       JL              (SP)+,#2710 [FALSE] L0061
       LOADW           #2265,L05 -> -(SP)
       CALL_2N         R0185 ((SP)+)
       STORE           L06,#01
       JUMP            L0058
L0057: ADD             L06,#03 -> L06
L0058: LOADW           #2035,#00 -> -(SP)
       JG              L06,(SP)+ [TRUE] L0060
       ADD             L06,#02 -> -(SP)
       LOADW           #2035,(SP)+ -> -(SP)
       LOADW           #2265,L05 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0059
       LOADW           #2035,L06 -> -(SP)
       STOREW          #1ff4,#01,(SP)+
       JUMP            L0060
L0059: JUMP            L0057
L0060: JUMP            L0062
L0061: LOADW           #2265,L05 -> -(SP)
       SUB             (SP)+,#2710 -> -(SP)
       CALL_2S         R0018 ((SP)+) -> -(SP)
       STOREW          #1ff4,#01,(SP)+
L0062: LOADW           #1ff4,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0065
       ADD             #1e42,L04 -> L06
       OUTPUT_STREAM   REDIRECT_ENABLE,L06
       LOADW           #1ff4,#01 -> -(SP)
       PRINT_ADDR      (SP)+
       OUTPUT_STREAM   #fffd
       LOADW           L06,#00 -> L06
       STORE           L07,L04
L0063: ADD             L04,L06 -> -(SP)
       JL              L07,(SP)+ [FALSE] L0064
       ADD             L07,#02 -> -(SP)
       LOADB           #1e42,(SP)+ -> -(SP)
       STOREB          #1e42,L07,(SP)+
       INC             L07
       JUMP            L0063
L0064: ADD             L04,L06 -> L04
       SUB             L04,#02 -> -(SP)
       STOREB          #1e42,#01,(SP)+
L0065: INC             L05
       JUMP            L0055
L0066: LOADB           #1e42,#01 -> -(SP)
       ADD             #02,(SP)+ -> L04
       STORE           Gef,#1e42
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       PUSH            L04
       INC             L04
       STOREB          #1e42,(SP)+,#20
       STORE           L05,#00
       JUMP            L0068
L0067: INC             L04
       INC             L05
L0068: LOADB           #1ebd,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0070
       ADD             L05,#02 -> -(SP)
       LOADB           #1ebd,(SP)+ -> -(SP)
       STOREB          #1e42,L04,(SP)+
       STORE           Gef,#1e42
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       LOADB           #1e42,#01 -> -(SP)
       JE              (SP)+,#78 [FALSE] L0069
       JUMP            L0070
L0069: JUMP            L0067
L0070: JL              L04,#78 [FALSE] L0071
       STOREB          #1e42,L04,#20
       INC             L04
       JUMP            L0070
L0071: RET             #2710

Routine R0150, 10 locals

       SUB             Gb2,#01 -> L02
       STORE           L04,#00
       LOADW           #23e5,#00 -> L05
       STORE           L01,#00
L0001: JG              L01,L02 [TRUE] L0011
       LOADW           #23e5,L01 -> L06
       STOREW          #2575,L01,L04
       CALL_2S         R0081 (L06) -> L07
       JE              L00,#01 [FALSE] L0002
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G28 [FALSE] L0002
       INC             L04
       STORE           L05,L06
L0002: JE              L00,#02 [FALSE] L0003
       CALL_2S         R0081 (G28) -> -(SP)
       JE              L07,(SP)+ [FALSE] L0003
       JE              L06,G28 [TRUE] L0003
       TEST_ATTR       L06,#03 [TRUE] L0003
       TEST_ATTR       L06,#0f [TRUE] L0003
       INC             L04
       STORE           L05,L06
L0003: JE              L00,#03 [FALSE] L0004
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G28 [FALSE] L0004
       INC             L04
       STORE           L05,L06
L0004: JE              L00,#04,#05 [FALSE] L0009
       JE              G56,#ffff [FALSE] L0007
       JE              L00,#04 [FALSE] L0005
       INC             L04
       STORE           L05,L06
L0005: JE              L00,#05 [FALSE] L0006
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G28 [TRUE] L0006
       INC             L04
       STORE           L05,L06
L0006: JUMP            L0009
L0007: JE              L00,#04 [FALSE] L0008
       JE              L06,G56 [TRUE] L0008
       INC             L04
       STORE           L05,L06
L0008: JE              L00,#05 [FALSE] L0009
       JIN             L06,G56 [FALSE] L0009
       INC             L04
       STORE           L05,L06
L0009: JE              L00,#06 [FALSE] L0010
       CALL_2S         R0148 (L06) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0010
       INC             L04
       STORE           L05,L06
L0010: LOADW           #2575,L01 -> -(SP)
       SUB             L04,(SP)+ -> -(SP)
       MUL             #03e8,(SP)+ -> -(SP)
       STOREW          #2575,L01,(SP)+
       INC             L01
       JUMP            L0001
L0011: JE              L04,#01 [FALSE] L0012
       RET             L05
L0012: JE              L00,#06 [FALSE] L0013
       JZ              L04 [FALSE] L0013
       LOADW           #23e5,#00 -> -(SP)
       RET_POPPED      
L0013: JZ              Ga5 [FALSE] L0014
       STORE           Ga6,#00
L0014: CALL_2N         R0154 (L00)
       JZ              Gb2 [FALSE] L0015
       RET             #ffff
L0015: JZ              Ga5 [FALSE] L0016
       CALL_1S         R0156 -> L01
       JL              L01,#00 [TRUE] L0016
       RET             L01
L0016: JE              Ga5,#01 [FALSE] L0031
       AND             Ga6,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0031
       JE              L00,#02,#03,#04 [TRUE] L0017
       JE              L00,#05 [TRUE] L0017
       STORE           G35,#08
       RET             #ffff
L0017: STORE           L01,#00
       LOADW           #1d5a,#00 -> L09
       CALL_1S         R0155 -> L02
       JUMP            L0019
L0018: CALL_1S         R0155 -> L02
L0019: JE              L02,#ffff [TRUE] L0029
       JL              L01,Ga7 [FALSE] L0029
       ADD             L01,L09 -> -(SP)
       JL              (SP)+,#63 [FALSE] L0029
       STORE           L08,#00
       CALL_VN         R0905 (#12,L02)
       CALL_VS         R0906 (#12,L02) -> -(SP)
       JZ              (SP)+ [FALSE] L0025
       TEST_ATTR       L02,#03 [TRUE] L0020
       TEST_ATTR       L02,#16 [TRUE] L0020
       STORE           L08,#01
L0020: JE              L00,#03,#04 [FALSE] L0021
       GET_PARENT      L02 -> -(SP)
       JE              (SP)+,G28 [TRUE] L0021
       STORE           L08,#00
L0021: JE              G4c,#40,#31 [FALSE] L0022
       GET_PARENT      L02 -> -(SP)
       JE              (SP)+,G28 [FALSE] L0022
       STORE           L08,#00
L0022: CALL_VS         R0191 (L02,L08) -> L03
       JE              L03,#01 [FALSE] L0023
       STORE           L08,#01
       JUMP            L0024
L0023: JE              L03,#02 [FALSE] L0024
       STORE           L08,#00
L0024: JUMP            L0026
L0025: STORE           L08,#00
       CALL_1S         R1050 -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       STORE           L08,#01
L0026: CALL_VN         R0907 (#12,L02)
       JE              L08,#01 [FALSE] L0027
       INC             L01
       ADD             L01,L09 -> -(SP)
       STOREW          #1d5a,(SP)+,L02
       JUMP            L0028
L0027: STORE           L01,L01
L0028: JUMP            L0018
L0029: JL              L01,Ga7 [FALSE] L0030
       JL              Ga7,#7fff [FALSE] L0030
       STORE           G35,#10
       STORE           Ga2,Ga7
       STORE           Ga3,L01
       RET             #ffff
L0030: ADD             L01,L09 -> -(SP)
       STOREW          #1d5a,#00,(SP)+
       STORE           Ga4,L00
       RTRUE           
L0031: STORE           L01,#00
L0032: JL              L01,Gb2 [FALSE] L0033
       STOREW          #24ad,L01,#00
       INC             L01
       JUMP            L0032
L0033: STORE           L06,#01
       STORE           L01,#00
L0034: JL              L01,Gb2 [FALSE] L0039
       LOADW           #24ad,L01 -> -(SP)
       JZ              (SP)+ [FALSE] L0038
       PUSH            L06
       INC             L06
       STOREW          #24ad,L01,(SP)+
       STORE           L08,#00
       ADD             L01,#01 -> L02
L0035: JL              L02,Gb2 [FALSE] L0037
       LOADW           #24ad,L02 -> -(SP)
       JZ              (SP)+ [FALSE] L0036
       LOADW           #23e5,L02 -> -(SP)
       LOADW           #23e5,L01 -> -(SP)
       CALL_VS         R0157 ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0036
       STORE           L08,#01
       LOADW           #24ad,L01 -> -(SP)
       STOREW          #24ad,L02,(SP)+
L0036: INC             L02
       JUMP            L0035
L0037: JE              L08,#01 [FALSE] L0038
       SUB             #01,L06 -> -(SP)
       STOREW          #24ad,L01,(SP)+
L0038: INC             L01
       JUMP            L0034
L0039: DEC             L06
       STORE           Gb3,L06
       JZ              Ga5 [FALSE] L0044
       JG              L06,#01 [FALSE] L0044
       STORE           L03,#ffff
       STORE           L01,#00
L0040: JL              L01,Gb2 [FALSE] L0043
       LOADW           #2575,L01 -> -(SP)
       JG              (SP)+,L03 [FALSE] L0041
       LOADW           #2575,L01 -> L03
       LOADW           #24ad,L01 -> L02
       MUL             L02,L02 -> L02
       STORE           L08,#00
       JUMP            L0042
L0041: LOADW           #2575,L01 -> -(SP)
       JE              (SP)+,L03 [FALSE] L0042
       LOADW           #24ad,L01 -> -(SP)
       LOADW           #24ad,L01 -> -(SP)
       MUL             (SP)+,(SP)+ -> -(SP)
       JE              (SP)+,L02 [TRUE] L0042
       STORE           L08,#01
L0042: INC             L01
       JUMP            L0040
L0043: JZ              L08 [TRUE] L0044
       RFALSE          
L0044: JE              L06,#01 [FALSE] L0045
       STORE           G95,#01
L0045: CALL_1S         R0155 -> -(SP)
       RET_POPPED      

Routine R0151, 3 locals

       JE              Ga4,#04,#05 [FALSE] L0006
       STORE           L01,#01
       STORE           L02,#00
L0001: LOADW           #1d5a,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0005
       JE              Ga4,#04 [FALSE] L0002
       LOADW           #1d5a,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
L0002: JE              Ga4,#05 [FALSE] L0004
       LOADW           #1d5a,L01 -> -(SP)
       JIN             (SP)+,L00 [FALSE] L0004
L0003: INC             L02
       LOADW           #1d5a,L01 -> -(SP)
       STOREW          #1d5a,L02,(SP)+
L0004: INC             L01
       JUMP            L0001
L0005: STOREW          #1d5a,#00,L02
L0006: JE              Ga4,#02 [FALSE] L0010
       JE              G4c,#40 [FALSE] L0010
       JE              Gae,#02 [FALSE] L0010
       STORE           L01,#01
       STORE           L02,#00
L0007: LOADW           #1d5a,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0009
       CALL_2S         R0081 (G28) -> -(SP)
       LOADW           #1d5a,L01 -> -(SP)
       CALL_2S         R0081 ((SP)+) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0008
       INC             L02
       LOADW           #1d5a,L01 -> -(SP)
       STOREW          #1d5a,L02,(SP)+
L0008: INC             L01
       JUMP            L0007
L0009: STOREW          #1d5a,#00,L02
L0010: LOADW           #1d5a,#00 -> L01
       JZ              L01 [FALSE] L0011
       RET             #11
L0011: RFALSE          

Routine R0152, 3 locals

       JZ              G9e [TRUE] L0001
       CALL_2S         R0153 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       RTRUE           
L0001: JL              L01,Gb4 [TRUE] RTRUE
       JG              L01,Gb4 [FALSE] L0002
       STORE           Gb4,L01
       STORE           Gb2,#00
       JUMP            L0004
L0002: JL              Gb2,#64 [FALSE] RTRUE
       STORE           L02,#00
L0003: JL              L02,Gb2 [FALSE] L0004
       LOADW           #23e5,L02 -> -(SP)
       JE              (SP)+,L00 [TRUE] RTRUE
       INC             L02
       JUMP            L0003
L0004: PUSH            Gb2
       INC             Gb2
       STOREW          #23e5,(SP)+,L00
       RTRUE           

Routine R0153, 1 local

       CALL_VS         R0051 (G9e,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           G32,L00
       CALL_1S         G9e -> -(SP)
       RET_POPPED      
L0001: SUB             G9e,#01 -> -(SP)
       TEST_ATTR       L00,(SP)+ [TRUE] RTRUE
       RFALSE          

Routine R0154, 10 locals

       AND             Ga6,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       INC             L06
L0001: AND             Ga6,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L06
L0002: AND             Ga6,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L06
L0003: AND             Ga6,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       INC             L06
L0004: JZ              Ga9 [TRUE] L0005
       INC             L06
L0005: STORE           L08,#3c
       STORE           L09,#28
       JE              G4c,#40,#31 [FALSE] L0006
       STORE           L08,#28
       STORE           L09,#3c
L0006: STORE           L00,L00
       STORE           L04,#00
L0007: JL              L04,Gb2 [FALSE] L0022
       LOADW           #23e5,L04 -> L03
       GET_PARENT      L03 -> L01
       STORE           L02,#00
       STORE           L07,#00
       AND             Ga6,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JE              L01,G28 [FALSE] L0008
       INC             L07
L0008: AND             Ga6,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       JE              L01,G29 [FALSE] L0009
       INC             L07
L0009: AND             Ga6,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       TEST_ATTR       L03,#08 [FALSE] L0010
       INC             L07
L0010: AND             Ga6,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       TEST_ATTR       L03,#08 [TRUE] L0011
       INC             L07
L0011: JZ              Ga9 [TRUE] L0012
       JE              L01,Ga9 [FALSE] L0012
       INC             L07
L0012: JL              L07,L06 [FALSE] L0013
       STOREW          #23e5,L04,#ffff
       JUMP            L0021
L0013: STORE           L02,#00
       TEST_ATTR       L03,#03 [TRUE] L0014
       STORE           L02,#64
L0014: JE              L01,G28 [FALSE] L0015
       ADD             L02,L08 -> L02
       JUMP            L0017
L0015: JE              L01,G29 [FALSE] L0016
       ADD             L02,L09 -> L02
       JUMP            L0017
L0016: JE              L01,#05 [TRUE] L0017
       ADD             L02,#14 -> L02
L0017: CALL_VS         R0191 (L03,#02) -> -(SP)
       MUL             #03e8,(SP)+ -> -(SP)
       ADD             L02,(SP)+ -> L02
       TEST_ATTR       L03,#0f [TRUE] L0018
       ADD             L02,#0a -> L02
L0018: JE              L03,G28 [TRUE] L0019
       ADD             L02,#05 -> L02
L0019: CALL_2S         R0180 (L03) -> -(SP)
       LOADW           #1afc,(SP)+ -> -(SP)
       AND             Gaa,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       ADD             L02,#01 -> L02
L0020: LOADW           #2575,L04 -> -(SP)
       ADD             (SP)+,L02 -> -(SP)
       STOREW          #2575,L04,(SP)+
L0021: INC             L04
       JUMP            L0007
L0022: STORE           L04,#00
L0023: JL              L04,Gb2 [FALSE] L0029
L0024: LOADW           #23e5,L04 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0028
       SUB             Gb2,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0025
       DEC             Gb2
       JUMP            L0028
L0025: STORE           L05,L04
L0026: SUB             Gb2,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0027
       ADD             L05,#01 -> -(SP)
       LOADW           #23e5,(SP)+ -> -(SP)
       STOREW          #23e5,L05,(SP)+
       ADD             L05,#01 -> -(SP)
       LOADW           #2575,(SP)+ -> -(SP)
       STOREW          #2575,L05,(SP)+
       INC             L05
       JUMP            L0026
L0027: DEC             Gb2
       JUMP            L0024
L0028: INC             L04
       JUMP            L0023
L0029: RTRUE           

Routine R0155, 4 locals

       STORE           L00,#00
       STORE           L02,#ffff
       STORE           L03,#00
L0001: JL              L03,Gb2 [FALSE] L0003
       LOADW           #23e5,L03 -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       LOADW           #2575,L03 -> L01
       JG              L01,L02 [FALSE] L0002
       STORE           L02,L01
       STORE           L00,L03
L0002: INC             L03
       JUMP            L0001
L0003: JL              L02,#00 [FALSE] L0004
       RET             #ffff
L0004: LOADW           #23e5,L00 -> L03
       STOREW          #23e5,L00,#ffff
       RET             L03

Routine R0156, 4 locals

       STORE           L00,#ffff
       STORE           L02,#fc18
       STORE           L03,#00
L0001: JL              L03,Gb2 [FALSE] L0004
       LOADW           #2575,L03 -> L01
       JE              L01,L02 [FALSE] L0002
       STORE           L00,#ffff
L0002: JG              L01,L02 [FALSE] L0003
       STORE           L02,L01
       LOADW           #23e5,L03 -> L00
L0003: INC             L03
       JUMP            L0001
L0004: RET             L00

Routine R0157, 9 locals

       JE              L00,L01 [TRUE] RTRUE
       JZ              L00 [TRUE] RFALSE
       JZ              L01 [TRUE] RFALSE
       CALL_VS         R0051 (L00,#001c) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VS         R0051 (L01,#001c) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       GET_PROP        L00,#11 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0001
       GET_PROP        L01,#11 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0002
L0001: GET_PROP        L01,#11 -> Gef
       PUSH            Gef
       GET_PROP        L00,#11 -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] RFALSE
       STORE           G48,#1003
       STORE           G49,L00
       STORE           G4a,L01
       STORE           L07,G4e
       CALL_VS         R0112 (L00,#11) -> L06
       STORE           G4e,L07
       JE              L06,#ffff [TRUE] RTRUE
       JE              L06,#fffe [TRUE] RFALSE
L0002: GET_PROP_ADDR   L00,#01 -> Gef
       STORE           L02,Gef
       GET_PROP_ADDR   L00,#01 -> Gef
       JZ              Gef [TRUE] L0003
       GET_PROP_LEN    Gef -> Gef
L0003: PUSH            Gef
       DIV             (SP)+,#02 -> L04
       GET_PROP_ADDR   L01,#01 -> Gef
       STORE           L03,Gef
       GET_PROP_ADDR   L01,#01 -> Gef
       JZ              Gef [TRUE] L0004
       GET_PROP_LEN    Gef -> Gef
L0004: PUSH            Gef
       DIV             (SP)+,#02 -> L05
       STORE           L06,#00
L0005: JL              L06,L04 [FALSE] L0009
       STORE           L08,#00
       STORE           L07,#00
L0006: JL              L07,L05 [FALSE] L0008
       LOADW           L03,L07 -> -(SP)
       LOADW           L02,L06 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0007
       STORE           L08,#01
L0007: INC             L07
       JUMP            L0006
L0008: JZ              L08 [TRUE] RFALSE
       INC             L06
       JUMP            L0005
L0009: STORE           L07,#00
L0010: JL              L07,L05 [FALSE] L0014
       STORE           L08,#00
       STORE           L06,#00
L0011: JL              L06,L04 [FALSE] L0013
       LOADW           L03,L07 -> -(SP)
       LOADW           L02,L06 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0012
       STORE           L08,#01
L0012: INC             L06
       JUMP            L0011
L0013: JZ              L08 [TRUE] RFALSE
       INC             L07
       JUMP            L0010
L0014: RTRUE           

Routine R0158, 2 locals

       STORE           L01,#00
       JZ              L00 [TRUE] L0001
       SUB             G8f,#01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0001
       LOADW           #2265,L00 -> -(SP)
       JG              (SP)+,#01 [FALSE] L0001
       LOADW           #2265,L00 -> -(SP)
       JL              (SP)+,#2710 [FALSE] L0001
       STORE           L01,#01
L0001: JZ              L01 [TRUE] L0003
       LOADW           #2265,L00 -> -(SP)
       CALL_VN         R0905 (#13,(SP)+)
       LOADW           #2265,L00 -> -(SP)
       CALL_VS         R0906 (#13,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       PRINT           "("
       CALL_2N         R0159 (L00)
       PRINT           ")
"
L0002: LOADW           #2265,L00 -> -(SP)
       CALL_VN         R0907 (#13,(SP)+)
       JUMP            L0004
L0003: PRINT           "("
       CALL_2N         R0159 (L00)
       PRINT           ")
"
L0004: RTRUE           

Routine R0159, 4 locals

       JZ              L00 [FALSE] L0002
       STORE           L01,G50
       CALL_2S         R0059 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R1208 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_ADDR      L01
L0001: INC             L00
       STORE           L03,#01
L0002: STORE           L02,L00
L0003: JL              L02,G8f [FALSE] L0012
       LOADW           #2265,L02 -> L01
       JE              L01,#ffff [FALSE] L0004
       JUMP            L0011
L0004: JZ              L03 [TRUE] L0005
       PRINT_CHAR      ' '
L0005: JZ              L01 [FALSE] L0006
       PRINT_PADDR     S037
       JUMP            L0010
L0006: JE              L01,#01 [FALSE] L0007
       PRINT_PADDR     S038
       JUMP            L0010
L0007: JL              L01,#2710 [TRUE] L0008
       SUB             L01,#2710 -> -(SP)
       CALL_2S         R0018 ((SP)+) -> -(SP)
       PRINT_ADDR      (SP)+
       JUMP            L0010
L0008: CALL_VS         R0051 (L01,#001c) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_2N         R0056 (L01)
       JUMP            L0010
L0009: CALL_2N         R0975 (L01)
L0010: STORE           L03,#01
L0011: INC             L02
       JUMP            L0003
L0012: RTRUE           

Routine R0160, 3 locals

       STORE           G98,G97
       JZ              G53 [TRUE] L0001
       STORE           G54,G53
       RET             #12
L0001: DEC             G4e
       CALL_1S         R0127 -> L01
       STORE           L02,#05
       JE              L01,G41 [FALSE] L0004
       CALL_1S         R0128 -> L01
       DEC             G4e
       JE              L01,#ffff [TRUE] L0002
       LOADW           #2365,G8f -> -(SP)
       JE              (SP)+,#0f [TRUE] L0004
L0002: SUB             G8f,#01 -> -(SP)
       LOADW           #2365,(SP)+ -> -(SP)
       CALL_2N         R0135 ((SP)+)
       JE              G9c,#03,#04 [FALSE] L0003
       STORE           L02,#13
       JUMP            L0004
L0003: STORE           Gb0,G41
       STORE           Gb1,G42
       STORE           L02,#0e
L0004: JG              G35,L02 [FALSE] L0005
       RET             G35
L0005: RET             L02

Routine R0161, 3 locals

       LOADW           #1d5a,#00 -> L01
       JE              L01,#63 [FALSE] L0001
       STORE           G2f,#01
       RTRUE           
L0001: STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0003
       LOADW           #1d5a,L02 -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L02
       JUMP            L0002
L0003: INC             L01
       STOREW          #1d5a,L01,L00
       STOREW          #1d5a,#00,L01
       RTRUE           

Routine R0162, 4 locals

       LOADW           #1d5a,#00 -> L01
       STORE           L02,#01
L0001: JG              L02,L01 [TRUE] L0005
       LOADW           #1d5a,L02 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0004
       STORE           L03,L02
L0002: JG              L03,L01 [TRUE] L0003
       ADD             L03,#01 -> -(SP)
       LOADW           #1d5a,(SP)+ -> -(SP)
       STOREW          #1d5a,L03,(SP)+
       INC             L03
       JUMP            L0002
L0003: DEC             L01
       PUSH            L01
       STOREW          #1d5a,#00,(SP)+
       RFALSE          
L0004: INC             L02
       JUMP            L0001
L0005: RET             #0a

Routine R0163, 4 locals

L0001: LOADW           #1d5a,#00 -> L01
       STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0004
       LOADW           #1d5a,L02 -> L03
       TEST_ATTR       L03,L00 [TRUE] L0003
       CALL_2N         R0162 (L03)
       JUMP            L0001
L0003: INC             L02
       JUMP            L0002
L0004: RTRUE           

Routine R0164, 2 locals

       STORE           G4e,Gb5
       JZ              L01 [FALSE] L0001
       CALL_2N         R0170 (L00)
       JUMP            L0002
L0001: CALL_2N         R0171 (L00)
L0002: RTRUE           

Routine R0165, 1 local

       JL              G58,#02 [TRUE] L0001
       SUB             G58,#02 -> -(SP)
       CALL_VN         R0170 (L00,#00,(SP)+)
L0001: JE              G58,#01 [FALSE] L0002
       CALL_2S         R0073 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       STORE           G59,#01
L0002: RTRUE           

Routine R0166, 7 locals

       STORE           L05,G49
       STORE           L06,G4a
       STORE           G49,L00
       STORE           G4a,#00
       STORE           L02,G28
       STORE           L03,G29
       STORE           L04,G52
       STORE           G52,#06
       JZ              L01 [FALSE] L0001
       STORE           G28,G22
       JUMP            L0002
L0001: STORE           G28,L01
L0002: CALL_2S         R0081 (G28) -> G29
       CALL_VN         R0168 (G29,G28,#00)
       STORE           G52,L04
       STORE           G28,L02
       STORE           G29,L03
       STORE           G49,L05
       STORE           L05,G4a
       STORE           G4a,L06
       RET             L05

Routine R0167, 6 locals

       STORE           L02,G49
       STORE           L03,G52
       STORE           L04,G28
       STORE           L05,G29
       STORE           G49,L00
       JZ              L01 [FALSE] L0001
       STORE           G28,G22
       JUMP            L0002
L0001: STORE           G28,L01
L0002: CALL_2S         R0081 (G28) -> G29
       STORE           G52,#05
       CALL_VN         R0168 (G29,G28,#00)
       STORE           G49,L02
       STORE           G52,L03
       STORE           G28,L04
       STORE           G29,L05
       RTRUE           

Routine R0168, 4 locals

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: JZ              G53 [TRUE] L0002
       STORE           G55,#02
       CALL_1S         G53 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: CALL_VN         R0905 (#10,G28)
       CALL_VS         R0906 (#10,G28) -> -(SP)
       JZ              (SP)+ [FALSE] L0012
       JZ              G52 [FALSE] L0004
       JE              L02,#05 [FALSE] L0004
       JE              G56,#ffff [TRUE] L0004
       CALL_2S         R0078 (G56) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       CALL_VN         R0169 (G56,#00,L02)
L0003: JUMP            L0010
L0004: JZ              G52 [FALSE] L0005
       JE              L02,#06 [TRUE] L0005
       JZ              Ga5 [FALSE] L0005
       JE              L00,G29 [FALSE] L0005
       CALL_2N         R0169 (#05)
L0005: TEST_ATTR       L00,#11 [TRUE] L0006
       TEST_ATTR       L00,#04 [FALSE] L0007
L0006: CALL_2N         R0171 (L00)
L0007: CALL_VN         R0169 (L00,L01,L02)
       JZ              L01 [TRUE] L0010
       TEST_ATTR       L01,#11 [TRUE] L0008
       TEST_ATTR       L01,#04 [FALSE] L0009
L0008: CALL_2N         R0171 (L01)
L0009: CALL_VN         R0169 (L01,#00,L02)
L0010: JE              #07,L00,L01 [FALSE] L0012
       CALL_VN         R0170 (G28,G28,L02)
       GET_PARENT      G28 -> -(SP)
       PULL            Gef
       TEST_ATTR       Gef,#11 [TRUE] L0011
       TEST_ATTR       Gef,#04 [FALSE] L0012
L0011: GET_PARENT      G28 -> -(SP)
       GET_PARENT      G28 -> -(SP)
       CALL_VN         R0170 ((SP)+,(SP)+,L02)
L0012: CALL_VN         R0907 (#10,G28)
       RTRUE           

Routine R0169, 5 locals

       JZ              L00 [TRUE] RTRUE
       GET_CHILD       L00 -> L03 [FALSE] L0001
L0001: JZ              L03 [TRUE] L0005
       GET_SIBLING     L03 -> L04 [FALSE] L0002
L0002: JE              L00,G28 [TRUE] L0003
       CALL_VS         R1146 (L00,L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
L0003: CALL_VN         R0170 (L03,L01,L02)
L0004: STORE           L03,L04
       JUMP            L0001
L0005: RTRUE           

Routine R0170, 8 locals

       CALL_2N         R0171 (L00)
       JE              L00,L01 [TRUE] L0006
       CALL_VS         R0051 (L00,#000e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0051 (L00,#0011) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0078 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0006
L0001: GET_CHILD       L00 -> L06 [FALSE] L0002
L0002: JZ              L06 [TRUE] L0006
       GET_SIBLING     L06 -> L07 [FALSE] L0003
L0003: JE              L00,G28 [TRUE] L0004
       CALL_VS         R1146 (L00,L06) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
L0004: CALL_VN         R0170 (L06,L01,L02)
L0005: STORE           L06,L07
       JUMP            L0002
L0006: CALL_VS         R1284 (L00,#07) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       GET_PROP        L00,#07 -> Gef
       STORE           L06,Gef
L0007: JZ              L06 [TRUE] L0010
       GET_PROP        L06,#09 -> Gef
       STORE           L07,Gef
       JE              L00,G28 [TRUE] L0008
       CALL_VS         R1146 (L00,L06) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
L0008: CALL_VN         R0170 (L06,#00,L02)
L0009: STORE           L06,L07
       JUMP            L0007
L0010: GET_PROP_ADDR   L00,#04 -> Gef
       STORE           L04,Gef
       JZ              L04 [TRUE] L0017
       LOADW           L04,#00 -> -(SP)
       CALL_VS         R0118 ((SP)+,G78) -> -(SP)
       JG              (SP)+,#00 [TRUE] L0011
       PUSH            #00
       JUMP            L0012
L0011: PUSH            #01
L0012: PULL            L03
       JZ              L03 [TRUE] L0013
       ADD             #02,L02 -> G58
       CALL_VN         R0112 (L00,#04)
       STORE           G58,#00
       JUMP            L0017
L0013: GET_PROP_ADDR   L00,#04 -> Gef
       JZ              Gef [TRUE] L0014
       GET_PROP_LEN    Gef -> Gef
L0014: STORE           L05,Gef
       STORE           L03,#00
L0015: MUL             #02,L03 -> -(SP)
       JL              (SP)+,L05 [FALSE] L0017
       LOADW           L04,L03 -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       LOADW           L04,L03 -> -(SP)
       CALL_VN         R0170 ((SP)+,#00,L02)
L0016: INC             L03
       JUMP            L0015
L0017: RTRUE           

Routine R0171, 1 local

       PUSH            G49
       PUSH            G52
       STORE           Gef,G52
       JE              Gef,#06 [FALSE] L0002
       JE              L00,G49 [FALSE] L0001
       STORE           G4a,#01
L0001: JUMP            L0005
L0002: JE              Gef,#05 [FALSE] L0004
       CALL_VS         R0051 (G49,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2N         G49 (L00)
L0003: JUMP            L0005
L0004: JE              Gef,#00,#01 [FALSE] L0005
       CALL_2N         R0172 (L00)
L0005: PULL            G52
       PULL            G49
       RTRUE           

Routine R0172, 2 locals

       JG              Gb5,G4f [TRUE] L0002
       STORE           G4e,Gb5
       CALL_1S         R0176 -> L01
       JE              L01,#01 [FALSE] L0001
       JE              G22,L00 [FALSE] L0001
       CALL_VN         R0152 (L00,#01)
L0001: JL              L01,#02 [TRUE] L0002
       JL              L01,#80 [FALSE] L0002
       LOADW           #2035,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0002
       CALL_VN         R0152 (L00,#01)
L0002: STORE           G4e,Gb5
       CALL_2S         R0173 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0004
       JG              Gac,#00 [FALSE] L0004
       JE              Gb5,Gac [TRUE] L0004
       STORE           G4e,Gac
       CALL_2S         R0173 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       STORE           Gb5,Gac
       CALL_1N         R0143
L0003: STORE           G4e,Gb5
L0004: RTRUE           

Routine R0173, 6 locals

       JZ              L01 [TRUE] L0001
       JZ              L00 [FALSE] L0001
       RFALSE          
L0001: STORE           Gaf,#00
       JG              G4e,G4f [FALSE] L0004
       JZ              L01 [TRUE] L0002
       RFALSE          
L0002: JZ              Ga5 [TRUE] L0003
       STORE           Gaf,#70
L0003: CALL_VN         R0152 (L00,#00)
       RTRUE           
L0004: GET_PROP        L00,#11 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0012
       STORE           G48,#ffff
       STORE           L05,G4e
       CALL_VS         R0112 (L00,#11) -> L03
       JG              L03,#00 [FALSE] L0011
       ADD             L05,L03 -> G4e
L0005: JE              G48,#1002 [FALSE] L0006
       OR              Gaf,#04 -> Gaf
L0006: AND             Gaf,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       JZ              Gad [FALSE] L0007
       STORE           L03,#00
       JUMP            L0009
L0007: JZ              Ga5 [FALSE] L0008
       STORE           Ga5,#01
       STORE           Ga6,#00
       STORE           Ga7,#00
L0008: OR              Ga6,#08 -> Ga6
       JZ              Ga7 [FALSE] L0009
       STORE           Ga7,#7fff
L0009: JZ              L01 [FALSE] L0010
       CALL_VN         R0152 (L00,L03)
L0010: RET             L03
L0011: JZ              L03 [FALSE] L0012
       JUMP            L0015
L0012: STORE           G48,#ffff
       CALL_1S         R0176 -> L04
       JE              L04,#01 [FALSE] L0013
       JE              G22,L00 [FALSE] L0013
       STORE           L03,#01
       JUMP            L0005
L0013: JL              L04,#02 [TRUE] L0014
       JL              L04,#80 [FALSE] L0014
       LOADW           #2035,L04 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0014
       STORE           L03,#01
       JUMP            L0005
L0014: SUB             G4e,#01 -> -(SP)
       CALL_VS         R0174 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0017
L0015: JZ              Ga5 [TRUE] L0016
       STORE           L03,#00
       STORE           G48,#ffff
       JUMP            L0005
L0016: RFALSE          
L0017: STORE           L02,#01
       LOADB           L04,#06 -> -(SP)
       AND             (SP)+,#74 -> Gaf
       CALL_1S         R0127 -> L04
L0018: SUB             G4e,#01 -> -(SP)
       CALL_VS         R0174 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       INC             L02
       JZ              L04 [TRUE] L0019
       LOADB           L04,#06 -> -(SP)
       AND             (SP)+,#74 -> -(SP)
       OR              Gaf,(SP)+ -> Gaf
L0019: CALL_1S         R0127 -> L04
       JUMP            L0018
L0020: STORE           L03,L02
       JUMP            L0005

Routine R0174, 6 locals

       JZ              L00 [TRUE] RFALSE
       STORE           L03,G4e
       STORE           G4e,L01
       CALL_1S         R0128 -> L02
       STORE           G4e,L03
       JL              G8e,#0100 [TRUE] L0002
       CALL_VS         G8e (L00,L02) -> L03
       JL              L03,#00 [TRUE] L0001
       RET             L03
L0001: SUB             #00,L03 -> L05
       JUMP            L0003
L0002: STORE           L05,G8e
L0003: CALL_VS         R1282 (L00,L05) -> L03
       CALL_VS         R1283 (L00,L05) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0004: JG              L05,L04 [TRUE] L0005
       LOADW           L03,L05 -> -(SP)
       JE              L02,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0004
L0005: RFALSE          

Routine R0175, 6 locals

       CALL_VS         R1282 (L01,L02) -> L03
       CALL_VS         R1283 (L01,L02) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0001: JG              L05,L04 [TRUE] L0002
       LOADW           L03,L05 -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0001
L0002: RFALSE          

Routine R0176, 3 locals

       CALL_1S         R0127 -> L00
       JZ              L00 [TRUE] RFALSE
       JE              L00,"me","myself","self" [FALSE] L0001
       RTRUE           
L0001: LOADW           #2035,#00 -> L02
       STORE           L01,#01
       JUMP            L0003
L0002: ADD             L01,#03 -> L01
L0003: JG              L01,L02 [TRUE] L0005
       LOADW           #2035,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0004
       ADD             L01,#02 -> -(SP)
       RET_POPPED      
L0004: JUMP            L0002
L0005: LOADB           L00,#06 -> -(SP)
       AND             (SP)+,#80 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       RET             L00

Routine R0177, 10 locals

       STORE           L01,G4e
       STORE           G4e,L00
       CALL_1S         R0127 -> L02
       STORE           G4e,L01
       CALL_2S         R0188 (L02) -> L02
       JL              L02,#01 [TRUE] L0001
       RET             L02
L0001: MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> L01
       LOADB           #1fb3,L01 -> L02
       ADD             L02,#1e42 -> L04
       SUB             L01,#01 -> -(SP)
       LOADB           #1fb3,(SP)+ -> L05
       JL              L05,#04 [TRUE] L0002
       STORE           L06,#03e8
L0002: JE              L05,#03 [FALSE] L0003
       STORE           L06,#64
L0003: JE              L05,#02 [FALSE] L0004
       STORE           L06,#0a
L0004: JE              L05,#01 [FALSE] L0005
       STORE           L06,#01
L0005: STORE           L07,#00
       STORE           L03,#00
       SUB             L05,#01 -> L05
       STORE           L03,#00
L0006: JG              L03,L05 [TRUE] L0018
       LOADB           L04,L03 -> L09
       JE              L09,#30 [FALSE] L0007
       STORE           L08,#00
       JUMP            L0017
L0007: JE              L09,#31 [FALSE] L0008
       STORE           L08,#01
       JUMP            L0017
L0008: JE              L09,#32 [FALSE] L0009
       STORE           L08,#02
       JUMP            L0017
L0009: JE              L09,#33 [FALSE] L0010
       STORE           L08,#03
       JUMP            L0017
L0010: JE              L09,#34 [FALSE] L0011
       STORE           L08,#04
       JUMP            L0017
L0011: JE              L09,#35 [FALSE] L0012
       STORE           L08,#05
       JUMP            L0017
L0012: JE              L09,#36 [FALSE] L0013
       STORE           L08,#06
       JUMP            L0017
L0013: JE              L09,#37 [FALSE] L0014
       STORE           L08,#07
       JUMP            L0017
L0014: JE              L09,#38 [FALSE] L0015
       STORE           L08,#08
       JUMP            L0017
L0015: JE              L09,#39 [FALSE] L0016
       STORE           L08,#09
       JUMP            L0017
L0016: RET             #fc18
L0017: MUL             L06,L08 -> -(SP)
       ADD             L07,(SP)+ -> L07
       DIV             L06,#0a -> L06
       INC             L03
       JUMP            L0006
L0018: JG              L05,#03 [FALSE] L0019
       STORE           L07,#2710
L0019: RET             L07

Routine R0178, 3 locals

       STORE           L01,G4e
       STORE           G4e,L00
       CALL_1S         R0128 -> L02
       STORE           G4e,L01
       STORE           Gef,L02
       JE              Gef,"twenty-o" [FALSE] L0001
       RET             #15
L0001: JE              Gef,"twenty-t" [FALSE] L0002
       RET             #16
L0002: JE              Gef,"twenty-t" [FALSE] L0003
       RET             #17
L0003: JE              Gef,"twenty-f" [FALSE] L0004
       RET             #18
L0004: JE              Gef,"twenty-f" [FALSE] L0005
       RET             #19
L0005: JE              Gef,"twenty-s" [FALSE] L0006
       RET             #1a
L0006: JE              Gef,"twenty-s" [FALSE] L0007
       RET             #1b
L0007: JE              Gef,"twenty-e" [FALSE] L0008
       RET             #1c
L0008: JE              Gef,"twenty-n" [FALSE] L0009
       RET             #1d
L0009: JE              Gef,"thirty" [FALSE] L0010
       RET             #1e
L0010: CALL_2S         R0177 (L00) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RTRUE           

Routine R0179, 1 local

       TEST_ATTR       L00,#18 [FALSE] RTRUE
       RFALSE          

Routine R0180, 3 locals

       TEST_ATTR       L00,#01 [TRUE] L0001
       STORE           L01,#06
L0001: TEST_ATTR       L00,#17 [FALSE] L0002
       STORE           L02,#17
L0002: TEST_ATTR       L00,#18 [FALSE] L0003
       STORE           L02,#18
L0003: TEST_ATTR       L00,#19 [FALSE] L0004
       STORE           L02,#19
L0004: JZ              L02 [FALSE] L0006
       JZ              L01 [FALSE] L0005
       STORE           L02,#17
       JUMP            L0006
L0005: STORE           L02,#19
L0006: JE              L02,#18 [FALSE] L0007
       ADD             L01,#01 -> L01
L0007: JE              L02,#19 [FALSE] L0008
       ADD             L01,#02 -> L01
L0008: TEST_ATTR       L00,#1a [FALSE] L0009
       ADD             L01,#03 -> L01
L0009: RET             L01

Routine R0181, 6 locals

       STORE           L04,G4e
       STORE           G4e,L00
       STORE           L02,#00
L0001: JL              L02,L01 [FALSE] L0005
       CALL_1S         R0128 -> L03
       JE              L03,#00,"then","comma," [TRUE] L0002
       JE              L03,#ffff [FALSE] L0003
L0002: JUMP            L0005
L0003: LOADB           L03,#06 -> -(SP)
       AND             (SP)+,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           G48,#1002
       STORE           L05,#01
L0004: INC             L02
       JUMP            L0001
L0005: STORE           G4e,L04
       RET             L05

Routine R0182, 3 locals

       STORE           L02,#01
       JUMP            L0002
L0001: ADD             L02,#03 -> L02
L0002: LOADW           #2035,#00 -> -(SP)
       JG              L02,(SP)+ [TRUE] L0004
       LOADW           #2035,L02 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       ADD             L02,#02 -> -(SP)
       STOREW          #2035,(SP)+,L01
       RTRUE           
L0003: JUMP            L0001
L0004: CALL_2N         R1026 (#0e)
       RTRUE           

Routine R0183, 2 locals

       STORE           L01,#01
       JUMP            L0002
L0001: ADD             L01,#03 -> L01
L0002: LOADW           #2035,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0004
       LOADW           #2035,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       ADD             L01,#02 -> -(SP)
       LOADW           #2035,(SP)+ -> -(SP)
       RET_POPPED      
L0003: JUMP            L0001
L0004: RFALSE          

Routine R0184, 1 local

       CALL_2N         R0185 (L00)
       RTRUE           

Routine R0185, 3 locals

       JE              L00,G22 [FALSE] L0001
       RTRUE           
L0001: CALL_2S         R0180 (L00) -> -(SP)
       LOADW           #1afc,(SP)+ -> L02
       STORE           L01,#01
       JUMP            L0003
L0002: ADD             L01,#03 -> L01
L0003: LOADW           #2035,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0005
       ADD             L01,#01 -> -(SP)
       LOADW           #2035,(SP)+ -> -(SP)
       AND             L02,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       ADD             L01,#02 -> -(SP)
       STOREW          #2035,(SP)+,L00
L0004: JUMP            L0002
L0005: RTRUE           

Routine R0186, 1 local

       GET_CHILD       G22 -> -(SP) [FALSE] L0001
L0001: PULL            L00
       JZ              L00 [TRUE] L0003
L0002: CALL_2N         R0185 (L00)
       GET_SIBLING     L00 -> L00 [TRUE] L0002
L0003: STORE           L00,#00
       RFALSE          

Routine R0187, 2 locals

L0001: JZ              G02 [TRUE] L0002
       GET_PARENT      G22 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
L0002: STORE           Gec,#1e42
       STOREB          Gec,#01,#00
       READ            Gec,#1fb3 -> Gef
       JUMP            L0004
L0003: STORE           Gec,#1e42
       STOREB          Gec,#01,#00
       CALL_1N         R0959
       READ            Gec,#1fb3 -> Gef
L0004: LOADB           #1fb3,#01 -> L01
       JZ              L01 [TRUE] L0005
       LOADW           #1fb3,#01 -> L00
       JE              L00,"y","yes","yes" [TRUE] RTRUE
       JE              L00,"n","no","no" [TRUE] RFALSE
L0005: CALL_VN         R0071 (#00,#01)
       PRINT           "> "
       JUMP            L0001

Routine R0188, 3 locals

       LOADW           #20d1,#00 -> L02
       STORE           L01,#01
       JUMP            L0002
L0001: ADD             L01,#02 -> L01
L0002: JG              L01,L02 [TRUE] L0004
       LOADW           #20d1,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0003
       ADD             L01,#01 -> -(SP)
       LOADW           #20d1,(SP)+ -> -(SP)
       RET_POPPED      
L0003: JUMP            L0001
L0004: RFALSE          

Routine R0189, 4 locals

       MUL             L00,#02 -> L03
       COPY_TABLE      L01,L02,L03
       RTRUE           

Routine R0190, 2 locals

       STORE           L01,Gb2
       LOADW           #263d,#00 -> Gb2
       STOREW          #263d,#00,L01
       JL              L01,Gb2 [FALSE] L0001
       STORE           L01,Gb2
L0001: STORE           L00,L01
L0002: JG              L00,#00 [FALSE] L0003
       SUB             L00,#01 -> -(SP)
       LOADW           #23e5,(SP)+ -> L01
       LOADW           #263d,L00 -> -(SP)
       SUB             L00,#01 -> -(SP)
       STOREW          #23e5,(SP)+,(SP)+
       STOREW          #263d,L00,L01
       DEC             L00
       JUMP            L0002
L0003: RTRUE           

Routine R0191, 6 locals

       JL              L01,#02 [TRUE] RFALSE
       JE              G96,#01 [FALSE] L0007
L0001: JG              G4b,#00 [FALSE] L0002
       LOADW           #1e22,#0002 -> -(SP)
       CALL_VS         R0192 ((SP)+,L00) -> -(SP)
       RET_POPPED      
L0002: STORE           L02,#00
       STORE           L03,#01
L0003: LOADW           #263d,#00 -> -(SP)
       JG              L03,(SP)+ [TRUE] L0006
       LOADW           #263d,L03 -> -(SP)
       CALL_VS         R0192 (L00,(SP)+) -> L05
       JE              L05,#04 [FALSE] L0004
       RET             L05
L0004: JG              L05,L02 [FALSE] L0005
       STORE           L02,L05
L0005: INC             L03
       JUMP            L0003
L0006: RET             L02
L0007: JE              G96,#02 [FALSE] L0013
L0008: PUSH            G4c
       JZ              G4b [FALSE] L0011
       JG              G56,#00 [FALSE] L0009
       CALL_VS         R0192 (L00,G56) -> L02
       JUMP            L0010
L0009: CALL_VS         R0192 (L00,#00) -> L02
L0010: JUMP            L0012
L0011: LOADW           #1e22,#0002 -> -(SP)
       CALL_VS         R0192 ((SP)+,L00) -> L02
L0012: PULL            G4c
       RET             L02
L0013: STORE           L04,G4e
       STORE           L05,G8f
L0014: LOADW           #22e5,G8f -> -(SP)
       JE              (SP)+,#02 [FALSE] L0015
       INC             G8f
       JUMP            L0014
L0015: LOADW           #22e5,G8f -> -(SP)
       JE              (SP)+,#01 [FALSE] L0020
L0016: JG              G4e,G4f [TRUE] L0020
       CALL_1S         R0128 -> L02
       DEC             G4e
       JE              L02,#ffff,#00 [TRUE] L0017
       LOADB           L02,#06 -> -(SP)
       AND             (SP)+,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       INC             G4e
       JUMP            L0016
L0017: JE              L02,"all","each","every" [TRUE] L0018
       JE              L02,"everythin","both" [FALSE] L0019
L0018: INC             G4e
       JUMP            L0016
L0019: CALL_1N         R0146
       PUSH            Gb4
       PUSH            G9e
       PUSH            Gb5
       STOREW          #263d,#00,Gb2
       ADD             #263d,#02 -> -(SP)
       CALL_VN         R0189 (Gb2,#23e5,(SP)+)
       STORE           Gb4,#00
       STORE           Gb2,#00
       STORE           Gb5,G4e
       STORE           G9e,#00
       LOADW           #2325,G8f -> -(SP)
       CALL_VN         R0168 (G28,G29,(SP)+)
       STORE           G4e,L04
       STORE           G96,#01
       CALL_1N         R0190
       PULL            Gb5
       PULL            G9e
       PULL            Gb4
       STORE           G8f,L05
       JUMP            L0001
       JUMP            L0016
L0020: STORE           G8f,L05
       STORE           G4e,L04
       STORE           G96,#02
       JUMP            L0008

Routine R0192, 3 locals

       PUSH            G2b
       PUSH            G27
       PUSH            G32
       PUSH            G33
       STORE           G2b,G4c
       STORE           G27,G22
       JZ              G4d [TRUE] L0001
       STORE           G32,L01
       STORE           G33,L00
       JUMP            L0002
L0001: STORE           G32,L00
       STORE           G33,L01
L0002: CALL_1S         R1167 -> L02
       PULL            G33
       PULL            G32
       PULL            G27
       PULL            G2b
       RET             L02

Routine R0193, 0 locals

       RET             #ffff

Routine R0194, 1 local

       CALL_VS         R0051 (L00,#04) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0051 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: CALL_2N         R0953 (L00)
L0002: RFALSE          

Routine R0195, 0 locals

       SUB             #0142,#ff -> G00
       CALL_2N         R1041 (#01)
L0001: JZ              #01 [TRUE] L0005
L0002: JZ              G16 [FALSE] L0003
       STORE           Gb7,#01
       STORE           G2b,#48
       STORE           G2c,#00
       STORE           G32,#00
       STORE           G33,#00
       STORE           G28,G22
       CALL_2N         R1038 (#02)
       JUMP            L0002
L0003: CALL_2S         R1038 (#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       RTRUE           
L0004: JUMP            L0001
L0005: RTRUE           

Routine R0196, 0 locals

       LOADW           #2b23,#19 -> -(SP)
       CALL_2N         R1041 ((SP)+)
       LOADW           #2b65,#19 -> -(SP)
       CALL_2N         R1041 ((SP)+)
       LOADW           #2ba7,#19 -> -(SP)
       CALL_2N         R1041 ((SP)+)
       CALL_1N         R0005
       PRINT           "


"
       RFALSE          

Routine R0197, 0 locals

       STORE           G19,#01
       LOADW           #270b,#00 -> G22
       LOADW           #270b,#03 -> G1b
       STORE           G23,#00
       STORE           G02,#00
       CALL_1N         R0219
       CALL_1N         R1246
       CALL_1N         R1242
       CALL_1N         R1278
       CALL_1N         R1243
       CALL_1N         R1211
       RFALSE          

Routine R0198, 1 local

       JZ              #00 [TRUE] L0001
       CALL_2N         R0021 (#00)
L0001: STORE           L00,#01
L0002: JG              L00,#64 [TRUE] L0003
       RANDOM          L00 -> Gef
       INC             L00
       JUMP            L0002
L0003: RFALSE          

Routine R0199, 1 local

       STORE           G22,#0029
       LOADW           #270b,#00 -> L00
       CALL_2S         R1111 (L00) -> G02
       JZ              G02 [FALSE] L0002
       LOADW           #270b,#02 -> G02
       LOADW           #270b,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       LOADW           #270b,#01 -> -(SP)
       INSERT_OBJ      L00,(SP)+
       JUMP            L0002
L0001: INSERT_OBJ      L00,G02
L0002: JE              L00,G22 [TRUE] L0003
       REMOVE_OBJ      ""
       CALL_2N         R1129 (L00)
L0003: STORE           G23,G02
       CALL_1N         R0077
       CALL_1N         R0208
       CALL_1N         R1130
       STORE           G28,G22
       STORE           G27,#00
       STORE           G29,G23
       STORE           G2b,#48
       STOREW          #270b,#04,#01
       RFALSE          

Routine R0200, 0 locals

       JZ              Gb7 [TRUE] RFALSE
       STORE           G19,#00
       CALL_1N         R0139
       CALL_1N         R0201
       RFALSE          

Routine R0201, 0 locals

       LOADW           #1e22,#00 -> -(SP)
       JE              (SP)+,#4f [FALSE] L0001
       STORE           G2c,#01
L0001: LOADW           #1e22,#00 -> -(SP)
       JE              (SP)+,#42 [FALSE] L0002
       LOADW           #1e22,#02 -> -(SP)
       JE              (SP)+,G22 [FALSE] L0002
       JE              G28,G22 [TRUE] L0002
       STOREW          #1e22,#00,#08
       STOREW          #1e22,#02,G28
       STORE           G28,G22
L0002: RTRUE           

Routine R0202, 4 locals

       JZ              Gb7 [TRUE] RFALSE
       STORE           Gb7,#00
       LOADW           #1e22,#00 -> G2b
       STORE           G27,#00
       JE              G28,G22 [TRUE] L0001
       STORE           G27,G22
L0001: STORE           G2d,#00
       STORE           G2e,#00
       STORE           G30,#00
       LOADW           #1e22,#01 -> -(SP)
       JL              (SP)+,#01 [TRUE] L0002
       LOADW           #1e22,#02 -> G2d
       JZ              G2d [FALSE] L0002
       STORE           G30,#01
L0002: LOADW           #1e22,#01 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0003
       LOADW           #1e22,#03 -> G2e
       JZ              G2e [FALSE] L0003
       STORE           G30,#01
L0003: JE              G2d,#01 [FALSE] L0004
       STORE           G32,#00
       JUMP            L0005
L0004: STORE           G32,G2d
L0005: JE              G2e,#01 [FALSE] L0006
       STORE           G33,#00
       JUMP            L0007
L0006: STORE           G33,G2e
L0007: JZ              G30 [TRUE] L0010
       LOADW           #1d5a,#00 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       CALL_VN         R0071 (#1001,#02)
       RTRUE           
L0008: JZ              G2f [TRUE] L0009
       STORE           G2f,#00
       CALL_VN         R0071 (#1001,#01)
L0009: CALL_1N         R0203
       STORE           G30,#00
       JUMP            L0011
L0010: CALL_VN         R0880 (G2b,G32,G33)
L0011: JE              G28,G22 [FALSE] L0012
       JZ              G27 [TRUE] L0013
L0012: STORE           G2b,#48
L0013: STORE           G28,G22
       STORE           G27,#00
       JZ              G2c [TRUE] L0014
       CALL_1N         R1044
       RTRUE           
L0014: RFALSE          

Routine R0203, 3 locals

       STORE           L00,G02
       STORE           L01,#01
L0001: LOADW           #1d5a,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0006
       LOADW           #1d5a,L01 -> L02
       CALL_1N         R0950
       JZ              G2d [FALSE] L0002
       STORE           G2d,L02
       CALL_VN2        R0880 (G2b,L02,G33,L02)
       STORE           G2d,#00
       JUMP            L0003
L0002: STORE           G2e,L02
       CALL_VN2        R0880 (G2b,G32,L02,L02)
       STORE           G2e,#00
L0003: JZ              G16 [TRUE] L0004
       RTRUE           
L0004: JE              G02,L00 [TRUE] L0005
       CALL_VN         R0071 (#1001,#33)
       RTRUE           
L0005: INC             L01
       JUMP            L0001
L0006: RTRUE           

Routine R0204, 4 locals

       STORE           L00,#01
L0001: LOADW           #339b,#00 -> -(SP)
       JG              L00,(SP)+ [TRUE] L0006
       LOADW           #339b,L00 -> L03
       JZ              L03 [TRUE] L0005
       LOADW           #33a1,L00 -> L01
       STORE           L02,#00
       JL              L01,#00 [FALSE] L0003
       STORE           Gef,#33a1
       STORE           Gee,L00
       LOADW           Gef,Gee -> Ged
       INC             Ged
       STOREW          Gef,Gee,Ged
       LOADW           #33a1,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       STORE           L02,#01
L0002: JUMP            L0004
L0003: JL              G1b,L01 [TRUE] L0004
       ADD             L01,#1e -> -(SP)
       JL              G1b,(SP)+ [FALSE] L0004
       STORE           L02,#01
L0004: JZ              L02 [TRUE] L0005
       STOREW          #339b,L00,#00
       CALL_2N         R1041 (L03)
L0005: INC             L00
       JUMP            L0001
L0006: RFALSE          

Routine R0205, 5 locals

       STORE           L03,#01
L0001: LOADW           #339b,#00 -> -(SP)
       JG              L03,(SP)+ [TRUE] L0004
       LOADW           #339b,L03 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0002
       STORE           L04,L03
       JUMP            L0004
L0002: JZ              L04 [FALSE] L0003
       LOADW           #339b,L03 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       STORE           L04,L03
L0003: INC             L03
       JUMP            L0001
L0004: JZ              L04 [FALSE] L0005
       CALL_2S         R1025 (#08) -> -(SP)
       RET_POPPED      
L0005: STOREW          #339b,L04,L00
       JZ              L02 [TRUE] L0006
       STOREW          #33a1,L04,L01
       JUMP            L0007
L0006: SUB             #00,L01 -> -(SP)
       STOREW          #33a1,L04,(SP)+
L0007: RTRUE           

Routine R0206, 2 locals

       STORE           G1b,L00
       STORE           G1c,L01
       STORE           Gb8,#00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L01 -> Gb8
L0001: RTRUE           

Routine R0207, 0 locals

       INC             G1a
       JE              G1b,#ffff [TRUE] L0003
       JL              G1c,#00 [TRUE] L0001
       ADD             G1b,G1c -> G1b
       JUMP            L0002
L0001: DEC             Gb8
       JZ              Gb8 [FALSE] L0002
       INC             G1b
       SUB             #00,G1c -> Gb8
L0002: MOD             G1b,#05a0 -> G1b
L0003: RFALSE          

Routine R0208, 1 local

       GET_CHILD       G22 -> -(SP) [FALSE] L0001
L0001: PULL            L00
       JZ              L00 [TRUE] L0003
L0002: SET_ATTR        L00,#0b
       GET_SIBLING     L00 -> L00 [TRUE] L0002
L0003: STORE           L00,#01
L0004: TEST_ATTR       L00,#03 [FALSE] L0005
       CALL_VS         R1113 (G22,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       CLEAR_ATTR      L00,#03
L0005: INC             L00
       JG              L00,#0043 [TRUE] L0006
       JUMP            L0004
L0006: GET_CHILD       G22 -> -(SP) [FALSE] L0007
L0007: PULL            L00
       JZ              L00 [TRUE] L0010
L0008: CALL_VS         R0051 (L00,#0018) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           G26,L00
L0009: GET_SIBLING     L00 -> L00 [TRUE] L0008
L0010: STORE           L00,#01
L0011: CALL_VS         R0051 (L00,#0018) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       CALL_VS         R1284 (L00,#08) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       GET_PROP        L00,#08 -> Gef
       PUSH            Gef
       JE              (SP)+,G22 [FALSE] L0012
       STORE           G26,L00
L0012: INC             L00
       JG              L00,#0043 [TRUE] L0013
       JUMP            L0011
L0013: RFALSE          

Routine R0209, 0 locals

       JZ              G18 [TRUE] L0001
       CALL_1N         R1044
       STORE           G18,#00
       STORE           G16,#00
       STORE           G17,#00
       RTRUE           
L0001: RFALSE          

Routine R0210, 0 locals

       PRINT           "
"
L0001: JZ              #01 [TRUE] L0002
       CALL_2N         R0904 (#1c)
       CALL_1N         R0946
       JUMP            L0001
L0002: RTRUE           

Routine R0211, 0 locals

       CALL_1N         R0959
       CALL_VN         R0137 (#1e42,#1fb3)
       CALL_1S         R0122 -> -(SP)
       ADD             #64,(SP)+ -> G43
       CALL_1S         R0122 -> G4f
       STORE           G4e,#01
       RFALSE          

Routine R0212, 0 locals

       RESTART         
       RTRUE           

Routine R0213, 0 locals

       STORE           G28,G22
       CALL_1N         R0041
       RTRUE           

Routine R0214, 0 locals

       QUIT            

Routine R0215, 0 locals

       JZ              G19 [FALSE] L0001
       INC             G1a
L0001: CALL_1N         R0932
       JZ              G19 [FALSE] L0002
       DEC             G1a
L0002: RTRUE           

Routine R0216, 0 locals

       PRINT           "

    "
       CALL_2N         R0026 (#05)
       PRINT           "***"
       JE              G16,#01 [FALSE] L0001
       CALL_VN         R0071 (#1001,#03)
L0001: JE              G16,#02 [FALSE] L0002
       CALL_VN         R0071 (#1001,#04)
L0002: JE              G16,#03 [FALSE] L0003
       CALL_VN         R0071 (#1001,#4b)
L0003: JE              G16,#00,#01,#02 [TRUE] L0006
       JE              G16,#03 [TRUE] L0006
       PRINT           " "
       CALL_VS         R0051 (G16,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_1N         G16
L0004: CALL_VS         R0051 (G16,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       PRINT_PADDR     G16
L0005: PRINT           " "
L0006: PRINT           "***"
       CALL_2N         R0026 (#00)
       PRINT           "

"
       PRINT           "
"
       RFALSE          

Routine R0217, 0 locals

       CALL_1N         R0933
       RFALSE          

Routine R0218, 0 locals

       STORE           G03,G1d
       STORE           G04,G1a
       RFALSE          

Routine R0219, 1 local

       STORE           L00,#00
L0001: JL              L00,#30 [FALSE] L0002
       STOREW          #2905,L00,#ffff
       INC             L00
       JUMP            L0001
L0002: STORE           L00,#00
L0003: JL              L00,#df [FALSE] L0004
       STOREW          #2965,L00,#ffff
       INC             L00
       JUMP            L0003
L0004: STOREW          #2965,#0000,#00
       STOREW          #2965,#0000,#02
       STOREW          #2965,#0000,#04
       STOREW          #2965,#15,#0a
       STOREW          #2965,#12,#10
       STOREW          #2965,#05,#16
       STOREW          #2965,#0a,#1c
       STOREW          #2965,#10,#20
       STOREW          #2965,#0e,#23
       STOREW          #2965,#004c,#26
       STOREW          #2965,#0c,#29
       STOREW          #2965,#06,#2c
       STOREW          #2965,#17,#31
       STOREW          #2905,#1a,#36
       STOREW          #2905,#1b,#3c
       STOREW          #2905,#1d,#42
       STOREW          #2905,#08,#48
       STOREW          #2905,#15,#4c
       STOREW          #2905,#08,#4f
       STOREW          #2905,#06,#53
       STOREW          #2905,#10,#56
       STOREW          #2905,#0f,#59
       STOREW          #2905,#02,#5c
       STOREW          #2905,#1f,#5f
       STOREW          #2905,#0b,#62
       STOREW          #2905,#03,#65
       STOREW          #2905,#22,#68
       STOREW          #2905,#1e,#6c
       STOREW          #2905,#07,#6f
       STOREW          #2905,#14,#73
       STOREW          #2905,#0d,#76
       STOREW          #2905,#0e,#7a
       STOREW          #2905,#09,#7e
       STOREW          #2905,#0a,#82
       STOREW          #2905,#18,#86
       STOREW          #2905,#19,#89
       STOREW          #2905,#0c,#8c
       STOREW          #2965,#48,#8f
       STOREW          #2905,#24,#91
       STOREW          #2905,#16,#95
       STOREW          #2965,#16,#97
       STOREW          #2965,#14,#99
       STOREW          #2965,#0b,#9b
       STOREW          #2965,#0c,#9d
       STOREW          #2965,#0d,#a0
       STOREW          #2905,#00,#a2
       STOREW          #2965,#0f,#a4
       STOREW          #2965,#0050,#a6
       STOREW          #2905,#20,#a8
       STOREW          #2905,#21,#aa
       STOREW          #2965,#08,#ac
       STOREW          #2965,#07,#ae
       STOREW          #2965,#09,#b0
       STOREW          #2965,#13,#b2
       STOREW          #2965,#19,#b4
       STOREW          #2965,#1f,#b6
       STOREW          #2965,#1a,#b8
       STOREW          #2965,#20,#ba
       STOREW          #2965,#004d,#bc
       STOREW          #2965,#004e,#be
       STOREW          #2965,#1b,#c0
       STOREW          #2965,#0053,#c2
       STOREW          #2965,#1c,#c4
       STOREW          #2965,#21,#c6
       STOREW          #2965,#1d,#c8
       STOREW          #2965,#22,#ca
       STOREW          #2965,#0000,#cc
       STOREW          #2965,#0000,#ce
       STOREW          #2965,#1e,#d0
       STOREW          #2965,#23,#d2
       STOREW          #2965,#0000,#d4
       STOREW          #2965,#0000,#d6
       STOREW          #2965,#0000,#d8
       STOREW          #2965,#0000,#da
       STOREW          #2965,#0051,#dc
       STOREW          #2965,#0052,#de
       STOREW          #2965,#0000,#e0
       STOREW          #2965,#0000,#e2
       STOREW          #2965,#0000,#e4
       STOREW          #2965,#0000,#e6
       STOREW          #2965,#0000,#e8
       STOREW          #2965,#0000,#ea
       STOREW          #2965,#0000,#ec
       STOREW          #2965,#0000,#ee
       STOREW          #2965,#18,#f0
       STOREW          #2965,#01,#f2
       STOREW          #2965,#11,#f4
       STOREW          #2965,#004a,#f6
       RTRUE           

Routine R0220, 1 local

       STORE           Gef,L00
       JE              Gef,#0001 [FALSE] L0001
       PRINT           "Entire Game"
       JUMP            L0002
L0001: PRINT           "<illegal scene>"
L0002: RTRUE           

Routine R0221, 1 local

       MOD             L00,#01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0222, 1 local

       ADD             L00,#ffff -> -(SP)
       MOD             (SP)+,#01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0223, 2 locals

       JZ              L00 [FALSE] L0001
       JZ              L01 [FALSE] L0001
       RANDOM          #01 -> -(SP)
       RET_POPPED      
L0001: JE              L00,L01 [FALSE] L0002
       RET             L01
L0002: JG              L00,L01 [FALSE] L0003
       SUB             L00,L01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       RET_POPPED      
L0003: SUB             L01,L00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0224, 1 local

       STORE           Gef,L00
       JE              Gef,#0001 [FALSE] L0001
       PRINT           "Figure of cover"
       JUMP            L0002
L0001: PRINT           "<illegal figure name>"
L0002: RTRUE           

Routine R0225, 1 local

       MOD             L00,#01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0226, 1 local

       ADD             L00,#ffff -> -(SP)
       MOD             (SP)+,#01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0227, 2 locals

       JZ              L00 [FALSE] L0001
       JZ              L01 [FALSE] L0001
       RANDOM          #01 -> -(SP)
       RET_POPPED      
L0001: JE              L00,L01 [FALSE] L0002
       RET             L01
L0002: JG              L00,L01 [FALSE] L0003
       SUB             L00,L01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       RET_POPPED      
L0003: SUB             L01,L00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0228, 1 local

       STORE           Gef,L00
       PRINT           "<illegal sound name>"
       RTRUE           

Routine R0229, 1 local

       MOD             L00,#00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0230, 1 local

       ADD             L00,#fffe -> -(SP)
       MOD             (SP)+,#00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0231, 2 locals

       JZ              L00 [FALSE] L0001
       JZ              L01 [FALSE] L0001
       RANDOM          #00 -> -(SP)
       RET_POPPED      
L0001: JE              L00,L01 [FALSE] L0002
       RET             L01
L0002: JG              L00,L01 [FALSE] L0003
       SUB             L00,L01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       RET_POPPED      
L0003: SUB             L01,L00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0232, 1 local

       STORE           Gef,L00
       PRINT           "<illegal external file>"
       RTRUE           

Routine R0233, 1 local

       MOD             L00,#00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0234, 1 local

       ADD             L00,#fffe -> -(SP)
       MOD             (SP)+,#00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0235, 2 locals

       JZ              L00 [FALSE] L0001
       JZ              L01 [FALSE] L0001
       RANDOM          #00 -> -(SP)
       RET_POPPED      
L0001: JE              L00,L01 [FALSE] L0002
       RET             L01
L0002: JG              L00,L01 [FALSE] L0003
       SUB             L00,L01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       RET_POPPED      
L0003: SUB             L01,L00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0236, 1 local

       STORE           Gef,L00
       JE              Gef,#0001 [FALSE] L0001
       PRINT           "didn't understand error"
       JUMP            L0021
L0001: JE              Gef,#0002 [FALSE] L0002
       PRINT           "only understood as far as error"
       JUMP            L0021
L0002: JE              Gef,#0003 [FALSE] L0003
       PRINT_PADDR     S213
       JUMP            L0021
L0003: JE              Gef,#0004 [FALSE] L0004
       PRINT_PADDR     S214
       JUMP            L0021
L0004: JE              Gef,#0005 [FALSE] L0005
       PRINT           "can't see any such thing error"
       JUMP            L0021
L0005: JE              Gef,#0006 [FALSE] L0006
       PRINT           "said too little error"
       JUMP            L0021
L0006: JE              Gef,#0007 [FALSE] L0007
       PRINT           "aren't holding that error"
       JUMP            L0021
L0007: JE              Gef,#0008 [FALSE] L0008
       PRINT           "can't use multiple objects error"
       JUMP            L0021
L0008: JE              Gef,#0009 [FALSE] L0009
       PRINT_PADDR     S215
       JUMP            L0021
L0009: JE              Gef,#000a [FALSE] L0010
       PRINT           "not sure what it refers to error"
       JUMP            L0021
L0010: JE              Gef,#000b [FALSE] L0011
       PRINT_PADDR     S216
       JUMP            L0021
L0011: JE              Gef,#000c [FALSE] L0012
       PRINT           "not a verb I recognise error"
       JUMP            L0021
L0012: JE              Gef,#000d [FALSE] L0013
       PRINT_PADDR     S217
       JUMP            L0021
L0013: JE              Gef,#000e [FALSE] L0014
       PRINT           "can't see it at the moment error"
       JUMP            L0021
L0014: JE              Gef,#000f [FALSE] L0015
       PRINT_PADDR     S218
       JUMP            L0021
L0015: JE              Gef,#0010 [FALSE] L0016
       PRINT_PADDR     S219
       JUMP            L0021
L0016: JE              Gef,#0011 [FALSE] L0017
       PRINT           "nothing to do error"
       JUMP            L0021
L0017: JE              Gef,#0012 [FALSE] L0018
       PRINT_PADDR     S220
       JUMP            L0021
L0018: JE              Gef,#0013 [FALSE] L0019
       PRINT_PADDR     S221
       JUMP            L0021
L0019: JE              Gef,#0014 [FALSE] L0020
       PRINT           "I beg your pardon error"
       JUMP            L0021
L0020: PRINT           "<illegal command parser error>"
L0021: RTRUE           

Routine R0237, 1 local

       MOD             L00,#14 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0238, 1 local

       ADD             L00,#12 -> -(SP)
       MOD             (SP)+,#14 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      

Routine R0239, 2 locals

       JZ              L00 [FALSE] L0001
       JZ              L01 [FALSE] L0001
       RANDOM          #14 -> -(SP)
       RET_POPPED      
L0001: JE              L00,L01 [FALSE] L0002
       RET             L01
L0002: JG              L00,L01 [FALSE] L0003
       SUB             L00,L01 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       RET_POPPED      
L0003: SUB             L01,L00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RANDOM          #7fff -> -(SP)
       MOD             (SP)+,(SP)+ -> -(SP)
       ADD             L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0240, 2 locals

       CALL_2S         R0105 (L00) -> L00
       STORE           Gef,L00
       JE              Gef,#02 [FALSE] L0001
       CALL_2N         R0896 (L01)
       JUMP            L0041
L0001: JE              Gef,#03 [FALSE] L0002
       CALL_2N         R0896 (L01)
       JUMP            L0041
L0002: JE              Gef,#04 [FALSE] L0003
       CALL_2N         R0896 (L01)
       JUMP            L0041
L0003: JE              Gef,#05 [FALSE] L0004
       CALL_2N         R0896 (L01)
       JUMP            L0041
L0004: JE              Gef,#06 [FALSE] L0005
       CALL_2N         R0896 (L01)
       JUMP            L0041
L0005: JE              Gef,#07 [FALSE] L0006
       CALL_2N         R0896 (L01)
       JUMP            L0041
L0006: JE              Gef,#08 [FALSE] L0007
       CALL_2N         R0896 (L01)
       JUMP            L0041
L0007: JE              Gef,#09 [FALSE] L0008
       CALL_2N         R0977 (L01)
       JUMP            L0041
L0008: JE              Gef,#0a [FALSE] L0009
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0009: JE              Gef,#0b [FALSE] L0010
       CALL_2N         R0897 (L01)
       JUMP            L0041
L0010: JE              Gef,#0c [FALSE] L0011
       CALL_2N         R0965 (L01)
       JUMP            L0041
L0011: JE              Gef,#0d [FALSE] L0012
       CALL_2N         R1256 (L01)
       JUMP            L0041
L0012: JE              Gef,#0e [FALSE] L0013
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0013: JE              Gef,#0f [FALSE] L0014
       CALL_2N         R0115 (L01)
       JUMP            L0041
L0014: JE              Gef,#10 [FALSE] L0015
       CALL_2N         R0129 (L01)
       JUMP            L0041
L0015: JE              Gef,#11 [FALSE] L0016
       CALL_2N         R1103 (L01)
       JUMP            L0041
L0016: JE              Gef,#12 [FALSE] L0017
       CALL_2N         R0896 (L01)
       JUMP            L0041
L0017: JE              Gef,#13 [FALSE] L0018
       CALL_2N         R0247 (L01)
       JUMP            L0041
L0018: JE              Gef,#14 [FALSE] L0019
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0019: JE              Gef,#16 [FALSE] L0020
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0020: JE              Gef,#18 [FALSE] L0021
       CALL_2N         R0104 (L01)
       JUMP            L0041
L0021: JE              Gef,#19 [FALSE] L0022
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0022: JE              Gef,#1a [FALSE] L0023
       CALL_2N         R1275 (L01)
       JUMP            L0041
L0023: JE              Gef,#1b [FALSE] L0024
       CALL_2N         R1059 (L01)
       JUMP            L0041
L0024: JE              Gef,#1c [FALSE] L0025
       CALL_2N         R1059 (L01)
       JUMP            L0041
L0025: JE              Gef,#1d [FALSE] L0026
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0026: JE              Gef,#1e [FALSE] L0027
       CALL_2N         R1265 (L01)
       JUMP            L0041
L0027: JE              Gef,#1f [FALSE] L0028
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0028: JE              Gef,#20 [FALSE] L0029
       CALL_2N         R1036 (L01)
       JUMP            L0041
L0029: JE              Gef,#21 [FALSE] L0030
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0030: JE              Gef,#22 [FALSE] L0031
       CALL_2N         R1271 (L01)
       JUMP            L0041
L0031: JE              Gef,#23 [FALSE] L0032
       CALL_2N         R0963 (L01)
       JUMP            L0041
L0032: JE              Gef,#24 [FALSE] L0033
       CALL_2N         R1261 (L01)
       JUMP            L0041
L0033: JE              Gef,#25 [FALSE] L0034
       CALL_2N         R0893 (L01)
       JUMP            L0041
L0034: JE              Gef,#26 [FALSE] L0035
       CALL_2N         R1156 (L01)
       JUMP            L0041
L0035: JE              Gef,#27 [FALSE] L0036
       CALL_2N         R0220 (L01)
       JUMP            L0041
L0036: JE              Gef,#28 [FALSE] L0037
       CALL_2N         R0224 (L01)
       JUMP            L0041
L0037: JE              Gef,#29 [FALSE] L0038
       CALL_2N         R0228 (L01)
       JUMP            L0041
L0038: JE              Gef,#2a [FALSE] L0039
       CALL_2N         R0232 (L01)
       JUMP            L0041
L0039: JE              Gef,#2b [FALSE] L0040
       CALL_2N         R0236 (L01)
       JUMP            L0041
L0040: PRINT_NUM       L01
L0041: RTRUE           

Routine R0241, 2 locals

       CALL_2S         R0105 (L00) -> L01
       STORE           Gef,L01
       JE              Gef,#09 [FALSE] L0001
       RFALSE          
L0001: JE              Gef,#0a [FALSE] L0002
       RFALSE          
L0002: JE              Gef,#0b [FALSE] L0003
       RFALSE          
L0003: JE              Gef,#0c [FALSE] L0004
       RET             S008
L0004: JE              Gef,#0d [FALSE] L0005
       CALL_VS         R1251 (L01,#00,L00) -> -(SP)
       RET_POPPED      
L0005: JE              Gef,#0e [FALSE] L0006
       RET             #20
L0006: JE              Gef,#0f [FALSE] L0007
       RFALSE          
L0007: JE              Gef,#10 [FALSE] L0008
       RET             #65
L0008: JE              Gef,#11 [FALSE] L0009
       RET             #1b34
L0009: JE              Gef,#12 [FALSE] L0010
       RFALSE          
L0010: JE              Gef,#13 [FALSE] L0011
       RTRUE           
L0011: JE              Gef,#14 [FALSE] L0012
       RET             #32c4
L0012: JE              Gef,#16 [FALSE] L0013
       RTRUE           
L0013: JE              Gef,#18 [FALSE] L0014
       RET             #4796
L0014: JE              Gef,#19 [FALSE] L0015
       RTRUE           
L0015: JE              Gef,#1a [FALSE] L0016
       CALL_VS         R1251 (L01,#00,L00) -> -(SP)
       RET_POPPED      
L0016: JE              Gef,#1b [FALSE] L0017
       RET             #7241
L0017: JE              Gef,#1c [FALSE] L0018
       RFALSE          
L0018: JE              Gef,#1d [FALSE] L0019
       RFALSE          
L0019: JE              Gef,#1e [FALSE] L0020
       CALL_VS         R1251 (L01,#00,L00) -> -(SP)
       RET_POPPED      
L0020: JE              Gef,#1f [FALSE] L0021
       RET             #1670
L0021: JE              Gef,#20 [FALSE] L0022
       RTRUE           
L0022: JE              Gef,#21 [FALSE] L0023
       RTRUE           
L0023: JE              Gef,#22 [FALSE] L0024
       CALL_VS         R1251 (L01,#00,L00) -> -(SP)
       RET_POPPED      
L0024: JE              Gef,#23 [FALSE] L0025
       RTRUE           
L0025: JE              Gef,#24 [FALSE] L0026
       CALL_VS         R1251 (L01,#00,L00) -> -(SP)
       RET_POPPED      
L0026: JE              Gef,#25 [FALSE] L0027
       RET             #48
L0027: JE              Gef,#26 [FALSE] L0028
       RET             #021c
L0028: JE              Gef,#27 [FALSE] L0029
       RET             #0001
L0029: JE              Gef,#28 [FALSE] L0030
       RET             #0001
L0030: JE              Gef,#29 [FALSE] L0031
       RTRUE           
L0031: JE              Gef,#2a [FALSE] L0032
       RTRUE           
L0032: JE              Gef,#2b [FALSE] L0033
       RET             #0001
L0033: RFALSE          

Routine R0242, 1 local

       CALL_2S         R0105 (L00) -> L00
       STORE           Gef,L00
       JE              Gef,#09 [FALSE] L0001
       RET             #26ef
L0001: JE              Gef,#0b [FALSE] L0002
       RET             #26ef
L0002: JE              Gef,#0c [FALSE] L0003
       RET             #26ef
L0003: JE              Gef,#0d [FALSE] L0004
       RET             #7a67
L0004: JE              Gef,#0e [FALSE] L0005
       RET             #26ef
L0005: JE              Gef,#0f [FALSE] L0006
       RET             #26ef
L0006: JE              Gef,#10 [FALSE] L0007
       RET             #26ef
L0007: JE              Gef,#11 [FALSE] L0008
       RET             #26ef
L0008: JE              Gef,#12 [FALSE] L0009
       RET             #26ef
L0009: JE              Gef,#13 [FALSE] L0010
       RET             #26ef
L0010: JE              Gef,#14 [FALSE] L0011
       RET             #26ef
L0011: JE              Gef,#16 [FALSE] L0012
       RET             #26ef
L0012: JE              Gef,#18 [FALSE] L0013
       RET             #26ef
L0013: JE              Gef,#19 [FALSE] L0014
       RET             #26ef
L0014: JE              Gef,#1a [FALSE] L0015
       RET             #7a67
L0015: JE              Gef,#1b [FALSE] L0016
       RET             #26ef
L0016: JE              Gef,#1c [FALSE] L0017
       RET             #26ef
L0017: JE              Gef,#1d [FALSE] L0018
       RET             #26ef
L0018: JE              Gef,#1e [FALSE] L0019
       RET             #7a67
L0019: JE              Gef,#1f [FALSE] L0020
       RET             #26ef
L0020: JE              Gef,#20 [FALSE] L0021
       RET             #26ef
L0021: JE              Gef,#21 [FALSE] L0022
       RET             #26ef
L0022: JE              Gef,#22 [FALSE] L0023
       RET             #7a67
L0023: JE              Gef,#23 [FALSE] L0024
       RET             #26ef
L0024: JE              Gef,#24 [FALSE] L0025
       RET             #7a67
L0025: JE              Gef,#25 [FALSE] L0026
       RET             #26ef
L0026: JE              Gef,#27 [FALSE] L0027
       RET             #26ef
L0027: JE              Gef,#28 [FALSE] L0028
       RET             #26ef
L0028: JE              Gef,#29 [FALSE] L0029
       RET             #26ef
L0029: JE              Gef,#2a [FALSE] L0030
       RET             #26ef
L0030: RFALSE          

Routine R0243, 1 local

       CALL_2S         R0105 (L00) -> L00
       STORE           Gef,L00
       JE              Gef,#27 [FALSE] L0001
       RTRUE           
L0001: JE              Gef,#28 [FALSE] L0002
       RTRUE           
L0002: JE              Gef,#29 [FALSE] L0003
       RFALSE          
L0003: JE              Gef,#2a [FALSE] L0004
       RFALSE          
L0004: JE              Gef,#2b [FALSE] L0005
       RET             #14
L0005: RFALSE          

Routine R0244, 1 local

       CALL_2S         R0105 (L00) -> L00
       JE              L00,#0d,#1a,#1e [TRUE] RTRUE
       JE              L00,#22,#24 [TRUE] RTRUE
       RFALSE          

Routine R0245, 1 local

       CALL_2S         R0105 (L00) -> L00
       STORE           Gef,L00
       JE              Gef,#0d [FALSE] L0001
       RET             #7a68
L0001: JE              Gef,#1a [FALSE] L0002
       RET             #7a7f
L0002: JE              Gef,#1e [FALSE] L0003
       RET             #7a71
L0003: JE              Gef,#22 [FALSE] L0004
       RET             #7a77
L0004: JE              Gef,#24 [FALSE] L0005
       RET             #7a70
L0005: RFALSE          

Routine R0246, 1 local

       JE              L00,#000e [FALSE] L0001
       PRINT           "room"
L0001: JE              L00,#000f [FALSE] L0002
       PRINT           "thing"
L0002: JE              L00,#001c [FALSE] L0003
       PRINT           "direction"
L0003: JE              L00,#0015 [FALSE] L0004
       PRINT           "door"
L0004: JE              L00,#0016 [FALSE] L0005
       PRINT           "container"
L0005: JE              L00,#0010 [FALSE] L0006
       PRINT           "supporter"
L0006: JE              L00,#0019 [FALSE] L0007
       PRINT           "backdrop"
L0007: JE              L00,#0011 [FALSE] L0008
       PRINT           "person"
L0008: JE              L00,#001b [FALSE] L0009
       PRINT           "region"
L0009: JE              L00,#0012 [FALSE] L0010
       PRINT           "man"
L0010: JE              L00,#0013 [FALSE] L0011
       PRINT           "woman"
L0011: JE              L00,#0014 [FALSE] L0012
       PRINT           "animal"
L0012: JE              L00,#001a [FALSE] L0013
       PRINT           "device"
L0013: JE              L00,#0017 [FALSE] L0014
       PRINT           "vehicle"
L0014: JE              L00,#0018 [FALSE] L0015
       PRINT           "player's holdall"
L0015: RTRUE           

Routine R0247, 1 local

       PRINT_PADDR     L00
       RFALSE          

Routine R0248, 1 local

       STORE           L00,G02
       JE              L00,#07 [FALSE] L0001
       STORE           L00,G23
L0001: JE              L00,#33 [FALSE] L0002
       RET             #2b
L0002: RET             #2a

Routine R0249, 1 local

       STORE           L00,G02
       JE              L00,#07 [FALSE] L0001
       STORE           L00,G23
L0001: JE              L00,#33 [FALSE] L0002
       RET             #31
L0002: RET             #33

Routine R0250, 1 local

       STORE           Gef,L00
       JE              Gef,#64 [FALSE] L0001
       RET             #0c
L0001: JE              Gef,#65 [FALSE] L0002
       RET             #0b
L0002: JE              Gef,#66 [FALSE] L0003
       RET             #14
L0003: JE              Gef,#67 [FALSE] L0004
       RET             #479c
L0004: JE              Gef,#68 [FALSE] L0005
       RET             #47a4
L0005: JE              Gef,#69 [FALSE] L0006
       RET             #09
L0006: JE              Gef,#6a [FALSE] L0007
       RET             #0a
L0007: RTRUE           

Routine R0251, 2 locals

       JE              L01,#01 [FALSE] L0001
       STOREW          #3aeb,L00,#2e
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       JUMP            L0002
L0001: INC             L00
       INC             L00
       INC             L00
       INC             L00
       INC             L00
L0002: RET             #05

Routine R0252, 2 locals

       JE              L01,#01 [FALSE] L0001
       STOREW          #3aeb,L00,#00
       INC             L00
       JUMP            L0002
L0001: INC             L00
L0002: RTRUE           

Routine R0253, 2 locals

       JE              L01,#01 [FALSE] L0001
       STOREW          #3aeb,L00,#48
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       JUMP            L0002
L0001: INC             L00
       INC             L00
       INC             L00
       INC             L00
L0002: RET             #04

Routine R0254, 2 locals

       JE              L01,#01 [FALSE] L0001
       STOREW          #3aeb,L00,#00
       INC             L00
       JUMP            L0002
L0001: INC             L00
L0002: RTRUE           

Routine R0255, 4 locals

       STORE           Gef,L00
       JE              Gef,#1b [FALSE] L0001
       PRINT           "taking inventory"
       JUMP            L0165
L0001: JE              Gef,#40 [FALSE] L0003
       PRINT           "taking"
       JE              L03,#02 [TRUE] L0002
       PRINT           " "
       CALL_2N         R0894 (L01)
L0002: JUMP            L0165
L0003: JE              Gef,#31 [FALSE] L0007
       PRINT           "removing"
       PRINT           " "
       JE              L03,#02 [FALSE] L0004
       PRINT           "it"
       JUMP            L0005
L0004: CALL_2N         R0894 (L01)
L0005: PRINT           " "
       PRINT           "from"
       JE              L03,#02 [TRUE] L0006
       PRINT           " "
       CALL_2N         R0894 (L02)
L0006: JUMP            L0165
L0007: JE              Gef,#12 [FALSE] L0009
       PRINT           "dropping"
       JE              L03,#02 [TRUE] L0008
       PRINT           " "
       CALL_2N         R0894 (L01)
L0008: JUMP            L0165
L0009: JE              Gef,#30 [FALSE] L0013
       PRINT           "putting"
       PRINT           " "
       JE              L03,#02 [FALSE] L0010
       PRINT           "it"
       JUMP            L0011
L0010: CALL_2N         R0894 (L01)
L0011: PRINT           " "
       PRINT           "on"
       JE              L03,#02 [TRUE] L0012
       PRINT           " "
       CALL_2N         R0894 (L02)
L0012: JUMP            L0165
L0013: JE              Gef,#1a [FALSE] L0017
       PRINT           "inserting"
       PRINT           " "
       JE              L03,#02 [FALSE] L0014
       PRINT           "it"
       JUMP            L0015
L0014: CALL_2N         R0894 (L01)
L0015: PRINT           " "
       PRINT           "into"
       JE              L03,#02 [TRUE] L0016
       PRINT           " "
       CALL_2N         R0894 (L02)
L0016: JUMP            L0165
L0017: JE              Gef,#13 [FALSE] L0019
       PRINT           "eating"
       JE              L03,#02 [TRUE] L0018
       PRINT           " "
       CALL_2N         R0894 (L01)
L0018: JUMP            L0165
L0019: JE              Gef,#19 [FALSE] L0021
       PRINT           "going"
       JE              L03,#02 [TRUE] L0020
       PRINT           " "
       CALL_2N         R0894 (L01)
L0020: JUMP            L0165
L0021: JE              Gef,#14 [FALSE] L0023
       PRINT           "entering"
       JE              L03,#02 [TRUE] L0022
       PRINT           " "
       CALL_2N         R0894 (L01)
L0022: JUMP            L0165
L0023: JE              Gef,#16 [FALSE] L0024
       PRINT           "exiting"
       JUMP            L0165
L0024: JE              Gef,#17 [FALSE] L0026
       PRINT           "getting off"
       JE              L03,#02 [TRUE] L0025
       PRINT           " "
       CALL_2N         R0894 (L01)
L0025: JUMP            L0165
L0026: JE              Gef,#23 [FALSE] L0027
       PRINT           "looking"
       JUMP            L0165
L0027: JE              Gef,#15 [FALSE] L0029
       PRINT           "examining"
       JE              L03,#02 [TRUE] L0028
       PRINT           " "
       CALL_2N         R0894 (L01)
L0028: JUMP            L0165
L0029: JE              Gef,#24 [FALSE] L0031
       PRINT           "looking under"
       JE              L03,#02 [TRUE] L0030
       PRINT           " "
       CALL_2N         R0894 (L01)
L0030: JUMP            L0165
L0031: JE              Gef,#34 [FALSE] L0033
       PRINT           "searching"
       JE              L03,#02 [TRUE] L0032
       PRINT           " "
       CALL_2N         R0894 (L01)
L0032: JUMP            L0165
L0033: JE              Gef,#0e [FALSE] L0037
       PRINT           "consulting"
       PRINT           " "
       JE              L03,#02 [FALSE] L0034
       PRINT           "it"
       JUMP            L0035
L0034: CALL_2N         R0894 (L01)
L0035: PRINT           " "
       PRINT           "about"
       JE              L03,#02 [TRUE] L0036
       PRINT           " "
       CALL_2N         R0895 (G3d)
L0036: JUMP            L0165
L0037: JE              Gef,#22 [FALSE] L0041
       PRINT           "locking"
       PRINT           " "
       JE              L03,#02 [FALSE] L0038
       PRINT           "it"
       JUMP            L0039
L0038: CALL_2N         R0894 (L01)
L0039: PRINT           " "
       PRINT           "with"
       JE              L03,#02 [TRUE] L0040
       PRINT           " "
       CALL_2N         R0894 (L02)
L0040: JUMP            L0165
L0041: JE              Gef,#47 [FALSE] L0045
       PRINT           "unlocking"
       PRINT           " "
       JE              L03,#02 [FALSE] L0042
       PRINT           "it"
       JUMP            L0043
L0042: CALL_2N         R0894 (L01)
L0043: PRINT           " "
       PRINT           "with"
       JE              L03,#02 [TRUE] L0044
       PRINT           " "
       CALL_2N         R0894 (L02)
L0044: JUMP            L0165
L0045: JE              Gef,#3f [FALSE] L0047
       PRINT           "switching on"
       JE              L03,#02 [TRUE] L0046
       PRINT           " "
       CALL_2N         R0894 (L01)
L0046: JUMP            L0165
L0047: JE              Gef,#3e [FALSE] L0049
       PRINT           "switching off"
       JE              L03,#02 [TRUE] L0048
       PRINT           " "
       CALL_2N         R0894 (L01)
L0048: JUMP            L0165
L0049: JE              Gef,#2a [FALSE] L0051
       PRINT           "opening"
       JE              L03,#02 [TRUE] L0050
       PRINT           " "
       CALL_2N         R0894 (L01)
L0050: JUMP            L0165
L0051: JE              Gef,#0d [FALSE] L0053
       PRINT           "closing"
       JE              L03,#02 [TRUE] L0052
       PRINT           " "
       CALL_2N         R0894 (L01)
L0052: JUMP            L0165
L0053: JE              Gef,#4d [FALSE] L0055
       PRINT           "wearing"
       JE              L03,#02 [TRUE] L0054
       PRINT           " "
       CALL_2N         R0894 (L01)
L0054: JUMP            L0165
L0055: JE              Gef,#10 [FALSE] L0057
       PRINT           "taking off"
       JE              L03,#02 [TRUE] L0056
       PRINT           " "
       CALL_2N         R0894 (L01)
L0056: JUMP            L0165
L0057: JE              Gef,#18 [FALSE] L0061
       PRINT           "giving"
       PRINT           " "
       JE              L03,#02 [FALSE] L0058
       PRINT           "it"
       JUMP            L0059
L0058: CALL_2N         R0894 (L01)
L0059: PRINT           " "
       PRINT           "to"
       JE              L03,#02 [TRUE] L0060
       PRINT           " "
       CALL_2N         R0894 (L02)
L0060: JUMP            L0165
L0061: JE              Gef,#36 [FALSE] L0065
       PRINT           "showing"
       PRINT           " "
       JE              L03,#02 [FALSE] L0062
       PRINT           "it"
       JUMP            L0063
L0062: CALL_2N         R0894 (L01)
L0063: PRINT           " "
       PRINT           "to"
       JE              L03,#02 [TRUE] L0064
       PRINT           " "
       CALL_2N         R0894 (L02)
L0064: JUMP            L0165
L0065: JE              Gef,#4a [FALSE] L0067
       PRINT           "waking"
       JE              L03,#02 [TRUE] L0066
       PRINT           " "
       CALL_2N         R0894 (L01)
L0066: JUMP            L0165
L0067: JE              Gef,#44 [FALSE] L0071
       PRINT           "throwing"
       PRINT           " "
       JE              L03,#02 [FALSE] L0068
       PRINT           "it"
       JUMP            L0069
L0068: CALL_2N         R0894 (L01)
L0069: PRINT           " "
       PRINT           "at"
       JE              L03,#02 [TRUE] L0070
       PRINT           " "
       CALL_2N         R0894 (L02)
L0070: JUMP            L0165
L0071: JE              Gef,#09 [FALSE] L0073
       PRINT           "attacking"
       JE              L03,#02 [TRUE] L0072
       PRINT           " "
       CALL_2N         R0894 (L01)
L0072: JUMP            L0165
L0073: JE              Gef,#1d [FALSE] L0075
       PRINT           "kissing"
       JE              L03,#02 [TRUE] L0074
       PRINT           " "
       CALL_2N         R0894 (L01)
L0074: JUMP            L0165
L0075: JE              Gef,#07 [FALSE] L0079
       PRINT           "answering"
       PRINT           " "
       JE              L03,#02 [FALSE] L0076
       PRINT           "it"
       JUMP            L0077
L0076: CALL_2N         R0894 (L01)
L0077: PRINT           " "
       PRINT           "that"
       JE              L03,#02 [TRUE] L0078
       PRINT           " "
       CALL_2N         R0895 (G3d)
L0078: JUMP            L0165
L0079: JE              Gef,#42 [FALSE] L0083
       PRINT           "telling"
       PRINT           " "
       JE              L03,#02 [FALSE] L0080
       PRINT           "it"
       JUMP            L0081
L0080: CALL_2N         R0894 (L01)
L0081: PRINT           " "
       PRINT           "about"
       JE              L03,#02 [TRUE] L0082
       PRINT           " "
       CALL_2N         R0895 (G3d)
L0082: JUMP            L0165
L0083: JE              Gef,#08 [FALSE] L0087
       PRINT           "asking"
       PRINT           " "
       JE              L03,#02 [FALSE] L0084
       PRINT           "it"
       JUMP            L0085
L0084: CALL_2N         R0894 (L01)
L0085: PRINT           " "
       PRINT           "about"
       JE              L03,#02 [TRUE] L0086
       PRINT           " "
       CALL_2N         R0895 (G3d)
L0086: JUMP            L0165
L0087: JE              Gef,#4e [FALSE] L0091
       PRINT           "asking"
       PRINT           " "
       JE              L03,#02 [FALSE] L0088
       PRINT           "it"
       JUMP            L0089
L0088: CALL_2N         R0894 (L01)
L0089: PRINT           " "
       PRINT           "for"
       JE              L03,#02 [TRUE] L0090
       PRINT           " "
       CALL_2N         R0894 (L02)
L0090: JUMP            L0165
L0091: JE              Gef,#48 [FALSE] L0092
       PRINT           "waiting"
       JUMP            L0165
L0092: JE              Gef,#46 [FALSE] L0094
       PRINT           "touching"
       JE              L03,#02 [TRUE] L0093
       PRINT           " "
       CALL_2N         R0894 (L01)
L0093: JUMP            L0165
L0094: JE              Gef,#4b [FALSE] L0096
       PRINT           "waving"
       JE              L03,#02 [TRUE] L0095
       PRINT           " "
       CALL_2N         R0894 (L01)
L0095: JUMP            L0165
L0096: JE              Gef,#2c [FALSE] L0098
       PRINT           "pulling"
       JE              L03,#02 [TRUE] L0097
       PRINT           " "
       CALL_2N         R0894 (L01)
L0097: JUMP            L0165
L0098: JE              Gef,#2d [FALSE] L0100
       PRINT           "pushing"
       JE              L03,#02 [TRUE] L0099
       PRINT           " "
       CALL_2N         R0894 (L01)
L0099: JUMP            L0165
L0100: JE              Gef,#2e [FALSE] L0102
       PRINT           "turning"
       JE              L03,#02 [TRUE] L0101
       PRINT           " "
       CALL_2N         R0894 (L01)
L0101: JUMP            L0165
L0102: JE              Gef,#2f [FALSE] L0106
       PRINT           "pushing"
       PRINT           " "
       JE              L03,#02 [FALSE] L0103
       PRINT           "it"
       JUMP            L0104
L0103: CALL_2N         R0894 (L01)
L0104: PRINT           " "
       PRINT           "to"
       JE              L03,#02 [TRUE] L0105
       PRINT           " "
       CALL_2N         R0894 (L02)
L0105: JUMP            L0165
L0106: JE              Gef,#3b [FALSE] L0108
       PRINT           "squeezing"
       JE              L03,#02 [TRUE] L0107
       PRINT           " "
       CALL_2N         R0894 (L01)
L0107: JUMP            L0165
L0108: JE              Gef,#27 [FALSE] L0109
       PRINT           "saying yes"
       JUMP            L0165
L0109: JE              Gef,#26 [FALSE] L0110
       PRINT           "saying no"
       JUMP            L0165
L0110: JE              Gef,#0a [FALSE] L0112
       PRINT           "burning"
       JE              L03,#02 [TRUE] L0111
       PRINT           " "
       CALL_2N         R0894 (L01)
L0111: JUMP            L0165
L0112: JE              Gef,#49 [FALSE] L0113
       PRINT           "waking up"
       JUMP            L0165
L0113: JE              Gef,#43 [FALSE] L0114
       PRINT           "thinking"
       JUMP            L0165
L0114: JE              Gef,#39 [FALSE] L0116
       PRINT           "smelling"
       JE              L03,#02 [TRUE] L0115
       PRINT           " "
       CALL_2N         R0894 (L01)
L0115: JUMP            L0165
L0116: JE              Gef,#1e [FALSE] L0118
       PRINT           "listening to"
       JE              L03,#02 [TRUE] L0117
       PRINT           " "
       CALL_2N         R0894 (L01)
L0117: JUMP            L0165
L0118: JE              Gef,#41 [FALSE] L0120
       PRINT           "tasting"
       JE              L03,#02 [TRUE] L0119
       PRINT           " "
       CALL_2N         R0894 (L01)
L0119: JUMP            L0165
L0120: JE              Gef,#0f [FALSE] L0122
       PRINT           "cutting"
       JE              L03,#02 [TRUE] L0121
       PRINT           " "
       CALL_2N         R0894 (L01)
L0121: JUMP            L0165
L0122: JE              Gef,#1c [FALSE] L0123
       PRINT           "jumping"
       JUMP            L0165
L0123: JE              Gef,#45 [FALSE] L0127
       PRINT           "tying"
       PRINT           " "
       JE              L03,#02 [FALSE] L0124
       PRINT           "it"
       JUMP            L0125
L0124: CALL_2N         R0894 (L01)
L0125: PRINT           " "
       PRINT           "to"
       JE              L03,#02 [TRUE] L0126
       PRINT           " "
       CALL_2N         R0894 (L02)
L0126: JUMP            L0165
L0127: JE              Gef,#11 [FALSE] L0129
       PRINT           "drinking"
       JE              L03,#02 [TRUE] L0128
       PRINT           " "
       CALL_2N         R0894 (L01)
L0128: JUMP            L0165
L0129: JE              Gef,#3a [FALSE] L0130
       PRINT           "saying sorry"
       JUMP            L0165
L0130: JE              Gef,#3c [FALSE] L0131
       PRINT           "swearing obscenely"
       JUMP            L0165
L0131: JE              Gef,#25 [FALSE] L0132
       PRINT           "swearing mildly"
       JUMP            L0165
L0132: JE              Gef,#3d [FALSE] L0134
       PRINT           "swinging"
       JE              L03,#02 [TRUE] L0133
       PRINT           " "
       CALL_2N         R0894 (L01)
L0133: JUMP            L0165
L0134: JE              Gef,#32 [FALSE] L0136
       PRINT           "rubbing"
       JE              L03,#02 [TRUE] L0135
       PRINT           " "
       CALL_2N         R0894 (L01)
L0135: JUMP            L0165
L0136: JE              Gef,#35 [FALSE] L0140
       PRINT           "setting"
       PRINT           " "
       JE              L03,#02 [FALSE] L0137
       PRINT           "it"
       JUMP            L0138
L0137: CALL_2N         R0894 (L01)
L0138: PRINT           " "
       PRINT           "to"
       JE              L03,#02 [TRUE] L0139
       PRINT           " "
       CALL_2N         R0895 (G3d)
L0139: JUMP            L0165
L0140: JE              Gef,#4c [FALSE] L0141
       PRINT           "waving hands"
       JUMP            L0165
L0141: JE              Gef,#0b [FALSE] L0143
       PRINT           "buying"
       JE              L03,#02 [TRUE] L0142
       PRINT           " "
       CALL_2N         R0894 (L01)
L0142: JUMP            L0165
L0143: JE              Gef,#37 [FALSE] L0144
       PRINT           "singing"
       JUMP            L0165
L0144: JE              Gef,#0c [FALSE] L0146
       PRINT           "climbing"
       JE              L03,#02 [TRUE] L0145
       PRINT           " "
       CALL_2N         R0894 (L01)
L0145: JUMP            L0165
L0146: JE              Gef,#38 [FALSE] L0147
       PRINT           "sleeping"
       JUMP            L0165
L0147: JE              Gef,#00 [FALSE] L0148
       PRINT           "quitting the game"
       JUMP            L0165
L0148: JE              Gef,#03 [FALSE] L0149
       PRINT           "saving the game"
       JUMP            L0165
L0149: JE              Gef,#02 [FALSE] L0150
       PRINT           "restoring the game"
       JUMP            L0165
L0150: JE              Gef,#01 [FALSE] L0151
       PRINT           "restarting the game"
       JUMP            L0165
L0151: JE              Gef,#04 [FALSE] L0152
       PRINT           "verifying the story file"
       JUMP            L0165
L0152: JE              Gef,#05 [FALSE] L0153
       PRINT_PADDR     S292
       JUMP            L0165
L0153: JE              Gef,#06 [FALSE] L0154
       PRINT_PADDR     S293
       JUMP            L0165
L0154: JE              Gef,#50 [FALSE] L0155
       PRINT_PADDR     S294
       JUMP            L0165
L0155: JE              Gef,#33 [FALSE] L0156
       PRINT           "requesting the score"
       JUMP            L0165
L0156: JE              Gef,#21 [FALSE] L0157
       PRINT_PADDR     S295
       JUMP            L0165
L0157: JE              Gef,#20 [FALSE] L0158
       PRINT_PADDR     S296
       JUMP            L0165
L0158: JE              Gef,#1f [FALSE] L0159
       PRINT_PADDR     S297
       JUMP            L0165
L0159: JE              Gef,#29 [FALSE] L0160
       PRINT           "switching score notification on"
       JUMP            L0165
L0160: JE              Gef,#28 [FALSE] L0161
       PRINT           "switching score notification off"
       JUMP            L0165
L0161: JE              Gef,#2b [FALSE] L0162
       PRINT           "requesting the pronoun meanings"
       JUMP            L0165
L0162: JE              Gef,#51 [FALSE] L0164
       PRINT           "talking to"
       JE              L03,#02 [TRUE] L0163
       PRINT           " "
       CALL_2N         R0894 (L01)
L0163: JUMP            L0165
L0164: JE              Gef,#52 [FALSE] L0165
       PRINT           "using"
       JE              L03,#02 [TRUE] L0165
       PRINT           " "
       CALL_2N         R0894 (L01)
L0165: RTRUE           

Routine R0256, 0 locals
    Action routine for:
        "carry inventory"
        "i"

       CALL_VS         R0888 (#7d,#7e,#7f) -> -(SP)
       RET_POPPED      

Routine R0257, 0 locals
    Action routine for:
        "carry multi"
        "get multi"
        "pick up multi"
        "pick multi up"

       CALL_VS         R0888 (#80,#81,#82) -> -(SP)
       RET_POPPED      

Routine R0258, 0 locals
    Action routine for:
        "carry multiinside from noun"
        "carry multiinside off noun"
        "get multiinside from noun"
        "remove multiinside from noun"

       CALL_VS         R0888 (#83,#84,#85) -> -(SP)
       RET_POPPED      

Routine R0259, 0 locals
    Action routine for:
        "put down multiheld"
        "put multiheld down"
        "discard multiheld"

       CALL_VS         R0888 (#86,#87,#88) -> -(SP)
       RET_POPPED      

Routine R0260, 0 locals
    Action routine for:
        "put multiexcept on / onto noun"
        "discard multiexcept on / onto noun"

       CALL_VS         R0888 (#89,#8a,#8b) -> -(SP)
       RET_POPPED      

Routine R0261, 0 locals
    Action routine for:
        "put multiexcept in / inside / into noun"
        "insert multiexcept in / into noun"
        "discard multiexcept in / into / down noun"

       CALL_VS         R0888 (#8c,#8d,#8e) -> -(SP)
       RET_POPPED      

Routine R0262, 0 locals
    Action routine for:
        "eat held"

       CALL_VS         R0888 (#8f,#90,#91) -> -(SP)
       RET_POPPED      

Routine R0263, 0 locals
    Action routine for:
        "go"
        "go noun = [parse $7212]"

       CALL_VS         R0888 (#92,#93,#94) -> -(SP)
       RET_POPPED      

Routine R0264, 0 locals
    Action routine for:
        "get in / on"
        "get in / into / on / onto noun"
        "stand on noun"
        "go noun"
        "go into / in / inside / through noun"
        "cross"
        "cross noun"
        "sit on / in / inside noun"
        "sit on top of noun"

       CALL_VS         R0888 (#95,#96,#97) -> -(SP)
       RET_POPPED      

Routine R0265, 0 locals
    Action routine for:
        "get out / off / down / up"
        "stand"
        "stand up"
        "exit"

       CALL_VS         R0888 (#98,#99,#9a) -> -(SP)
       RET_POPPED      

Routine R0266, 0 locals
    Action routine for:
        "get off / down noun"

       CALL_VS         R0888 (#9b,#9c,#9d) -> -(SP)
       RET_POPPED      

Routine R0267, 0 locals
    Action routine for:
        "l"

       CALL_VS         R0888 (#9e,#9f,#a0) -> -(SP)
       RET_POPPED      

Routine R0268, 0 locals
    Action routine for:
        "l noun"
        "l at noun"
        "check noun"
        "read noun"

       CALL_VS         R0888 (#a1,#a2,#a3) -> -(SP)
       RET_POPPED      

Routine R0269, 0 locals
    Action routine for:
        "l under noun"

       CALL_VS         R0888 (#a4,#a5,#a6) -> -(SP)
       RET_POPPED      

Routine R0270, 0 locals
    Action routine for:
        "l inside / in / into / through noun"
        "search noun"

       CALL_VS         R0888 (#a7,#a8,#a9) -> -(SP)
       RET_POPPED      

Routine R0271, 0 locals
    Action routine for:
        "l up topic in noun" REVERSE
        "consult noun on / about topic"
        "read about topic in noun" REVERSE
        "read topic in noun" REVERSE

       CALL_VS         R0888 (#aa,#ab,#ac) -> -(SP)
       RET_POPPED      

Routine R0272, 0 locals
    Action routine for:
        "lock noun with held"

       CALL_VS         R0888 (#ad,#ae,#af) -> -(SP)
       RET_POPPED      

Routine R0273, 0 locals
    Action routine for:
        "open noun with held"
        "unlock noun with held"

       CALL_VS         R0888 (#b0,#b1,#b2) -> -(SP)
       RET_POPPED      

Routine R0274, 0 locals
    Action routine for:
        "rotate noun on"
        "rotate on noun"
        "switch noun"
        "switch on noun"
        "switch noun on"

       CALL_VS         R0888 (#b3,#b4,#b5) -> -(SP)
       RET_POPPED      

Routine R0275, 0 locals
    Action routine for:
        "close off noun"
        "rotate noun off"
        "rotate off noun"
        "switch noun = [parse $7224]"
        "switch noun off"
        "switch off noun"

       CALL_VS         R0888 (#b6,#b7,#b8) -> -(SP)
       RET_POPPED      

Routine R0276, 0 locals
    Action routine for:
        "open noun"

       CALL_VS         R0888 (#b9,#ba,#bb) -> -(SP)
       RET_POPPED      

Routine R0277, 0 locals
    Action routine for:
        "close noun"
        "close up noun"

       CALL_VS         R0888 (#bc,#bd,#be) -> -(SP)
       RET_POPPED      

Routine R0278, 0 locals
    Action routine for:
        "don held"
        "put on held"
        "put held on"

       CALL_VS         R0888 (#bf,#c0,#c1) -> -(SP)
       RET_POPPED      

Routine R0279, 0 locals
    Action routine for:
        "carry off noun"
        "carry noun off"
        "remove held"
        "disrobe held"

       CALL_VS         R0888 (#c2,#c3,#c4) -> -(SP)
       RET_POPPED      

Routine R0280, 0 locals
    Action routine for:
        "feed creature held" REVERSE
        "feed held to creature"

       CALL_VS         R0888 (#c5,#c6,#c7) -> -(SP)
       RET_POPPED      

Routine R0281, 0 locals
    Action routine for:
        "display creature held" REVERSE
        "display held to creature"

       CALL_VS         R0888 (#c8,#c9,#ca) -> -(SP)
       RET_POPPED      

Routine R0282, 0 locals
    Action routine for:
        "awake creature"
        "awake creature up"
        "awake up creature"

       CALL_VS         R0888 (#cb,#cc,#cd) -> -(SP)
       RET_POPPED      

Routine R0283, 0 locals
    Action routine for:
        "discard held at / against noun"

       CALL_VS         R0888 (#ce,#cf,#d0) -> -(SP)
       RET_POPPED      

Routine R0284, 0 locals
    Action routine for:
        "attack noun"

       CALL_VS         R0888 (#d1,#d2,#d3) -> -(SP)
       RET_POPPED      

Routine R0285, 0 locals
    Action routine for:
        "embrace creature"

       CALL_VS         R0888 (#d4,#d5,#d6) -> -(SP)
       RET_POPPED      

Routine R0286, 0 locals
    Action routine for:
        "answer topic to creature" REVERSE

       CALL_VS         R0888 (#d7,#d8,#d9) -> -(SP)
       RET_POPPED      

Routine R0287, 0 locals
    Action routine for:
        "tell creature about topic"

       CALL_VS         R0888 (#da,#db,#dc) -> -(SP)
       RET_POPPED      

Routine R0288, 0 locals
    Action routine for:
        "ask creature about topic"

       CALL_VS         R0888 (#dd,#de,#df) -> -(SP)
       RET_POPPED      

Routine R0289, 0 locals
    Action routine for:
        "ask creature for noun"

       CALL_VS         R0888 (#e0,#e1,#e2) -> -(SP)
       RET_POPPED      

Routine R0290, 0 locals
    Action routine for:
        "wait"

       CALL_VS         R0888 (#e3,#e4,#e5) -> -(SP)
       RET_POPPED      

Routine R0291, 0 locals
    Action routine for:
        "feel noun"

       CALL_VS         R0888 (#e6,#e7,#e8) -> -(SP)
       RET_POPPED      

Routine R0292, 0 locals
    Action routine for:
        "wave noun"

       CALL_VS         R0888 (#e9,#ea,#eb) -> -(SP)
       RET_POPPED      

Routine R0293, 0 locals
    Action routine for:
        "drag noun"

       CALL_VS         R0888 (#ec,#ed,#ee) -> -(SP)
       RET_POPPED      

Routine R0294, 0 locals
    Action routine for:
        "clear noun"

       CALL_VS         R0888 (#ef,#f0,#f1) -> -(SP)
       RET_POPPED      

Routine R0295, 0 locals
    Action routine for:
        "rotate noun"

       CALL_VS         R0888 (#f2,#f3,#f4) -> -(SP)
       RET_POPPED      

Routine R0296, 0 locals
    Action routine for:
        "clear noun noun = [parse $7218]"
        "clear noun to noun = [parse $721e]"

       CALL_VS         R0888 (#f5,#f6,#f7) -> -(SP)
       RET_POPPED      

Routine R0297, 0 locals
    Action routine for:
        "squash noun"

       CALL_VS         R0888 (#f8,#f9,#fa) -> -(SP)
       RET_POPPED      

Routine R0298, 0 locals
    Action routine for:
        "y"

       CALL_VS         R0888 (#fb,#fc,#fd) -> -(SP)
       RET_POPPED      

Routine R0299, 0 locals
    Action routine for:
        "no"

       CALL_VS         R0888 (#fe,#ff,#0100) -> -(SP)
       RET_POPPED      

Routine R0300, 0 locals
    Action routine for:
        "burn noun"

       CALL_VS         R0888 (#0101,#0102,#0103) -> -(SP)
       RET_POPPED      

Routine R0301, 0 locals
    Action routine for:
        "awake"
        "awake up"

       CALL_VS         R0888 (#0104,#0105,#0106) -> -(SP)
       RET_POPPED      

Routine R0302, 0 locals
    Action routine for:
        "think"

       CALL_VS         R0888 (#0107,#0108,#0109) -> -(SP)
       RET_POPPED      

Routine R0303, 0 locals
    Action routine for:
        "smell"
        "smell noun"

       CALL_VS         R0888 (#010a,#010b,#010c) -> -(SP)
       RET_POPPED      

Routine R0304, 0 locals
    Action routine for:
        "listen"
        "listen to noun"
        "hear noun"

       CALL_VS         R0888 (#010d,#010e,#010f) -> -(SP)
       RET_POPPED      

Routine R0305, 0 locals
    Action routine for:
        "taste noun"

       CALL_VS         R0888 (#0110,#0111,#0112) -> -(SP)
       RET_POPPED      

Routine R0306, 0 locals
    Action routine for:
        "chop noun"

       CALL_VS         R0888 (#0113,#0114,#0115) -> -(SP)
       RET_POPPED      

Routine R0307, 0 locals
    Action routine for:
        "hop"

       CALL_VS         R0888 (#0116,#0117,#0118) -> -(SP)
       RET_POPPED      

Routine R0308, 0 locals
    Action routine for:
        "attach noun to noun"

       CALL_VS         R0888 (#0119,#011a,#011b) -> -(SP)
       RET_POPPED      

Routine R0309, 0 locals
    Action routine for:
        "drink noun"

       CALL_VS         R0888 (#011c,#011d,#011e) -> -(SP)
       RET_POPPED      

Routine R0310, 0 locals
    Action routine for:
        "sorry"

       CALL_VS         R0888 (#011f,#0120,#0121) -> -(SP)
       RET_POPPED      

Routine R0311, 0 locals
    Action routine for:
        "damn"

       CALL_VS         R0888 (#0122,#0123,#0124) -> -(SP)
       RET_POPPED      

Routine R0312, 0 locals
    Action routine for:
        "bother"

       CALL_VS         R0888 (#0125,#0126,#0127) -> -(SP)
       RET_POPPED      

Routine R0313, 0 locals
    Action routine for:
        "swing noun"
        "swing on noun"

       CALL_VS         R0888 (#0128,#0129,#012a) -> -(SP)
       RET_POPPED      

Routine R0314, 0 locals
    Action routine for:
        "clean noun"

       CALL_VS         R0888 (#012b,#012c,#012d) -> -(SP)
       RET_POPPED      

Routine R0315, 0 locals
    Action routine for:
        "adjust noun to topic"

       CALL_VS         R0888 (#012e,#012f,#0130) -> -(SP)
       RET_POPPED      

Routine R0316, 0 locals
    Action routine for:
        "wave"

       CALL_VS         R0888 (#0131,#0132,#0133) -> -(SP)
       RET_POPPED      

Routine R0317, 0 locals
    Action routine for:
        "buy noun"

       CALL_VS         R0888 (#0134,#0135,#0136) -> -(SP)
       RET_POPPED      

Routine R0318, 0 locals
    Action routine for:
        "sing"

       CALL_VS         R0888 (#0137,#0138,#0139) -> -(SP)
       RET_POPPED      

Routine R0319, 0 locals
    Action routine for:
        "climb noun"
        "climb up / over noun"

       CALL_VS         R0888 (#013a,#013b,#013c) -> -(SP)
       RET_POPPED      

Routine R0320, 0 locals
    Action routine for:
        "nap"

       CALL_VS         R0888 (#013d,#013e,#013f) -> -(SP)
       RET_POPPED      

Routine R0321, 0 locals
    Action routine for:
        "quit"
        "q"

       CALL_VS         R0888 (#0140,#0141,#0142) -> -(SP)
       RET_POPPED      

Routine R0322, 0 locals
    Action routine for:
        "save"

       CALL_VS         R0888 (#0143,#0144,#0145) -> -(SP)
       RET_POPPED      

Routine R0323, 0 locals
    Action routine for:
        "restore"

       CALL_VS         R0888 (#0146,#0147,#0148) -> -(SP)
       RET_POPPED      

Routine R0324, 0 locals
    Action routine for:
        "restart"

       CALL_VS         R0888 (#0149,#014a,#014b) -> -(SP)
       RET_POPPED      

Routine R0325, 0 locals
    Action routine for:
        "verify"

       CALL_VS         R0888 (#014c,#014d,#014e) -> -(SP)
       RET_POPPED      

Routine R0326, 0 locals
    Action routine for:
        "script"
        "script on"
        "transcrip"
        "transcrip on"

       CALL_VS         R0888 (#014f,#0150,#0151) -> -(SP)
       RET_POPPED      

Routine R0327, 0 locals
    Action routine for:
        "script off"
        "transcrip off"

       CALL_VS         R0888 (#0152,#0153,#0154) -> -(SP)
       RET_POPPED      

Routine R0328, 0 locals
    Action routine for:
        "version"

       CALL_VS         R0888 (#0155,#0156,#0157) -> -(SP)
       RET_POPPED      

Routine R0329, 0 locals
    Action routine for:
        "score"

       CALL_VS         R0888 (#0158,#0159,#015a) -> -(SP)
       RET_POPPED      

Routine R0330, 0 locals
    Action routine for:
        "superbrie"
        "short"

       CALL_VS         R0888 (#015b,#015c,#015d) -> -(SP)
       RET_POPPED      

Routine R0331, 0 locals
    Action routine for:
        "verbose"
        "long"

       CALL_VS         R0888 (#015e,#015f,#0160) -> -(SP)
       RET_POPPED      

Routine R0332, 0 locals
    Action routine for:
        "brief"
        "normal"

       CALL_VS         R0888 (#0161,#0162,#0163) -> -(SP)
       RET_POPPED      

Routine R0333, 0 locals
    Action routine for:
        "notify"
        "notify on"

       CALL_VS         R0888 (#0164,#0165,#0166) -> -(SP)
       RET_POPPED      

Routine R0334, 0 locals
    Action routine for:
        "notify off"

       CALL_VS         R0888 (#0167,#0168,#0169) -> -(SP)
       RET_POPPED      

Routine R0335, 0 locals
    Action routine for:
        "nouns"
        "pronouns"

       CALL_VS         R0888 (#016a,#016b,#016c) -> -(SP)
       RET_POPPED      

Routine R0336, 0 locals
    Action routine for:
        "talk to creature"

       CALL_VS         R0888 (#016d,#016e,#016f) -> -(SP)
       RET_POPPED      

Routine R0337, 0 locals
    Action routine for:
        "use noun"

       CALL_VS         R0888 (#0170,#0171,#0172) -> -(SP)
       RET_POPPED      

Routine R0338, 0 locals
    Action routine for:
        

       STORE           Gef,G46
       PRINT_PADDR     S298
       NEW_LINE        
       RTRUE           

orphan code fragment:

       STORE           G05,#01
       RTRUE           

Routine R0339, 0 locals

       CALL_2N         R1041 (#04)
       RFALSE          

Routine R0340, 0 locals

       CALL_2N         R1038 (#05)
       RFALSE          

Routine R0341, 0 locals

       STORE           G1e,G1d
       RFALSE          

Routine R0342, 0 locals

       STORE           G05,#01
       CALL_1N         R0947
       CALL_1N         R0962
       RFALSE          

Routine R0343, 0 locals

       CALL_VN2        R0873 (#00,G22,#23,#00,#00)
       RFALSE          

Routine R0344, 0 locals

       CALL_2N         R1041 (#04)
       RFALSE          

Routine R0345, 0 locals

       CALL_2N         R1038 (#09)
       RFALSE          

Routine R0346, 0 locals

       CALL_2N         R1041 (#04)
       RFALSE          

Routine R0347, 0 locals

       JE              G1d,G1e [TRUE] L0001
       CALL_1N         R0958
       STORE           G1e,G1d
L0001: RFALSE          

Routine R0348, 0 locals

       CALL_2N         R1038 (#06)
       RFALSE          

Routine R0349, 0 locals

       CALL_2N         R0904 (#1b)
       RFALSE          

Routine R0350, 0 locals

       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S973)
       NEW_LINE        
       RFALSE          

Routine R0351, 0 locals

       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S943)
       NEW_LINE        
       RFALSE          

Routine R0352, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       JZ              #01 [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0005
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3a91,#39)
L0003: CALL_VS         R1034 (#27,L00,#0a) -> -(SP)
       JE              (SP)+,S008 [TRUE] L0004
       STORE           G05,#01
       CALL_1N         R0947
       PUSH            Geb
       STORE           Geb,L00
       PUSH            Geb
       CALL_VS         R1034 (#27,(SP)+,#0a) -> -(SP)
       CALL_2N         R0965 ((SP)+)
       PULL            Geb
       CALL_1N         R0947
       CALL_1N         R0946
       NEW_LINE        
L0004: JUMP            L0006
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#3a91,#39,#01)
L0006: RFALSE          

Routine R0353, 0 locals

       JZ              G31 [TRUE] L0001
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0977 (G31)
       CALL_1N         R0947
       CALL_2N         R0965 (S932)
       CALL_1N         R0947
       CALL_1N         R0950
L0001: RFALSE          

Routine R0354, 0 locals

       JZ              G31 [TRUE] L0001
       CALL_2N         R0185 (G31)
L0001: RFALSE          

Routine R0355, 0 locals

       CALL_2S         R1041 (#14) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0356, 0 locals

       CALL_2S         R1041 (#15) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0357, 0 locals

       CALL_1N         R1044
       RTRUE           

Routine R0358, 3 locals

       JE              G2b,#19 [FALSE] L0006
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3abe,#89)
L0001: CALL_VS         R0924 (#4e27,#04) -> -(SP)
       STOREW          #3aeb,(SP)+,G5a
       CALL_2S         R1111 (G28) -> -(SP)
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,(SP)+
       CALL_2S         R1115 (G28) -> -(SP)
       CALL_VS         R0051 ((SP)+,#17) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R1115 (G28) -> L00
       JZ              #01 [TRUE] L0002
       CALL_2S         R1115 (G28) -> -(SP)
       CALL_2S         R0723 ((SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0924 (#4e27,#03) -> -(SP)
       STOREW          #3aeb,(SP)+,L00
L0002: STORE           L01,#00
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L02,G32
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS2        R1237 (L02,(SP)+,S299,#079c) -> L01
       JUMP            L0004
L0003: CALL_VS         R0051 (G32,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           L01,G32
L0004: CALL_VS         R0051 (L01,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       CALL_VS         R0924 (#4e27,#02) -> -(SP)
       STOREW          #3aeb,(SP)+,L01
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS2        R1238 (L01,(SP)+,S300,#07a1) -> L01
L0005: CALL_VS         R0924 (#4e27,#01) -> -(SP)
       STOREW          #3aeb,(SP)+,L01
       JUMP            L0007
L0006: JG              G75,#01 [FALSE] L0007
       CALL_VN         R1061 (#3abe,#89,#01)
L0007: RFALSE          

Routine R0359, 0 locals

       JE              G2b,#23 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3afc,#ab)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_1N         R0080
L0002: CALL_VS         R0924 (#4e2b,#02) -> -(SP)
       STOREW          #3aeb,(SP)+,G25
       CALL_VS         R0924 (#4e2b,#03) -> -(SP)
       STOREW          #3aeb,(SP)+,G24
       CALL_VS         R0924 (#4e2b,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,#23
       JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3afc,#ab,#01)
L0004: RFALSE          

Routine R0360, 0 locals

       JE              G2b,#16 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3b11,#9f)
L0001: CALL_2S         R1107 (G28) -> -(SP)
       CALL_VS         R0924 ("airlocks",#00) -> -(SP)
       STOREW          #3aeb,(SP)+,(SP)+
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3b11,#9f,#01)
L0003: RFALSE          

Routine R0361, 0 locals

       CALL_2N         R1041 (#0d)
       CALL_1S         R1050 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0924 (#0c,#05) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
       JUMP            L0002
L0001: CALL_VS         R0924 (#0c,#05) -> -(SP)
       STOREW          #3aeb,(SP)+,#00
L0002: RFALSE          

Routine R0362, 0 locals

       CALL_VS         R0924 (#0c,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2S         R1041 ((SP)+) -> G10
       JZ              G10 [TRUE] L0003
       CALL_1S         R1050 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_2N         R1042 (G10)
       JUMP            L0002
L0001: CALL_2N         R1043 (G10)
L0002: RET             #02
L0003: RFALSE          

Routine R0363, 0 locals

       CALL_VS         R0924 (#0c,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2N         R1041 ((SP)+)
       RFALSE          

Routine R0364, 0 locals

       CALL_VS         R0924 (#0c,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       JZ              #01 [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JE              (SP)+,#01 [FALSE] L0003
       CALL_2S         R1041 (#18) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0003: RFALSE          

Routine R0365, 0 locals

       CALL_VS         R0924 (#0c,#05) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       JZ              #01 [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [FALSE] L0003
       CALL_2N         R1041 (#0d)
       CALL_1S         R1050 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R0924 (#0c,#05) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
L0003: RFALSE          

Routine R0366, 0 locals

       CALL_VS         R0924 (#0c,#05) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       JZ              #01 [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JE              (SP)+,#01 [FALSE] L0005
       CALL_VS         R0924 (#0c,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JZ              #01 [TRUE] L0003
       PUSH            #01
       JUMP            L0004
L0003: PUSH            #00
L0004: JZ              (SP)+ [FALSE] L0005
       CALL_VS         R0924 (#0c,#04) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2N         R1041 ((SP)+)
L0005: RFALSE          

Routine R0367, 0 locals

       CALL_1N         R1044
       RTRUE           

Routine R0368, 0 locals

       JE              G22,G28 [FALSE] L0001
       CALL_1N         R1044
       RTRUE           
L0001: RFALSE          

Routine R0369, 0 locals

       JE              G22,G28 [TRUE] L0001
       CALL_VS         R1144 (G22,G28) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_1N         R1044
       RTRUE           
L0001: RFALSE          

Routine R0370, 0 locals

       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1144 (G22,G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_1N         R1044
       RTRUE           
L0001: RFALSE          

Routine R0371, 0 locals

       CALL_VS         R0051 (G33,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1144 (G22,G33) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_1N         R1044
       RTRUE           
L0001: RFALSE          

Routine R0372, 0 locals

       JE              G02,#07 [FALSE] L0001
       CALL_1N         R1044
       RTRUE           
L0001: RFALSE          

Routine R0373, 0 locals

       JE              G2b,#19 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0740 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G28
       JZ              #01 [TRUE] L0002
       CALL_2S         R0740 (G23) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3b85,#02e5)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S953)
       NEW_LINE        
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3b85,#02e5,#01)
L0003: RFALSE          

Routine R0374, 0 locals

       JE              G2b,#19 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0741 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G28
       JZ              #01 [TRUE] L0002
       CALL_2S         R0740 (G23) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3b9c,#02e6)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S946)
       NEW_LINE        
       RTRUE           
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3b9c,#02e6,#01)
L0003: RFALSE          

Routine R0375, 0 locals

       JE              G2b,#19 [FALSE] L0003
       JE              G28,G22 [FALSE] L0003
       CALL_VS         R0925 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,#3b [FALSE] L0003
       JZ              #01 [TRUE] L0003
       CALL_VS         R0925 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3bb2,#02ed)
L0001: CALL_2S         R0727 (#3b) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S967)
       NEW_LINE        
       CALL_2N         R0785 (#3b)
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3bb2,#02ed,#01)
L0004: RFALSE          

Routine R0376, 0 locals

       JE              G2b,#38 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JE              G23,#33 [FALSE] L0002
       JZ              #01 [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3bce,#02f4)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S977)
       NEW_LINE        
       CALL_1N         R1045
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3bce,#02f4,#01)
L0003: RFALSE          

Routine R0377, 0 locals

       JE              G2b,#08 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JE              G32,#2f [FALSE] L0002
       JZ              #01 [TRUE] L0002
       CALL_VS         R1203 (G3b,G3c) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3bde,#02f0)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S958)
       NEW_LINE        
       CALL_1N         R1045
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3bde,#02f0,#01)
L0003: RFALSE          

Routine R0378, 0 locals

       JE              G2b,#08 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JE              G32,#2f [FALSE] L0002
       JZ              #01 [TRUE] L0002
       CALL_VS         R1204 (G3b,G3c) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3bf1,#02f1)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S962)
       NEW_LINE        
       CALL_1N         R1045
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3bf1,#02f1,#01)
L0003: RFALSE          

Routine R0379, 0 locals

       JE              G2b,#08 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JE              G32,#2f [FALSE] L0002
       JZ              #01 [TRUE] L0002
       CALL_VS         R1205 (G3b,G3c) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c04,#02f2)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S957)
       NEW_LINE        
       CALL_1N         R1045
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3c04,#02f2,#01)
L0003: RFALSE          

Routine R0380, 0 locals

       JE              G2b,#42 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JE              G32,#2f [FALSE] L0002
       JZ              #01 [TRUE] L0002
       CALL_VS         R1206 (G3b,G3c) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c17,#02f3)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S961)
       NEW_LINE        
       CALL_1N         R1045
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3c17,#02f3,#01)
L0003: RFALSE          

Routine R0381, 0 locals

       JE              G2b,#2a [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JE              G32,#34 [FALSE] L0002
       JZ              #01 [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c2a,#02ea)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S980)
       NEW_LINE        
       CALL_1N         R1045
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3c2a,#02ea,#01)
L0003: RFALSE          

Routine R0382, 0 locals

       JE              G2b,#2a [FALSE] L0003
       JE              G28,G22 [FALSE] L0003
       JE              G32,#35 [FALSE] L0003
       JZ              #01 [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c3a,#02eb)
L0001: CALL_2S         R0732 (#35) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S979)
       NEW_LINE        
L0002: CALL_1N         R1045
       RTRUE           
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3c3a,#02eb,#01)
L0004: RFALSE          

Routine R0383, 0 locals

       JE              G2b,#52 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JE              G32,#36 [FALSE] L0002
       JZ              #01 [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c4c,#02ec)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S947)
       NEW_LINE        
       STORE           G16,#03
       STORE           G17,#00
       CALL_1N         R1045
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3c4c,#02ec,#01)
L0003: RFALSE          

Routine R0384, 0 locals

       JE              G2b,#51 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JE              G32,#2f [FALSE] L0002
       JZ              #01 [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c5d,#02ef)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S978)
       NEW_LINE        
       CALL_1N         R1045
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3c5d,#02ef,#01)
L0003: RFALSE          

Routine R0385, 0 locals

       JE              G2b,#19 [FALSE] L0003
       JE              G28,G22 [FALSE] L0003
       CALL_VS         R0925 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,#3b [FALSE] L0003
       JZ              #01 [TRUE] L0003
       CALL_VS         R0925 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c6d,#02ee)
L0001: CALL_2S         R0726 (#3b) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2N         R0786 (#3b)
       RFALSE          
L0002: CALL_1N         R1044
       RTRUE           
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3c6d,#02ee,#01)
L0004: RFALSE          

Routine R0386, 0 locals

       JE              G2b,#19 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0740 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G28
       JZ              #01 [TRUE] L0002
       CALL_2S         R0740 (G23) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c85,#02e4)
L0001: CALL_VN         R1044 (#13,S228)
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3c85,#02e4,#01)
L0003: RFALSE          

Routine R0387, 0 locals

       JE              G2b,#40 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R1118 (G32) -> -(SP)
       JE              G22,(SP)+ [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3c99,#24)
L0001: CALL_VN         R1044 (#13,S232)
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3c99,#24,#01)
L0003: RFALSE          

Routine R0388, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0004
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3ca9,#3a)
L0003: CALL_2N         R0780 (L00)
       JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#3ca9,#3a,#01)
L0005: RFALSE          

Routine R0389, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0004
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3cb9,#3b)
L0003: STORE           G05,#01
       CALL_1N         R0947
       PUSH            Geb
       STORE           Geb,L00
       PUSH            Geb
       CALL_VS         R1034 (#09,(SP)+,#12) -> -(SP)
       CALL_2N         R0965 ((SP)+)
       PULL            Geb
       CALL_1N         R1044
       RTRUE           
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#3cb9,#3b,#01)
L0005: RFALSE          

Routine R0390, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0004
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3cd0,#3c)
L0003: STORE           G05,#01
       CALL_1N         R0947
       STORE           G07,G65
       PUSH            G07
       CALL_2N         R0964 ((SP)+)
       CALL_1N         R0947
       CALL_2N         R0965 (S923)
       CALL_VN         R0904 (#01,L00)
       CALL_1N         R1044
       RTRUE           
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#3cd0,#3c,#01)
L0005: RFALSE          

Routine R0391, 0 locals

       CALL_VN2        R0873 (#00,G22,#23,#00,#00)
       RFALSE          

Routine R0392, 0 locals

       CALL_2S         R0713 (G0c) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              G2b,#40 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3cea,#3e)
L0001: CALL_1N         R1045
       RTRUE           
       CALL_1N         R1044
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3cea,#3e,#01)
L0004: RFALSE          

Routine R0393, 0 locals

       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0711 (G0c) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              G2b,#40 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3cf7,#40)
L0001: CALL_1N         R1045
       RTRUE           
       CALL_1N         R1044
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3cf7,#40,#01)
L0004: RFALSE          

Routine R0394, 0 locals

       CALL_VS         R0051 (G0c,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              G2b,#40 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3d07,#3f)
L0001: CALL_1N         R1045
       RTRUE           
       CALL_1N         R1044
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3d07,#3f,#01)
L0004: RFALSE          

Routine R0395, 0 locals

       JE              G2b,#39 [FALSE] L0002
       JZ              G27 [FALSE] L0002
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3d15,#41)
L0001: STORE           G32,G23
       CALL_1N         R1044
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3d15,#41,#01)
L0003: RFALSE          

Routine R0396, 0 locals

       JE              G2b,#1e [FALSE] L0002
       JZ              G27 [FALSE] L0002
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3d1f,#42)
L0001: STORE           G32,G23
       CALL_1N         R1044
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3d1f,#42,#01)
L0003: RFALSE          

Routine R0397, 0 locals

       JE              G2b,#19 [FALSE] L0002
       JZ              G27 [FALSE] L0002
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3d29,#43)
L0001: CALL_VN         R0120 (#19,#07,G32)
       CALL_1N         R1044
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#3d29,#43,#01)
L0003: RFALSE          

Routine R0398, 1 local

       JE              G2b,#14 [FALSE] L0004
       JE              G28,G22 [FALSE] L0004
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3d34,#94)
L0001: CALL_1S         R1212 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       LOADW           #1b3c,#00 -> L00
       JZ              #01 [TRUE] L0002
       STORE           G32,L00
       JUMP            L0003
L0002: RFALSE          
L0003: CALL_1N         R1044
       RTRUE           
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#3d34,#94,#01)
L0005: RFALSE          

Routine R0399, 5 locals

       STORE           L00,#00
       PUSH            L03
       PUSH            L04
       STORE           L01,#2e64
       STORE           L02,#01
       STORE           L03,L01
       STORE           L04,L02
       JUMP            L0002
L0001: INC             L02
       STORE           L03,L01
       STORE           L04,L02
L0002: CALL_2S         R1076 (L01) -> -(SP)
       JG              L02,(SP)+ [TRUE] L0008
       CALL_VS         R1088 (L03,L04) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       CALL_VS         R1086 (L03,#65,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JZ              #01 [TRUE] L0003
       PUSH            #01
       JUMP            L0004
L0003: PUSH            #00
L0004: JZ              (SP)+ [TRUE] L0005
       JZ              G17 [TRUE] L0007
L0005: CALL_VS         R1087 (L03,#67,L04) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       CALL_VS         R1086 (L03,#68,L04) -> -(SP)
       CALL_2S         R0674 ((SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
L0006: CALL_VS         R1087 (L03,#64,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       ADD             L00,#01 -> L00
L0007: JUMP            L0001
L0008: PULL            L04
       PULL            L03
       JL              L00,#01 [FALSE] L0009
       CALL_2S         R1041 (#33da) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0009: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S975)
       PUSH            L03
       PUSH            L04
       STORE           L01,#2e64
       STORE           L02,#01
       STORE           L03,L01
       STORE           L04,L02
       JUMP            L0011
L0010: INC             L02
       STORE           L03,L01
       STORE           L04,L02
L0011: CALL_2S         R1076 (L01) -> -(SP)
       JG              L02,(SP)+ [TRUE] L0020
       CALL_VS         R1088 (L03,L04) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
       CALL_VS         R1086 (L03,#65,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       JZ              #01 [TRUE] L0012
       PUSH            #01
       JUMP            L0013
L0012: PUSH            #00
L0013: JZ              (SP)+ [TRUE] L0014
       JZ              G17 [TRUE] L0019
L0014: CALL_VS         R1087 (L03,#67,L04) -> -(SP)
       JZ              (SP)+ [FALSE] L0015
       CALL_VS         R1086 (L03,#68,L04) -> -(SP)
       CALL_2S         R0674 ((SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
L0015: CALL_VS         R1087 (L03,#64,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       STORE           G05,#01
       CALL_1N         R0947
       CALL_VS         R1086 (L03,#64,L04) -> -(SP)
       CALL_2N         R0965 ((SP)+)
       SUB             L00,#01 -> L00
       JZ              L00 [FALSE] L0016
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S936)
       CALL_1N         R0947
       NEW_LINE        
       JUMP            L0019
L0016: JE              L00,#01 [FALSE] L0018
       CALL_2S         R0688 (#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S930)
L0017: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S927)
       JUMP            L0019
L0018: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S929)
L0019: JUMP            L0010
L0020: PULL            L04
       PULL            L03
       RFALSE          

Routine R0400, 0 locals

       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S934)
       CALL_1N         R0947
       CALL_1N         R0950
       RFALSE          

Routine R0401, 4 locals

       PUSH            L02
       PUSH            L03
       STORE           L00,#2e64
       STORE           L01,#01
       STORE           L02,L00
       STORE           L03,L01
       JUMP            L0002
L0001: INC             L01
       STORE           L02,L00
       STORE           L03,L01
L0002: CALL_2S         R1076 (L00) -> -(SP)
       JG              L01,(SP)+ [TRUE] L0010
       CALL_VS         R1088 (L02,L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       CALL_VS         R1086 (L02,#65,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JZ              #01 [TRUE] L0003
       PUSH            #01
       JUMP            L0004
L0003: PUSH            #00
L0004: JZ              (SP)+ [TRUE] L0005
       JZ              G17 [TRUE] L0009
L0005: CALL_VS         R1087 (L02,#67,L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       CALL_VS         R1086 (L02,#68,L03) -> -(SP)
       CALL_2S         R0674 ((SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
L0006: CALL_VS         R1086 (L02,#66,L03) -> -(SP)
       CALL_VS         R0133 (G43,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R1087 (L02,#67,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R1086 (L02,#67,L03) -> -(SP)
       CALL_2S         R1041 ((SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JUMP            L0008
L0007: CALL_VS         R1086 (L02,#68,L03) -> -(SP)
       CALL_2N         R0904 ((SP)+)
L0008: CALL_1N         R1044
       RTRUE           
L0009: JUMP            L0001
L0010: PULL            L03
       PULL            L02
       CALL_VN         R0120 (#1001,#08)
       RFALSE          

Routine R0402, 4 locals

       STOREW          #2e52,#08,#00
       CALL_2S         R1213 (#00) -> L00
       CALL_2S         R1213 (L00) -> L01
       JUMP            L0002
L0001: STORE           L00,L01
       CALL_2S         R1213 (L01) -> L01
L0002: JZ              L00 [TRUE] L0003
       CALL_2N         R0839 (L00)
       JUMP            L0001
L0003: PUSH            L02
       PUSH            L03
       STORE           L00,#2ec0
       STORE           L01,#01
       STORE           L02,L00
       STORE           L03,L01
       JUMP            L0005
L0004: INC             L01
       STORE           L02,L00
       STORE           L03,L01
L0005: CALL_2S         R1076 (L00) -> -(SP)
       JG              L01,(SP)+ [TRUE] L0007
       CALL_VS         R1088 (L02,L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       CALL_VN         R1089 (L02,L03)
L0006: JUMP            L0004
L0007: PULL            L03
       PULL            L02
       RFALSE          

Routine R0403, 1 local

       STORE           L00,G0c
       CALL_VN         R0904 (#1e,L00)
       RFALSE          

Routine R0404, 5 locals

       STORE           L00,G0c
       CALL_VN         R1102 (#2ec0,#6a,#01)
       PUSH            L03
       PUSH            L04
       STORE           L01,#2ec0
       STORE           L02,#01
       STORE           L03,L01
       STORE           L04,L02
       JUMP            L0002
L0001: INC             L02
       STORE           L03,L01
       STORE           L04,L02
L0002: CALL_2S         R1076 (L01) -> -(SP)
       JG              L02,(SP)+ [TRUE] L0004
       CALL_VS         R1088 (L03,L04) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_VS         R1086 (L03,#69,L04) -> -(SP)
       CALL_VN         R0904 (#1f,(SP)+)
L0003: JUMP            L0001
L0004: PULL            L04
       PULL            L03
       RFALSE          

orphan code fragment:

       CALL_1N         R1044
       RTRUE           

Routine R0405, 8 locals

       STORE           L00,G0c
       STORE           L01,#00
       CALL_2S         R1214 (#00) -> L02
       CALL_2S         R1214 (L02) -> L03
       JUMP            L0002
L0001: STORE           L02,L03
       CALL_2S         R1214 (L03) -> L03
L0002: JZ              L02 [TRUE] L0003
       CALL_2N         R0837 (L02)
       JUMP            L0001
L0003: PUSH            L06
       PUSH            L07
       STORE           L02,#2ec0
       STORE           L03,#01
       STORE           L06,L02
       STORE           L07,L03
       JUMP            L0005
L0004: INC             L03
       STORE           L06,L02
       STORE           L07,L03
L0005: CALL_2S         R1076 (L02) -> -(SP)
       JG              L03,(SP)+ [TRUE] L0008
       CALL_VS         R1088 (L06,L07) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       CALL_VS         R1086 (L06,#6a,L07) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0006
       CALL_VS         R1086 (L06,#69,L07) -> -(SP)
       CALL_2N         R0778 ((SP)+)
L0006: ADD             L01,#01 -> L01
L0007: JUMP            L0004
L0008: PULL            L07
       PULL            L06
       JG              L01,#00 [FALSE] L0039
       CALL_2S         R1215 (#00) -> L02
       CALL_2S         R1215 (L02) -> L03
       JUMP            L0010
L0009: STORE           L02,L03
       CALL_2S         R1215 (L03) -> L03
L0010: JZ              L02 [TRUE] L0012
       CALL_2S         R0721 (L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       CALL_2N         R0837 (L02)
L0011: JUMP            L0009
L0012: CALL_VN         R0905 (#07,L00)
       CALL_1S         R1216 -> -(SP)
       JZ              (SP)+ [FALSE] L0013
       CALL_VN         R0908 (#07,L00)
       JUMP            L0039
L0013: CALL_2S         R0906 (#07) -> -(SP)
       JZ              (SP)+ [FALSE] L0038
       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       JE              L00,G23 [FALSE] L0014
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S976)
       JUMP            L0015
L0014: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S948)
       CALL_1N         R0947
       CALL_2N         R0975 (L00)
       CALL_1N         R0947
       CALL_2N         R0965 (S928)
L0015: JUMP            L0019
L0016: CALL_VS         R0051 (L00,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S955)
       CALL_1N         R0947
       CALL_2N         R0975 (L00)
       CALL_1N         R0947
       CALL_2N         R0965 (S928)
       JUMP            L0019
L0017: CALL_VS         R0051 (L00,#14) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S955)
       CALL_1N         R0947
       CALL_2N         R0975 (L00)
       CALL_1N         R0947
       CALL_2N         R0965 (S928)
       JUMP            L0019
L0018: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S948)
       CALL_1N         R0947
       CALL_2N         R0975 (L00)
       CALL_1N         R0947
       CALL_2N         R0965 (S928)
L0019: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S983)
       LOADW           #2e52,#08 -> -(SP)
       JG              (SP)+,#00 [TRUE] L0020
       JUMP            L0021
L0020: CALL_1N         R0947
       CALL_2N         R0965 (S982)
L0021: CALL_1N         R0947
       CALL_2N         R0965 (S985)
       STORE           L02,#00
       STORE           L03,#01
       CALL_2S         R1217 (#00) -> L04
       CALL_2S         R1217 (L04) -> L05
       JUMP            L0023
L0022: STORE           L04,L05
       CALL_2S         R1217 (L05) -> L05
L0023: JZ              L04 [TRUE] L0027
       CALL_2S         R1107 (L04) -> -(SP)
       JE              (SP)+,L02 [TRUE] L0025
       JZ              L02 [FALSE] L0024
       CALL_2S         R1107 (L04) -> L02
       JUMP            L0025
L0024: STORE           L03,#00
L0025: CALL_2S         R0721 (L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       CALL_2N         R0837 (L04)
L0026: JUMP            L0022
L0027: STORE           G8b,#78f2
       JZ              L03 [TRUE] L0028
       JZ              #01 [TRUE] L0028
       PUSH            #01
       JUMP            L0029
L0028: PUSH            #00
L0029: JE              (SP)+,#01 [FALSE] L0031
       JZ              L02 [TRUE] L0031
       GET_CHILD       L02 -> -(SP) [FALSE] L0030
L0030: CALL_VN         R0094 ((SP)+,#0ad8)
       JUMP            L0036
L0031: STORE           G05,#01
       CALL_1N         R0947
       PUSH            G0b
       STORE           G0b,#01
L0032: CALL_VS         R0051 (G0b,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       CALL_VS         R0051 (G0b,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0033
       CALL_2S         R0719 (G0b) -> -(SP)
       JZ              (SP)+ [TRUE] L0033
       SET_ATTR        G0b,#23
       JUMP            L0034
L0033: CLEAR_ATTR      G0b,#23
L0034: INC             G0b
       JG              G0b,#0043 [TRUE] L0035
       JUMP            L0032
L0035: CALL_2N         R0089 (#08d8)
       PULL            G0b
L0036: JE              L00,G23 [FALSE] L0037
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S926)
L0037: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S931)
       CALL_1N         R0947
       CALL_1N         R0946
       NEW_LINE        
       STORE           G8b,#00
L0038: CALL_VN         R0907 (#07,L00)
L0039: RFALSE          

orphan code fragment:

       CALL_1N         R1044
       RTRUE           

orphan code fragment:

       RFALSE          

Routine R0406, 2 locals

       STORE           L00,G0c
       GET_CHILD       L00 -> L01 [FALSE] L0001
L0001: CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R1172 (L01,#05)
       GET_SIBLING     L01 -> L01 [FALSE] L0002
L0002: JUMP            L0001
L0003: RFALSE          

orphan code fragment:

       CALL_1N         R1044
       RTRUE           

orphan code fragment:

       RFALSE          

Routine R0407, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0005
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3ec3,#4e)
L0003: CALL_VS         R1113 (L00,G22) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VN         R1172 (L00,#00)
L0004: RFALSE          
       CALL_1N         R1044
       RTRUE           
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#3ec3,#4e,#01)
L0006: RFALSE          

Routine R0408, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0005
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3ed6,#4f)
L0003: CALL_2S         R0713 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VN         R1172 (L00,#00)
L0004: RFALSE          
       CALL_1N         R1044
       RTRUE           
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#3ed6,#4f,#01)
L0006: RFALSE          

Routine R0409, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0005
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3ee9,#50)
L0003: CALL_2S         R0718 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VN         R1172 (L00,#00)
L0004: RFALSE          
       CALL_1N         R1044
       RTRUE           
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#3ee9,#50,#01)
L0006: RFALSE          

Routine R0410, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0005
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3efc,#51)
L0003: CALL_2S         R0721 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       CALL_2N         R0185 (L00)
L0004: RFALSE          
       CALL_1N         R1044
       RTRUE           
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#3efc,#51,#01)
L0006: RFALSE          

Routine R0411, 1 local

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0006
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3f0f,#52)
L0003: CALL_2S         R0721 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       JZ              G05 [TRUE] L0004
       STORE           G05,#01
       CALL_1N         R0947
       CALL_1N         R0946
L0004: CALL_VN         R0904 (#06,L00)
       JZ              G05 [TRUE] L0005
       LOADW           #2e52,#08 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       STOREW          #2e52,#08,(SP)+
       CALL_2N         R0780 (L00)
       STORE           G05,#01
       CALL_1N         R0947
       CALL_1N         R0949
L0005: RFALSE          
       CALL_1N         R1044
       RTRUE           
L0006: JG              G75,#01 [FALSE] L0007
       CALL_VN         R1061 (#3f0f,#52,#01)
L0007: RFALSE          

Routine R0412, 3 locals

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0011
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3f2e,#53)
L0003: CALL_2S         R0721 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       CALL_VS         R1029 (L00,#00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       CALL_2S         R0716 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       CALL_VS         R1034 (#09,L00,#0e) -> -(SP)
       JE              (SP)+,S008 [TRUE] L0010
       LOADW           #2e52,#08 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       STOREW          #2e52,#08,(SP)+
       STORE           G05,#01
       CALL_1N         R0947
       PUSH            Geb
       STORE           Geb,L00
       PUSH            Geb
       CALL_VS         R1034 (#09,(SP)+,#0e) -> -(SP)
       CALL_2N         R0965 ((SP)+)
       PULL            Geb
       STORE           G05,#01
       CALL_1N         R0947
       CALL_1N         R0946
       NEW_LINE        
       CALL_2S         R1219 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R1220 (L00,#00) -> L01
       CALL_VS         R1220 (L00,L01) -> L02
       JUMP            L0005
L0004: STORE           L01,L02
       CALL_VS         R1220 (L00,L02) -> L02
L0005: JZ              L01 [TRUE] L0007
       CALL_2N         R0778 (L01)
       CALL_2S         R0721 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_2N         R0837 (L01)
L0006: JUMP            L0004
L0007: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S955)
       CALL_1N         R0947
       CALL_2N         R0975 (L00)
       CALL_1N         R0947
       CALL_2N         R0965 (S923)
       GET_CHILD       L00 -> -(SP) [FALSE] L0008
L0008: CALL_VN         R0094 ((SP)+,#0ed8)
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S931)
       CALL_1N         R0947
       CALL_1N         R0946
       NEW_LINE        
L0009: CALL_2N         R0780 (L00)
L0010: RFALSE          
       CALL_1N         R1044
       RTRUE           
L0011: JG              G75,#01 [FALSE] L0012
       CALL_VN         R1061 (#3f2e,#53,#01)
L0012: RFALSE          

Routine R0413, 3 locals

       STORE           L00,G0c
       STORE           L00,G0c
       JZ              #01 [TRUE] L0001
       CALL_VS         R0051 (G0c,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: JZ              (SP)+ [TRUE] L0010
       JZ              G75 [TRUE] L0003
       CALL_VN         R1061 (#3f77,#55)
L0003: CALL_2S         R0713 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R1113 (L00,G22) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       CALL_2S         R1221 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_2N         R0185 (L00)
       CALL_VS         R1222 (L00,#00) -> L01
       CALL_VS         R1222 (L00,L01) -> L02
       JUMP            L0005
L0004: STORE           L01,L02
       CALL_VS         R1222 (L00,L02) -> L02
L0005: JZ              L01 [TRUE] L0007
       CALL_2N         R0778 (L01)
       CALL_2S         R0721 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_2N         R0837 (L01)
L0006: JUMP            L0004
L0007: LOADW           #2e52,#08 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       STOREW          #2e52,#08,(SP)+
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S955)
       CALL_1N         R0947
       CALL_2N         R0975 (L00)
       CALL_1N         R0947
       CALL_2N         R0965 (S923)
       GET_CHILD       L00 -> -(SP) [FALSE] L0008
L0008: CALL_VN         R0094 ((SP)+,#0ed8)
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S931)
       CALL_1N         R0947
       CALL_1N         R0946
       NEW_LINE        
L0009: RFALSE          
       CALL_1N         R1044
       RTRUE           
L0010: JG              G75,#01 [FALSE] L0011
       CALL_VN         R1061 (#3f77,#55,#01)
L0011: RFALSE          

Routine R0414, 0 locals

       JE              G28,G22 [FALSE] L0004
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3faf,#56)
L0001: GET_CHILD       G22 -> -(SP) [FALSE] L0002
L0002: JZ              (SP)+ [FALSE] L0003
       CALL_VS         R0120 (#1b,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#3faf,#56,#01)
L0005: RFALSE          

Routine R0415, 0 locals

       JE              G28,G22 [FALSE] L0003
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3fbb,#57)
L0001: CALL_VN         R0120 (#1b,#02,G32)
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S933)
       CALL_1N         R0947
       NEW_LINE        
       GET_CHILD       G22 -> -(SP) [FALSE] L0002
L0002: CALL_VN         R0094 ((SP)+,#2017)
       JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3fbb,#57,#01)
L0004: RFALSE          

Routine R0416, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3fcc,#58)
L0001: JE              G28,G22 [TRUE] L0002
       CALL_VN         R0121 (#1b,#05,G28)
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3fcc,#58,#01)
L0004: RFALSE          

Routine R0417, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3fd7,#59)
L0001: JE              G28,G32 [FALSE] L0002
       CALL_VS         R0120 (#40,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3fd7,#59,#01)
L0004: RFALSE          

Routine R0418, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3fe3,#5a)
L0001: CALL_VS         R0051 (G32,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#40,#03,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3fe3,#5a,#01)
L0004: RFALSE          

Routine R0419, 1 local

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#3ff0,#5b)
L0001: GET_PROP        G32,#08 -> Gef
       PUSH            Gef
       CALL_VS         R0051 ((SP)+,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PROP        G32,#08 -> Gef
       STORE           L00,Gef
       JZ              #01 [TRUE] L0002
       CALL_VS         R0120 (#40,#07,L00) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#3ff0,#5b,#01)
L0004: RFALSE          

Routine R0420, 2 locals

       JZ              G27 [FALSE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4002,#5c)
L0001: CALL_VS         R1112 (G28,G32) -> L00
       CALL_2S         R1110 (G32) -> L01
L0002: JZ              L01 [TRUE] L0004
       JE              L01,L00 [TRUE] L0004
       CALL_VS         R0051 (L01,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R0120 (#40,#06,L01) -> -(SP)
       RET_POPPED      
L0003: CALL_2S         R1110 (L01) -> L01
       JUMP            L0002
L0004: JUMP            L0006
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4002,#5c,#01)
L0006: RFALSE          

Routine R0421, 1 local

       JZ              G27 [FALSE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4017,#5d)
L0001: STORE           L00,G32
L0002: JZ              L00 [TRUE] L0003
       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_2S         R1110 (L00) -> L00
       JUMP            L0002
L0003: JZ              L00 [FALSE] L0004
       CALL_VS         R0120 (#40,#08,G32) -> -(SP)
       RET_POPPED      
L0004: JUMP            L0006
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4017,#5d,#01)
L0006: RFALSE          

Routine R0422, 1 local

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4029,#5e)
L0001: CALL_VS         R1112 (G28,G32) -> L00
       JE              L00,G32 [FALSE] L0002
       CALL_VS         R0120 (#40,#04,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4029,#5e,#01)
L0004: RFALSE          

Routine R0423, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4037,#5f)
L0001: CALL_2S         R1118 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       CALL_VS         R0120 (#40,#05,G32) -> -(SP)
       RET_POPPED      
L0002: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0003
       CALL_VS         R0120 (#40,#05,G32) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4037,#5f,#01)
L0005: RFALSE          

Routine R0424, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4049,#60)
L0001: CALL_2S         R0713 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#40,#0a,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4049,#60,#01)
L0004: RFALSE          

Routine R0425, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4056,#61)
L0001: CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#40,#0f,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4056,#61,#01)
L0004: RFALSE          

Routine R0426, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4063,#62)
L0001: CALL_2S         R0711 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#40,#0b,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4063,#62,#01)
L0004: RFALSE          

Routine R0427, 4 locals

       JZ              G27 [FALSE] L0007
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4070,#63)
L0001: CALL_VS         R1034 (#09,G28,#06) -> -(SP)
       CALL_1S         R1223 -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0006
       CALL_1S         R1224 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       LOADW           #1b3c,#00 -> L00
       JZ              #01 [TRUE] L0006
       STORE           L01,#00
       CALL_2S         R1225 (#00) -> L02
       CALL_2S         R1225 (L02) -> L03
       JUMP            L0003
L0002: STORE           L02,L03
       CALL_2S         R1225 (L03) -> L03
L0003: JZ              L02 [TRUE] L0005
       CALL_2S         R0707 (L02) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       JE              L02,L00 [TRUE] L0004
       STORE           L01,L02
L0004: JUMP            L0002
L0005: JZ              L01 [TRUE] L0006
       CALL_VN2        R0120 (#40,#0d,L01,L00)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#1a,L01,L00)
       PULL            G34
       CALL_2S         R1115 (L01) -> -(SP)
       JE              L00,(SP)+ [TRUE] L0006
       RTRUE           
L0006: JUMP            L0008
L0007: JG              G75,#01 [FALSE] L0008
       CALL_VN         R1061 (#4070,#63,#01)
L0008: RFALSE          

Routine R0428, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4098,#64)
L0001: CALL_VS         R1034 (#09,G28,#06) -> -(SP)
       CALL_1S         R1226 -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0002
       CALL_VS         R0120 (#40,#0c,G28) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4098,#64,#01)
L0004: RFALSE          

Routine R0429, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#40a7,#65)
L0001: CALL_VN         R1123 (G32,G28)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#40a7,#65,#01)
L0003: RFALSE          

Routine R0430, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#40b1,#66)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#40,#01,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#40,#10,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#40b1,#66,#01)
L0005: RFALSE          

Routine R0431, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#40bf,#67)
L0001: CALL_2S         R1107 (G32) -> -(SP)
       JE              (SP)+,G33 [TRUE] L0002
       CALL_VS         R0120 (#31,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#40bf,#67,#01)
L0004: RFALSE          

Routine R0432, 1 local

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#40cf,#68)
L0001: CALL_2S         R1107 (G32) -> L00
       CALL_VS         R0051 (L00,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              L00,G28 [FALSE] L0002
       CALL_VS         R0875 (#10,G32,#00) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0120 (#40,#06,L00) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#40cf,#68,#01)
L0005: RFALSE          

Routine R0433, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#40e4,#69)
L0001: CALL_VS         R0875 (#40,G32,#00) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#40e4,#69,#01)
L0003: RFALSE          

Routine R0434, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#40f1,#6a)
L0001: JE              G32,G28 [FALSE] L0002
       CALL_VS         R0120 (#30,#04,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#40f1,#6a,#01)
L0004: RFALSE          

Routine R0435, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#40fd,#6b)
L0001: CALL_2S         R1115 (G32) -> -(SP)
       CALL_2S         R1107 (G28) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0002
       CALL_VS         R0120 (#12,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#40fd,#6b,#01)
L0004: RFALSE          

Routine R0436, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#410c,#6c)
L0001: CALL_2S         R1118 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RFALSE          
L0002: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0003
       RFALSE          
L0003: CALL_VS         R0120 (#12,#02,G32) -> -(SP)
       RET_POPPED      
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#410c,#6c,#01)
L0005: RFALSE          

Routine R0437, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#411c,#6d)
L0001: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       CALL_VN         R0120 (#12,#03,G32)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#10,G32,#00)
       PULL            G34
       CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#411c,#6d,#01)
L0004: RFALSE          

Routine R0438, 1 local

       JZ              G27 [FALSE] L0008
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4131,#6e)
L0001: CALL_2S         R1107 (G28) -> L00
       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RFALSE          
L0002: CALL_VS         R1029 (L00,#00,#06) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R0051 (L00,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       CALL_VS         R1034 (#09,L00,#06) -> -(SP)
       CALL_2S         R1227 (L00) -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0004
       JE              G28,G22 [FALSE] L0003
       CALL_VN         R0120 (#12,#05,L00)
L0003: RTRUE           
L0004: JUMP            L0007
L0005: CALL_VS         R0051 (L00,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R1034 (#09,L00,#06) -> -(SP)
       CALL_2S         R1228 (L00) -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0007
       JE              G28,G22 [FALSE] L0006
       CALL_VN         R0120 (#12,#06,L00)
L0006: RTRUE           
L0007: JUMP            L0009
L0008: JG              G75,#01 [FALSE] L0009
       CALL_VN         R1061 (#4131,#6e,#01)
L0009: RFALSE          

Routine R0439, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4156,#6f)
L0001: CALL_2S         R1107 (G28) -> -(SP)
       CALL_VN         R1123 (G32,(SP)+)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4156,#6f,#01)
L0003: RFALSE          

Routine R0440, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4162,#70)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#12,#04,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#12,#07,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4162,#70,#01)
L0005: RFALSE          

Routine R0441, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4170,#71)
L0001: JE              G33,#26 [TRUE] L0002
       CALL_2S         R1117 (G28) -> -(SP)
       JE              G33,(SP)+ [FALSE] L0003
L0002: CALL_VS         R0875 (#12,G32,#00) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4170,#71,#01)
L0005: RFALSE          

Routine R0442, 0 locals

       JZ              G27 [FALSE] L0005
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4181,#72)
L0001: CALL_2S         R1118 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RFALSE          
L0002: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0003
       RFALSE          
L0003: CALL_VN         R0120 (#1001,#1a,G32)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#40,G32,#00)
       PULL            G34
       CALL_2S         R1118 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0004
       RFALSE          
L0004: CALL_VS         R0120 (#30,#01,G32) -> -(SP)
       RET_POPPED      
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4181,#72,#01)
L0006: RFALSE          

Routine R0443, 3 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#419d,#73)
L0001: CALL_2S         R1109 (G32) -> L00
       CALL_2S         R1109 (G33) -> L01
       CALL_VS         R1112 (L00,L01) -> L02
       JE              L02,L00 [FALSE] L0002
       CALL_VS         R0120 (#30,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#419d,#73,#01)
L0004: RFALSE          

Routine R0444, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#41b0,#74)
L0001: CALL_VS         R0051 (G33,#10) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#30,#03,G33) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#41b0,#74,#01)
L0004: RFALSE          

Routine R0445, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#41c0,#75)
L0001: CALL_VS         R1113 (G28,G33) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#30,#04,G33) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#41c0,#75,#01)
L0004: RFALSE          

Routine R0446, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#41d0,#76)
L0001: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       CALL_VN         R0120 (#30,#05,G32)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#10,G32,#00)
       PULL            G34
       CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#41d0,#76,#01)
L0004: RFALSE          

Routine R0447, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#41e7,#77)
L0001: CALL_VS         R1029 (G33,#00,#06) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1034 (#09,G33,#06) -> -(SP)
       CALL_1S         R1229 -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0002
       CALL_VS         R0120 (#30,#06,G33) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#41e7,#77,#01)
L0004: RFALSE          

Routine R0448, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#41fb,#78)
L0001: CALL_VN         R1123 (G32,G33)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#41fb,#78,#01)
L0003: RFALSE          

Routine R0449, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4208,#79)
L0001: JE              G28,G22 [FALSE] L0002
       JE              G30,#01 [FALSE] L0002
       CALL_VS         R0120 (#30,#07,G32) -> -(SP)
       RET_POPPED      
L0002: RFALSE          
       JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4208,#79,#01)
L0004: RFALSE          

Routine R0450, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4218,#7a)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#30,#08,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#30,#09,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4218,#7a,#01)
L0005: RFALSE          

Routine R0451, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4228,#7b)
L0001: JE              G33,#26 [TRUE] L0002
       CALL_2S         R1115 (G28) -> -(SP)
       JE              G33,(SP)+ [FALSE] L0003
L0002: CALL_VS         R0875 (#12,G32,#00) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4228,#7b,#01)
L0005: RFALSE          

Routine R0452, 0 locals

       JZ              G27 [FALSE] L0005
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4239,#7c)
L0001: CALL_2S         R1118 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RFALSE          
L0002: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0003
       RFALSE          
L0003: CALL_VN         R0120 (#1001,#1a,G32)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#40,G32,#00)
       PULL            G34
       CALL_2S         R1118 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0004
       RFALSE          
L0004: RTRUE           
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4239,#7c,#01)
L0006: RFALSE          

Routine R0453, 3 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4253,#7d)
L0001: CALL_2S         R1109 (G32) -> L00
       CALL_2S         R1109 (G33) -> L01
       CALL_VS         R1112 (L00,L01) -> L02
       JE              L02,L00 [FALSE] L0002
       CALL_VS         R0120 (#1a,#05,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4253,#7d,#01)
L0004: RFALSE          

Routine R0454, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4266,#7e)
L0001: CALL_VS         R0051 (G33,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0727 (G33) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#1a,#03,G33) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4266,#7e,#01)
L0004: RFALSE          

Routine R0455, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4278,#7f)
L0001: CALL_VS         R0051 (G33,#16) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#1a,#02,G33) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4278,#7f,#01)
L0004: RFALSE          

Routine R0456, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4288,#80)
L0001: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       CALL_VN         R0120 (#1a,#06,G32)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#10,G32,#00)
       PULL            G34
       CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4288,#80,#01)
L0004: RFALSE          

Routine R0457, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#429f,#81)
L0001: CALL_VS         R1029 (G33,#00,#06) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1034 (#09,G33,#06) -> -(SP)
       CALL_1S         R1230 -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0002
       CALL_VS         R0120 (#1a,#07,G33) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#429f,#81,#01)
L0004: RFALSE          

Routine R0458, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#42b3,#82)
L0001: CALL_VN         R1123 (G32,G33)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#42b3,#82,#01)
L0003: RFALSE          

Routine R0459, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#42c0,#83)
L0001: JE              G28,G22 [FALSE] L0002
       JE              G30,#01 [FALSE] L0002
       CALL_VS         R0120 (#1a,#08,G32) -> -(SP)
       RET_POPPED      
L0002: RFALSE          
       JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#42c0,#83,#01)
L0004: RFALSE          

Routine R0460, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#42d0,#84)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#1a,#09,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#1a,#0a,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#42d0,#84,#01)
L0005: RFALSE          

Routine R0461, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#42e0,#85)
L0001: CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0709 (G32) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
L0002: CALL_VS         R0120 (#13,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#42e0,#85,#01)
L0005: RFALSE          

Routine R0462, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#42f0,#86)
L0001: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       CALL_VN         R0120 (#12,#03,G32)
       CALL_VN2        R0873 (#00,G28,#10,G32,#00)
       CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#42f0,#86,#01)
L0004: RFALSE          

Routine R0463, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4302,#87)
L0001: CALL_2N         R1124 (G32)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4302,#87,#01)
L0003: RFALSE          

Routine R0464, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#430c,#88)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#13,#02,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#13,#03,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#430c,#88,#01)
L0005: RFALSE          

Routine R0465, 1 local

       JZ              G27 [FALSE] L0002
       STORE           Geb,G28
       JZ              #01 [TRUE] L0002
       CALL_2S         R1117 (G28) -> -(SP)
       CALL_VS         R0051 ((SP)+,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R1117 (G28) -> L00
       JZ              #01 [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#431a,#8a)
L0001: CALL_VN         R0120 (#19,#1b,L00)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#16,#00,#00)
       PULL            G34
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#431a,#8a,#01)
L0003: RFALSE          

Routine R0466, 1 local

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4331,#8b)
L0001: CALL_2S         R1107 (G28) -> L00
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              L00,(SP)+ [FALSE] L0002
       RFALSE          
L0002: CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              L00,(SP)+ [FALSE] L0003
       RFALSE          
L0003: CALL_VS         R0120 (#19,#01,L00) -> -(SP)
       RET_POPPED      
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4331,#8b,#01)
L0005: RFALSE          

Routine R0467, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4346,#8c)
L0001: CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2S         R0718 ((SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS         R0120 (#19,#02,(SP)+) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4346,#8c,#01)
L0004: RFALSE          

Routine R0468, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#435f,#8d)
L0001: CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2S         R0727 ((SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0120 (#19,#1c,(SP)+)
       PUSH            G34
       STORE           G34,#01
       CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN2        R0873 (#00,G28,#2a,(SP)+,#00)
       PULL            G34
       CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2S         R0726 ((SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RFALSE          
L0002: RTRUE           
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#435f,#8d,#01)
L0005: RFALSE          

Routine R0469, 2 locals

       JZ              G27 [FALSE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4386,#8e)
L0001: STORE           L00,#00
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           L01,G32
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS2        R1237 (L01,(SP)+,S301,#07be) -> L00
       JUMP            L0003
L0002: CALL_VS         R0051 (G32,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L00,G32
L0003: CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS2        R1238 (L00,(SP)+,S302,#07c2) -> L00
L0004: CALL_VS         R0924 (#4e27,#01) -> -(SP)
       STOREW          #3aeb,(SP)+,L00
       JUMP            L0006
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4386,#8e,#01)
L0006: RFALSE          

Routine R0470, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#43aa,#8f)
L0001: CALL_VS         R0924 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS         R0120 (#19,#02,(SP)+) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0924 (#4e27,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS         R0120 (#19,#06,(SP)+) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#43aa,#8f,#01)
L0005: RFALSE          

Routine R0471, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#43c7,#90)
L0001: CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0924 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R1127 (G28,(SP)+)
       JUMP            L0003
L0002: CALL_VS         R0924 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R1127 ((SP)+,(SP)+)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#43c7,#90,#01)
L0005: RFALSE          

Routine R0472, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#43e2,#91)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_1N         R1130
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#43e2,#91,#01)
L0004: RFALSE          

Routine R0473, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#43ec,#92)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_1N         R0077
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#43ec,#92,#01)
L0004: RFALSE          

Routine R0474, 3 locals

       JZ              G27 [FALSE] L0029
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#43f6,#93)
L0001: JE              G22,G28 [FALSE] L0002
       CALL_1N         R0878
       JUMP            L0028
L0002: CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              G23,(SP)+ [FALSE] L0007
       CALL_VS         R0924 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              G23,(SP)+ [FALSE] L0003
       RFALSE          
L0003: JE              G32,#25 [FALSE] L0004
       CALL_VN         R0121 (#19,#08,G32)
       JUMP            L0006
L0004: JE              G32,#26 [FALSE] L0005
       CALL_VN         R0121 (#19,#09,G32)
       JUMP            L0006
L0005: CALL_VN         R0121 (#19,#0a,G32)
L0006: JUMP            L0017
L0007: CALL_VS         R1034 (#09,G32,#4c) -> L00
       CALL_VS         R0924 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              G23,(SP)+ [FALSE] L0014
       CALL_VS2        R1239 (L00,G23,S303,#07eb) -> L01
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS2        R1240 (G32,(SP)+,S304,#07ed) -> L02
       CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              L01,(SP)+ [TRUE] L0008
       JE              L01,L02 [FALSE] L0012
L0008: JE              L00,#25 [FALSE] L0009
       CALL_VN         R0121 (#19,#0b,G32)
       JUMP            L0011
L0009: JE              L00,#26 [FALSE] L0010
       CALL_VN         R0121 (#19,#0c,G32)
       JUMP            L0011
L0010: CALL_VN         R0121 (#19,#0d,L00)
L0011: JUMP            L0013
L0012: CALL_VN         R0121 (#19,#0e,G32)
L0013: JUMP            L0017
L0014: JE              L00,#25 [FALSE] L0015
       CALL_VS         R0924 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#19,#0f,(SP)+)
       JUMP            L0017
L0015: JE              L00,#26 [FALSE] L0016
       CALL_VS         R0924 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#19,#10,(SP)+)
       JUMP            L0017
L0016: CALL_VS         R0924 (#4e27,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN2        R0121 (#19,#11,(SP)+,L00)
L0017: JUMP            L0020
L0018: CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              G23,(SP)+ [FALSE] L0019
       CALL_VN         R0121 (#19,#12,G32)
       JUMP            L0020
L0019: CALL_VN         R0121 (#19,#13,G32)
L0020: CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S923)
       CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VS         R0051 ((SP)+,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#19,#14,(SP)+)
       JUMP            L0022
L0021: CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#19,#15,(SP)+)
L0022: CALL_VS         R0924 (#4e27,#04) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       CALL_2S         R1115 (G22) -> -(SP)
       CALL_VS         R0924 (#4e27,#04) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0023
       CALL_VS         R0924 (#4e27,#04) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#19,#16,(SP)+)
       JUMP            L0026
L0023: CALL_2S         R1115 (G22) -> -(SP)
       CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0024
       CALL_VS         R0924 (#4e27,#04) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#19,#17,(SP)+)
       JUMP            L0026
L0024: CALL_VS         R0924 (#4e27,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              G23,(SP)+ [FALSE] L0025
       CALL_VS         R0924 (#4e27,#04) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#19,#18,(SP)+)
       JUMP            L0026
L0025: CALL_VS         R0924 (#4e27,#04) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#19,#19,(SP)+)
L0026: CALL_2S         R1115 (G22) -> -(SP)
       CALL_VS         R0924 (#4e27,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0027
       CALL_2S         R1115 (G22) -> -(SP)
       CALL_VS         R0924 (#4e27,#04) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0027
       CALL_VN         R0121 (#19,#1a,G32)
       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S931)
       NEW_LINE        
       CALL_VN2        R0873 (#00,G22,#23,#00,#00)
       RFALSE          
L0027: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S931)
       NEW_LINE        
L0028: JUMP            L0030
L0029: JG              G75,#01 [FALSE] L0030
       CALL_VN         R1061 (#43f6,#93,#01)
L0030: RFALSE          

Routine R0475, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#44b2,#95)
L0001: CALL_VS         R0051 (G32,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0875 (#19,G32,#00) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#44b2,#95,#01)
L0004: RFALSE          

Routine R0476, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#44bf,#96)
L0001: CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0875 (#19,G32,#00) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#44bf,#96,#01)
L0004: RFALSE          

Routine R0477, 1 local

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#44cc,#97)
L0001: CALL_VS         R1112 (G28,G32) -> L00
       JE              L00,G32 [FALSE] L0002
       CALL_VS         R0120 (#14,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#44cc,#97,#01)
L0004: RFALSE          

Routine R0478, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#44da,#98)
L0001: CALL_2S         R0723 (G32) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#14,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#44da,#98,#01)
L0004: RFALSE          

Routine R0479, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#44e7,#99)
L0001: CALL_VS         R0051 (G32,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0727 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#14,#03,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#44e7,#99,#01)
L0004: RFALSE          

Routine R0480, 1 local

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#44f7,#9a)
L0001: CALL_VS         R1112 (G28,G32) -> L00
       JE              L00,G28 [FALSE] L0002
       CALL_VS         R0120 (#14,#04,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#44f7,#9a,#01)
L0004: RFALSE          

Routine R0481, 2 locals

       JZ              G27 [FALSE] L0012
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4505,#9b)
L0001: CALL_2S         R1107 (G32) -> -(SP)
       CALL_2S         R1107 (G28) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0002
       RFALSE          
L0002: CALL_VS         R1112 (G28,G32) -> L00
L0003: CALL_2S         R1107 (G28) -> -(SP)
       JE              (SP)+,L00 [TRUE] L0005
       CALL_2S         R1107 (G28) -> L01
       CALL_VN         R0120 (#14,#06,L01)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#16,#00,#00)
       PULL            G34
       CALL_2S         R1107 (G28) -> -(SP)
       JE              (SP)+,L01 [FALSE] L0004
       RTRUE           
L0004: JUMP            L0003
L0005: CALL_2S         R1107 (G28) -> -(SP)
       JE              (SP)+,G32 [FALSE] L0006
       RTRUE           
L0006: CALL_2S         R1107 (G32) -> -(SP)
       CALL_2S         R1107 (G28) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0007
       RFALSE          
L0007: CALL_2S         R1107 (G32) -> L01
       GET_PROP        G32,#08 -> Gef
       PUSH            Gef
       JE              L01,(SP)+ [FALSE] L0008
       CALL_2S         R1107 (L01) -> L01
L0008: CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       CALL_2S         R1107 (L01) -> -(SP)
       JE              (SP)+,L00 [FALSE] L0010
       CALL_VN         R0120 (#14,#07,L01)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#14,L01,#00)
       PULL            G34
       CALL_2S         R1107 (G28) -> -(SP)
       JE              (SP)+,L01 [TRUE] L0009
       RTRUE           
L0009: CALL_VS         R0875 (#14,G32,#00) -> -(SP)
       RET_POPPED      
       RFALSE          
L0010: CALL_2S         R1107 (L01) -> L01
       JUMP            L0008
L0011: JUMP            L0013
L0012: JG              G75,#01 [FALSE] L0013
       CALL_VN         R1061 (#4505,#9b,#01)
L0013: RFALSE          

Routine R0482, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4542,#9c)
L0001: INSERT_OBJ      G28,G32
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4542,#9c,#01)
L0003: RFALSE          

Routine R0483, 0 locals

       JZ              G27 [FALSE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#454b,#9d)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#14,#05,G32)
       JUMP            L0004
L0002: CALL_VS         R0051 (G32,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R0121 (#14,#08,G32)
       JUMP            L0004
L0003: CALL_VN         R0121 (#14,#09,G32)
L0004: RFALSE          
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#454b,#9d,#01)
L0006: RFALSE          

Routine R0484, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#455d,#9e)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_2N         R1173 (G32)
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#455d,#9e,#01)
L0004: RFALSE          

Routine R0485, 1 local

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4568,#a0)
L0001: CALL_2S         R1111 (G28) -> L00
       CALL_VS         R0924 ("airlocks",#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0002
       CALL_VS2        R1241 (#28,L00,S305,#0889) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0875 (#19,#28,#00) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4568,#a0,#01)
L0004: RFALSE          

Routine R0486, 1 local

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#457d,#a1)
L0001: CALL_2S         R1111 (G28) -> L00
       CALL_VS         R0924 ("airlocks",#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0002
       CALL_VS         R0120 (#16,#01,G28) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#457d,#a1,#01)
L0004: RFALSE          

Routine R0487, 1 local

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#458e,#a2)
L0001: CALL_2S         R1115 (G28) -> -(SP)
       CALL_VS         R0051 ((SP)+,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R1115 (G28) -> L00
       JZ              #01 [TRUE] L0002
       CALL_2S         R1115 (G28) -> -(SP)
       CALL_2S         R0727 ((SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#16,#02,L00) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#458e,#a2,#01)
L0004: RFALSE          

Routine R0488, 1 local

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#45a3,#a3)
L0001: CALL_2S         R1117 (G28) -> -(SP)
       CALL_VS         R0051 ((SP)+,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R1117 (G28) -> L00
       JZ              #01 [TRUE] L0002
       CALL_VS         R0875 (#17,L00,#00) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#45a3,#a3,#01)
L0004: RFALSE          

Routine R0489, 1 local

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#45b4,#a4)
L0001: CALL_VS         R0924 ("airlocks",#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2S         R1110 ((SP)+) -> L00
       INSERT_OBJ      G28,L00
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#45b4,#a4,#01)
L0003: RFALSE          

Routine R0490, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#45c2,#a5)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VS         R0924 ("airlocks",#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0120 (#16,#03,(SP)+)
       JUMP            L0003
L0002: CALL_VS         R0924 ("airlocks",#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_VN         R0121 (#16,#06,(SP)+)
L0003: RFALSE          
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#45c2,#a5,#01)
L0005: RFALSE          

Routine R0491, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#45d7,#a6)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_1N         R0878
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#45d7,#a6,#01)
L0004: RFALSE          

Routine R0492, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#45e1,#a7)
L0001: CALL_2S         R1117 (G28) -> -(SP)
       JE              G32,(SP)+ [FALSE] L0002
       RFALSE          
L0002: CALL_2S         R1118 (G28) -> -(SP)
       JE              G32,(SP)+ [FALSE] L0003
       RFALSE          
L0003: CALL_VS         R0120 (#17,#01,G32) -> -(SP)
       RET_POPPED      
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#45e1,#a7,#01)
L0005: RFALSE          

Routine R0493, 1 local

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#45f1,#a8)
L0001: CALL_2S         R1110 (G32) -> L00
       INSERT_OBJ      G28,L00
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#45f1,#a8,#01)
L0003: RFALSE          

Routine R0494, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#45fc,#a9)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#16,#03,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#16,#05,G32)
L0003: RFALSE          
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#45fc,#a9,#01)
L0005: RFALSE          

Routine R0495, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4609,#aa)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_1N         R0878
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4609,#aa,#01)
L0004: RFALSE          

Routine R0496, 2 locals

       JE              G28,G22 [FALSE] L0008
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4613,#ac)
L0001: STORE           G05,#01
       CALL_1N         R0947
       SET_TEXT_STYLE  BOLDFACE
       CALL_VS         R0924 (#4e2b,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_2N         R0905 (#08)
       CALL_2S         R0906 (#08) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VN         R0120 (#1001,#47)
L0002: CALL_2N         R0907 (#08)
       JUMP            L0005
L0003: CALL_VS         R0924 (#4e2b,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,G23 [FALSE] L0004
       STORE           G05,#01
       CALL_1N         R0947
       CALL_VS         R0924 (#4e2b,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2N         R0977 ((SP)+)
       JUMP            L0005
L0004: STORE           G05,#01
       CALL_1N         R0947
       CALL_VS         R0924 (#4e2b,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       CALL_2N         R0976 ((SP)+)
L0005: STORE           G05,#01
       CALL_1N         R0947
       SET_TEXT_STYLE  ROMAN
       CALL_2S         R0079 (G28) -> L00
       STORE           L01,#02
L0006: CALL_VS         R0924 (#4e2b,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JG              L01,(SP)+ [TRUE] L0007
       CALL_VN         R0120 (#23,#08,L00)
       CALL_2S         R0079 (L00) -> L00
       INC             L01
       JUMP            L0006
L0007: STORE           G05,#01
       CALL_1N         R0947
       NEW_LINE        
       STORE           G05,#01
       CALL_1N         R0947
       CALL_1N         R0951
       JUMP            L0009
L0008: JG              G75,#01 [FALSE] L0009
       CALL_VN         R1061 (#4613,#ac,#01)
L0009: RFALSE          

Routine R0497, 0 locals

       JE              G28,G22 [FALSE] L0015
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#464c,#ad)
L0001: CALL_VS         R0924 (#4e2b,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       JE              G5f,#03 [FALSE] L0002
       RFALSE          
L0002: JE              G5f,#01 [FALSE] L0007
       CALL_VS         R0924 (#4e2b,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JZ              #01 [TRUE] L0003
       PUSH            #01
       JUMP            L0004
L0003: PUSH            #00
L0004: JE              (SP)+,#01 [FALSE] L0007
       LOADW           #2e52,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JZ              #01 [TRUE] L0005
       PUSH            #01
       JUMP            L0006
L0005: PUSH            #00
L0006: JE              (SP)+,#01 [FALSE] L0007
       RFALSE          
L0007: CALL_2N         R0905 (#09)
       CALL_2S         R0906 (#09) -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       CALL_VN         R0120 (#1001,#11)
L0008: CALL_2N         R0907 (#09)
       JUMP            L0014
L0009: CALL_VS         R0924 (#4e2b,#03) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,G23 [FALSE] L0014
       JE              G5f,#03 [FALSE] L0010
       RFALSE          
L0010: JE              G5f,#01 [FALSE] L0013
       CALL_VS         R0924 (#4e2b,#01) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       JZ              #01 [TRUE] L0011
       PUSH            #01
       JUMP            L0012
L0011: PUSH            #00
L0012: JE              (SP)+,#01 [FALSE] L0013
       CALL_2S         R0705 (G23) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       RFALSE          
L0013: CALL_VN         R0967 (G02,#0a)
L0014: JUMP            L0016
L0015: JG              G75,#01 [FALSE] L0016
       CALL_VN         R1061 (#464c,#ad,#01)
L0016: RFALSE          

Routine R0498, 3 locals

       JE              G28,G22 [FALSE] L0008
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4685,#ae)
L0001: CALL_VS         R0924 (#4e2b,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JG              (SP)+,#00 [FALSE] L0007
       STORE           L00,G28
       CALL_VS         R0924 (#4e2b,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> L01
L0002: JG              L01,#00 [FALSE] L0003
       CALL_2N         R0778 (L00)
       CALL_2S         R0079 (L00) -> L00
       SUB             L01,#01 -> L01
       JUMP            L0002
L0003: CALL_VS         R0924 (#4e2b,#02) -> -(SP)
       LOADW           #3aeb,(SP)+ -> L02
L0004: JG              L02,#00 [FALSE] L0007
       STORE           L00,G28
       STORE           L01,#00
L0005: JL              L01,L02 [FALSE] L0006
       CALL_2S         R0079 (L00) -> L00
       ADD             L01,#01 -> L01
       JUMP            L0005
L0006: CALL_2N         R1173 (L00)
       SUB             L02,#01 -> L02
       JUMP            L0004
L0007: RFALSE          
L0008: JG              G75,#01 [FALSE] L0009
       CALL_VN         R1061 (#4685,#ae,#01)
L0009: RFALSE          

Routine R0499, 0 locals

       JE              G28,G22 [FALSE] L0004
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#46a9,#af)
L0001: JE              G02,#07 [FALSE] L0002
       STOREW          #2e52,#00,#01
       JUMP            L0003
L0002: CALL_VS         R0051 (G23,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2N         R0764 (G23)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#46a9,#af,#01)
L0005: RFALSE          

Routine R0500, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#46b8,#b0)
L0001: JE              G28,G22 [TRUE] L0002
       CALL_VN         R0121 (#23,#09,G32)
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#46b8,#b0,#01)
L0004: RFALSE          

Routine R0501, 0 locals

       JE              G28,G22 [FALSE] L0003
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#46c3,#b1)
L0001: CALL_VS         R1029 (G32,#00,#0a) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1034 (#09,G32,#0a) -> -(SP)
       JE              (SP)+,S008 [TRUE] L0002
       STORE           G05,#01
       CALL_1N         R0947
       PUSH            Geb
       STORE           Geb,G32
       PUSH            Geb
       CALL_VS         R1034 (#09,(SP)+,#0a) -> -(SP)
       CALL_2N         R0965 ((SP)+)
       PULL            Geb
       CALL_1N         R0947
       NEW_LINE        
       CALL_VS         R0924 (#4e2c,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#46c3,#b1,#01)
L0004: RFALSE          

Routine R0502, 0 locals

       JE              G28,G22 [FALSE] L0003
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#46de,#b2)
L0001: CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0120 (#15,#05,G32)
       CALL_VS         R0924 (#4e2c,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#46de,#b2,#01)
L0004: RFALSE          

Routine R0503, 0 locals

       JE              G28,G22 [FALSE] L0008
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#46ee,#b3)
L0001: CALL_VS         R0051 (G32,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_2S         R0726 (G32) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_2S         R0725 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
L0002: CALL_1S         R1231 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_1S         R1232 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R0120 (#34,#07,G32)
       CALL_VS         R0924 (#4e2c,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
       JUMP            L0007
L0003: CALL_VS         R0924 (#4e2c,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JZ              #01 [TRUE] L0004
       PUSH            #01
       JUMP            L0005
L0004: PUSH            #00
L0005: JZ              (SP)+ [FALSE] L0007
       CALL_2S         R1115 (G22) -> -(SP)
       JE              G32,(SP)+ [FALSE] L0006
       RFALSE          
L0006: CALL_VN         R0120 (#34,#06,G32)
       CALL_VS         R0924 (#4e2c,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
L0007: JUMP            L0009
L0008: JG              G75,#01 [FALSE] L0009
       CALL_VN         R1061 (#46ee,#b3,#01)
L0009: RFALSE          

Routine R0504, 0 locals

       JE              G28,G22 [FALSE] L0003
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4717,#b4)
L0001: CALL_VS         R0051 (G32,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_1S         R1233 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_1S         R1234 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0120 (#23,#04,G32)
       CALL_VS         R0924 (#4e2c,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4717,#b4,#01)
L0004: RFALSE          

Routine R0505, 0 locals

       JE              G28,G22 [FALSE] L0003
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#472b,#b5)
L0001: CALL_VS         R0051 (G32,#1a) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0120 (#15,#03,G32)
       CALL_VS         R0924 (#4e2c,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#472b,#b5,#01)
L0004: RFALSE          

Routine R0506, 0 locals

       JE              G28,G22 [FALSE] L0005
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#473b,#b6)
L0001: CALL_VS         R0924 (#4e2c,#00) -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       JZ              #01 [TRUE] L0002
       PUSH            #01
       JUMP            L0003
L0002: PUSH            #00
L0003: JZ              (SP)+ [FALSE] L0004
       CALL_VN         R0120 (#15,#02,G32)
L0004: JUMP            L0006
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#473b,#b6,#01)
L0006: RFALSE          

Routine R0507, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#474d,#b7)
L0001: JE              G28,G22 [TRUE] L0002
       CALL_VN         R0121 (#15,#04,G32)
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#474d,#b7,#01)
L0004: RFALSE          

Routine R0508, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4758,#b8)
L0001: CALL_VS         R0120 (#24,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4758,#b8,#01)
L0003: RFALSE          

Routine R0509, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4762,#b9)
L0001: JE              G28,G22 [TRUE] L0002
       CALL_VN         R0121 (#24,#03,G32)
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4762,#b9,#01)
L0004: RFALSE          

Routine R0510, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#476d,#ba)
L0001: CALL_VS         R0051 (G32,#16) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0051 (G32,#10) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#34,#04,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#476d,#ba,#01)
L0004: RFALSE          

Routine R0511, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#477d,#bb)
L0001: CALL_VS         R0051 (G32,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0727 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0724 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#34,#05,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#477d,#bb,#01)
L0004: RFALSE          

Routine R0512, 0 locals

       JE              G28,G22 [FALSE] L0004
       CALL_VS         R0051 (G32,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#478f,#bc)
L0001: CALL_1S         R1235 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0120 (#34,#07,G32)
       JUMP            L0003
L0002: CALL_VN         R0120 (#34,#06,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#478f,#bc,#01)
L0005: RFALSE          

Routine R0513, 0 locals

       JE              G28,G22 [FALSE] L0004
       CALL_VS         R0051 (G32,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#47a0,#bd)
L0001: CALL_1S         R1236 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0120 (#34,#03,G32)
       JUMP            L0003
L0002: CALL_VN         R0120 (#34,#02,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#47a0,#bd,#01)
L0005: RFALSE          

Routine R0514, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#47b1,#be)
L0001: JE              G28,G22 [TRUE] L0002
       CALL_VN         R0121 (#34,#08,G32)
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#47b1,#be,#01)
L0004: RFALSE          

Routine R0515, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#47bc,#bf)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#0e,#01,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#0e,#02,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#47bc,#bf,#01)
L0005: RFALSE          

Routine R0516, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#47cc,#c0)
L0001: CALL_VS         R1029 (G32,#01,#09) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0730 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RFALSE          
L0002: CALL_VS         R0120 (#22,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#47cc,#c0,#01)
L0004: RFALSE          

Routine R0517, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#47de,#c1)
L0001: CALL_2S         R0731 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#22,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#47de,#c1,#01)
L0004: RFALSE          

Routine R0518, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#47ee,#c2)
L0001: CALL_2S         R0726 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#22,#03,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#47ee,#c2,#01)
L0004: RFALSE          

Routine R0519, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#47fe,#c3)
L0001: CALL_2S         R1107 (G33) -> -(SP)
       JE              (SP)+,G28 [FALSE] L0002
       CALL_VS         R1029 (G32,#00,#17) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1034 (#09,G32,#17) -> -(SP)
       JE              (SP)+,G33 [TRUE] L0003
L0002: CALL_VS         R0120 (#22,#04,G33) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#47fe,#c3,#01)
L0005: RFALSE          

Routine R0520, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4814,#c4)
L0001: CALL_2N         R0790 (G32)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4814,#c4,#01)
L0003: RFALSE          

Routine R0521, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4820,#c5)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#22,#05,G32)
       JUMP            L0003
L0002: CALL_2S         R0657 (G28) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R0121 (#22,#06,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4820,#c5,#01)
L0005: RFALSE          

Routine R0522, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4833,#c6)
L0001: CALL_VS         R1029 (G32,#01,#09) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0730 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RFALSE          
L0002: CALL_VS         R0120 (#47,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4833,#c6,#01)
L0004: RFALSE          

Routine R0523, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4845,#c7)
L0001: CALL_2S         R0731 (G32) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#47,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4845,#c7,#01)
L0004: RFALSE          

Routine R0524, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4855,#c8)
L0001: CALL_2S         R1107 (G33) -> -(SP)
       JE              (SP)+,G28 [FALSE] L0002
       CALL_VS         R1029 (G32,#00,#17) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1034 (#09,G32,#17) -> -(SP)
       JE              (SP)+,G33 [TRUE] L0003
L0002: CALL_VS         R0120 (#47,#03,G33) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4855,#c8,#01)
L0005: RFALSE          

Routine R0525, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#486b,#c9)
L0001: CALL_2N         R0849 (G32)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#486b,#c9,#01)
L0003: RFALSE          

Routine R0526, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4877,#ca)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#47,#04,G32)
       JUMP            L0003
L0002: CALL_2S         R0657 (G28) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R0121 (#47,#05,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4877,#ca,#01)
L0005: RFALSE          

Routine R0527, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#488a,#cb)
L0001: CALL_VS         R1029 (G32,#01,#0c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RFALSE          
L0002: CALL_VS         R0120 (#3f,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#488a,#cb,#01)
L0004: RFALSE          

Routine R0528, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4897,#cc)
L0001: CALL_2S         R0736 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#3f,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4897,#cc,#01)
L0004: RFALSE          

Routine R0529, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#48a4,#cd)
L0001: CALL_2N         R0795 (G32)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#48a4,#cd,#01)
L0003: RFALSE          

Routine R0530, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#48ae,#ce)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#3f,#03,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#3f,#04,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#48ae,#ce,#01)
L0005: RFALSE          

Routine R0531, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#48bc,#cf)
L0001: CALL_VS         R1029 (G32,#01,#0c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RFALSE          
L0002: CALL_VS         R0120 (#3e,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#48bc,#cf,#01)
L0004: RFALSE          

Routine R0532, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#48c9,#d0)
L0001: CALL_2S         R0737 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#3e,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#48c9,#d0,#01)
L0004: RFALSE          

Routine R0533, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#48d6,#d1)
L0001: CALL_2N         R0796 (G32)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#48d6,#d1,#01)
L0003: RFALSE          

Routine R0534, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#48e0,#d2)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#3e,#03,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#3e,#04,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#48e0,#d2,#01)
L0005: RFALSE          

Routine R0535, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#48ee,#d3)
L0001: CALL_VS         R1029 (G32,#01,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0728 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RFALSE          
L0002: CALL_VS         R0120 (#2a,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#48ee,#d3,#01)
L0004: RFALSE          

Routine R0536, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#48fd,#d4)
L0001: CALL_VS         R1029 (G32,#01,#09) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0731 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2a,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#48fd,#d4,#01)
L0004: RFALSE          

Routine R0537, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#490d,#d5)
L0001: CALL_2S         R0726 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2a,#03,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#490d,#d5,#01)
L0004: RFALSE          

Routine R0538, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#491a,#d6)
L0001: CALL_2N         R0785 (G32)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#491a,#d6,#01)
L0003: RFALSE          

Routine R0539, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4924,#d7)
L0001: JE              G28,G22 [FALSE] L0003
       CALL_VS         R0051 (G32,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0724 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       GET_CHILD       G32 -> -(SP) [FALSE] L0002
L0002: JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1113 (G32,G28) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_VS         R0120 (#2a,#04,G32) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4924,#d7,#01)
L0005: RFALSE          

Routine R0540, 0 locals

       JZ              G27 [FALSE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4939,#d8)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#2a,#05,G32)
       JUMP            L0004
L0002: CALL_VS         R1144 (G22,G28) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R0121 (#2a,#06,G32)
       JUMP            L0004
L0003: CALL_VN         R0121 (#2a,#07,G32)
L0004: JUMP            L0006
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4939,#d8,#01)
L0006: RFALSE          

Routine R0541, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#494c,#d9)
L0001: CALL_VS         R1029 (G32,#01,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0728 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RFALSE          
L0002: CALL_VS         R0120 (#0d,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#494c,#d9,#01)
L0004: RFALSE          

Routine R0542, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#495b,#da)
L0001: CALL_2S         R0727 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#0d,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#495b,#da,#01)
L0004: RFALSE          

Routine R0543, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4968,#db)
L0001: CALL_2N         R0786 (G32)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4968,#db,#01)
L0003: RFALSE          

Routine R0544, 0 locals

       JZ              G27 [FALSE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4972,#dc)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#0d,#03,G32)
       JUMP            L0004
L0002: CALL_VS         R1144 (G22,G28) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R0121 (#0d,#04,G32)
       JUMP            L0004
L0003: CALL_VN         R0121 (#0d,#05,G32)
L0004: JUMP            L0006
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4972,#dc,#01)
L0006: RFALSE          

Routine R0545, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4985,#dd)
L0001: CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0714 (G32) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
L0002: CALL_VS         R0120 (#4d,#01,G32) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4985,#dd,#01)
L0005: RFALSE          

Routine R0546, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4995,#de)
L0001: CALL_2S         R1107 (G32) -> -(SP)
       JE              (SP)+,G28 [TRUE] L0002
       CALL_VS         R0120 (#4d,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4995,#de,#01)
L0004: RFALSE          

Routine R0547, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#49a2,#df)
L0001: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       CALL_VS         R0120 (#4d,#03,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#49a2,#df,#01)
L0004: RFALSE          

Routine R0548, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#49af,#e0)
L0001: CALL_VN         R1132 (G32,G28)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#49af,#e0,#01)
L0003: RFALSE          

Routine R0549, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#49b9,#e1)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#4d,#04,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#4d,#05,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#49b9,#e1,#01)
L0005: RFALSE          

Routine R0550, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#49c7,#e2)
L0001: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [TRUE] L0002
       CALL_VS         R0120 (#10,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#49c7,#e2,#01)
L0004: RFALSE          

Routine R0551, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#49d4,#e3)
L0001: CALL_VN         R1123 (G32,G28)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#49d4,#e3,#01)
L0003: RFALSE          

Routine R0552, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#49de,#e4)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#10,#02,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#10,#03,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#49de,#e4,#01)
L0005: RFALSE          

Routine R0553, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#49ec,#e5)
L0001: CALL_2S         R1107 (G32) -> -(SP)
       JE              G28,(SP)+ [TRUE] L0002
       CALL_VS         R0120 (#18,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#49ec,#e5,#01)
L0004: RFALSE          

Routine R0554, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#49fc,#e6)
L0001: JE              G28,G33 [FALSE] L0002
       CALL_VS         R0120 (#18,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#49fc,#e6,#01)
L0004: RFALSE          

Routine R0555, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a0a,#e7)
L0001: CALL_VS         R0051 (G33,#11) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#18,#04,G33) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4a0a,#e7,#01)
L0004: RFALSE          

Routine R0556, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a1a,#e8)
L0001: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       CALL_VN         R0120 (#12,#03,G32)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#10,G32,#00)
       PULL            G34
       CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4a1a,#e8,#01)
L0004: RFALSE          

Routine R0557, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a31,#e9)
L0001: CALL_VS         R0120 (#18,#03,G33) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4a31,#e9,#01)
L0003: RFALSE          

Routine R0558, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a3e,#ea)
L0001: CALL_VN2        R1123 (G32,G33,#00,#00)
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4a3e,#ea,#01)
L0003: RFALSE          

Routine R0559, 0 locals

       JZ              G27 [FALSE] L0005
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a4b,#eb)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#18,#05,G32)
       JUMP            L0004
L0002: JE              G33,G22 [FALSE] L0003
       CALL_VN         R0121 (#18,#06,G32)
       JUMP            L0004
L0003: CALL_VN         R0121 (#18,#07,G32)
L0004: JUMP            L0006
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4a4b,#eb,#01)
L0006: RFALSE          

Routine R0560, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a5f,#ec)
L0001: CALL_2S         R1107 (G32) -> -(SP)
       JE              G28,(SP)+ [TRUE] L0002
       CALL_VS         R0120 (#36,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4a5f,#ec,#01)
L0004: RFALSE          

Routine R0561, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a6f,#ed)
L0001: JE              G28,G33 [FALSE] L0002
       CALL_VS         R0875 (#15,G32,#00) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4a6f,#ed,#01)
L0004: RFALSE          

Routine R0562, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a7d,#ee)
L0001: CALL_VS         R0120 (#36,#02,G33) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4a7d,#ee,#01)
L0003: RFALSE          

Routine R0563, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a8a,#ef)
L0001: CALL_VS         R0120 (#4a,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4a8a,#ef,#01)
L0003: RFALSE          

Routine R0564, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4a94,#f0)
L0001: CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       CALL_VN         R0120 (#12,#03,G32)
       PUSH            G34
       STORE           G34,#01
       CALL_VN2        R0873 (#00,G28,#10,G32,#00)
       PULL            G34
       CALL_2S         R1119 (G32) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4a94,#f0,#01)
L0004: RFALSE          

Routine R0565, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4aab,#f1)
L0001: CALL_VS         R0051 (G33,#11) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#44,#01,G33) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4aab,#f1,#01)
L0004: RFALSE          

Routine R0566, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4abb,#f2)
L0001: CALL_VS         R0120 (#44,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4abb,#f2,#01)
L0003: RFALSE          

Routine R0567, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4ac8,#f3)
L0001: CALL_VS         R0120 (#09,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4ac8,#f3,#01)
L0003: RFALSE          

Routine R0568, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4ad2,#f4)
L0001: JE              G32,G28 [FALSE] L0002
       CALL_VS         R0120 (#46,#03,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4ad2,#f4,#01)
L0004: RFALSE          

Routine R0569, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4ade,#f5)
L0001: CALL_VS         R0120 (#1d,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4ade,#f5,#01)
L0003: RFALSE          

Routine R0570, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4ae8,#f6)
L0001: CALL_VS         R0120 (#07,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4ae8,#f6,#01)
L0003: RFALSE          

Routine R0571, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4af5,#f7)
L0001: JE              G28,G32 [FALSE] L0002
       CALL_VS         R0120 (#42,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4af5,#f7,#01)
L0004: RFALSE          

Routine R0572, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b03,#f8)
L0001: CALL_VS         R0120 (#42,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4b03,#f8,#01)
L0003: RFALSE          

Routine R0573, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b10,#f9)
L0001: CALL_VS         R0120 (#08,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4b10,#f9,#01)
L0003: RFALSE          

Routine R0574, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b1d,#fa)
L0001: JE              G28,G32 [FALSE] L0002
       JE              G28,G22 [FALSE] L0002
       CALL_VN2        R0873 (#00,G22,#1b,#00,#00)
       RTRUE           
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4b1d,#fa,#01)
L0004: RFALSE          

Routine R0575, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b2d,#fb)
L0001: CALL_VN2        R0873 (#01,G32,#18,G33,G28)
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4b2d,#fb,#01)
L0003: RFALSE          

Routine R0576, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b3a,#fc)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VS         R0120 (#48,#01,G28) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0121 (#48,#02,G32)
       JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4b3a,#fc,#01)
L0004: RFALSE          

Routine R0577, 0 locals

       JZ              G27 [FALSE] L0005
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b48,#fd)
L0001: JE              G32,G28 [FALSE] L0004
       JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#46,#03,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#46,#04,G32)
L0003: RTRUE           
L0004: RFALSE          
L0005: JG              G75,#01 [FALSE] L0006
       CALL_VN         R1061 (#4b48,#fd,#01)
L0006: RFALSE          

Routine R0578, 0 locals

       JZ              G27 [FALSE] L0006
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b57,#fe)
L0001: CALL_VS         R0051 (G32,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#46,#01,G32)
       JUMP            L0004
L0002: JE              G32,G22 [FALSE] L0003
       CALL_VN         R0121 (#46,#05,G32)
       JUMP            L0004
L0003: CALL_VN         R0121 (#46,#06,G32)
L0004: RTRUE           
L0005: RFALSE          
L0006: JG              G75,#01 [FALSE] L0007
       CALL_VN         R1061 (#4b57,#fe,#01)
L0007: RFALSE          

Routine R0579, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b6b,#ff)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#46,#02,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#46,#06,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4b6b,#ff,#01)
L0005: RFALSE          

Routine R0580, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b79,#0100)
L0001: CALL_2S         R1107 (G32) -> -(SP)
       JE              G28,(SP)+ [TRUE] L0002
       CALL_VS         R0120 (#4b,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4b79,#0100,#01)
L0004: RFALSE          

Routine R0581, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b87,#0101)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#4b,#02,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#4b,#03,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4b87,#0101,#01)
L0005: RFALSE          

Routine R0582, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4b95,#0102)
L0001: CALL_2S         R0711 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2c,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4b95,#0102,#01)
L0004: RFALSE          

Routine R0583, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4ba3,#0103)
L0001: CALL_2S         R0713 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2c,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4ba3,#0103,#01)
L0004: RFALSE          

Routine R0584, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4bb1,#0104)
L0001: CALL_VS         R0051 (G32,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2c,#04,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4bb1,#0104,#01)
L0004: RFALSE          

Routine R0585, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4bbf,#0105)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#2c,#03,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#2c,#05,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4bbf,#0105,#01)
L0005: RFALSE          

Routine R0586, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4bcd,#0106)
L0001: CALL_2S         R0711 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2d,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4bcd,#0106,#01)
L0004: RFALSE          

Routine R0587, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4bdd,#0107)
L0001: CALL_2S         R0713 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2d,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4bdd,#0107,#01)
L0004: RFALSE          

Routine R0588, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4bed,#0108)
L0001: CALL_VS         R0051 (G32,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2d,#04,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4bed,#0108,#01)
L0004: RFALSE          

Routine R0589, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4bfd,#0109)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#2d,#03,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#2d,#06,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4bfd,#0109,#01)
L0005: RFALSE          

Routine R0590, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c0e,#010a)
L0001: CALL_2S         R0711 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2e,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4c0e,#010a,#01)
L0004: RFALSE          

Routine R0591, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c1c,#010b)
L0001: CALL_2S         R0713 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2e,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4c1c,#010b,#01)
L0004: RFALSE          

Routine R0592, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c2a,#010c)
L0001: CALL_VS         R0051 (G32,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#2e,#04,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4c2a,#010c,#01)
L0004: RFALSE          

Routine R0593, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c38,#010d)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#2e,#03,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#2e,#07,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4c38,#010d,#01)
L0005: RFALSE          

Routine R0594, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c46,#010e)
L0001: CALL_2S         R0715 (G32) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#2f,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4c46,#010e,#01)
L0004: RFALSE          

Routine R0595, 0 locals

       JZ              G27 [FALSE] L0003
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c56,#010f)
L0001: CALL_VS         R0051 (G33,#1c) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0120 (#2f,#02,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4c56,#010f,#01)
L0004: RFALSE          

Routine R0596, 0 locals

       JZ              G27 [FALSE] L0004
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c66,#0110)
L0001: JE              G33,#25 [TRUE] L0002
       JE              G33,#26 [FALSE] L0003
L0002: CALL_VS         R0120 (#2f,#03,G32) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4c66,#0110,#01)
L0005: RFALSE          

Routine R0597, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c76,#0111)
L0001: CALL_1N         R0876
       RTRUE           
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4c76,#0111,#01)
L0003: RFALSE          

Routine R0598, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c82,#0112)
L0001: CALL_VS         R0120 (#2f,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4c82,#0112,#01)
L0003: RFALSE          

Routine R0599, 0 locals

       JZ              G27 [FALSE] L0003
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c8f,#0113)
L0001: CALL_VS         R0051 (G32,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0120 (#3b,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: JG              G75,#01 [FALSE] L0004
       CALL_VN         R1061 (#4c8f,#0113,#01)
L0004: RFALSE          

Routine R0600, 0 locals

       JZ              G27 [FALSE] L0004
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4c9d,#0114)
L0001: JE              G28,G22 [FALSE] L0002
       CALL_VN         R0120 (#3b,#02,G32)
       JUMP            L0003
L0002: CALL_VN         R0121 (#3b,#03,G32)
L0003: JUMP            L0005
L0004: JG              G75,#01 [FALSE] L0005
       CALL_VN         R1061 (#4c9d,#0114,#01)
L0005: RFALSE          

Routine R0601, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4cab,#0115)
L0001: CALL_VS         R0120 (#27,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4cab,#0115,#01)
L0003: RFALSE          

Routine R0602, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4cb6,#0116)
L0001: CALL_VS         R0120 (#26,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4cb6,#0116,#01)
L0003: RFALSE          

Routine R0603, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4cc1,#0117)
L0001: CALL_VS         R0120 (#0a,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4cc1,#0117,#01)
L0003: RFALSE          

Routine R0604, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4ccc,#0118)
L0001: CALL_VS         R0120 (#49,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4ccc,#0118,#01)
L0003: RFALSE          

Routine R0605, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4cd7,#0119)
L0001: CALL_VS         R0120 (#43,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4cd7,#0119,#01)
L0003: RFALSE          

Routine R0606, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4ce2,#011a)
L0001: CALL_VS         R0120 (#39,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4ce2,#011a,#01)
L0003: RFALSE          

Routine R0607, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4ced,#011b)
L0001: CALL_VS         R0120 (#1e,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4ced,#011b,#01)
L0003: RFALSE          

Routine R0608, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4cf8,#011c)
L0001: CALL_VS         R0120 (#41,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4cf8,#011c,#01)
L0003: RFALSE          

Routine R0609, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d03,#011d)
L0001: CALL_VS         R0120 (#0f,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d03,#011d,#01)
L0003: RFALSE          

Routine R0610, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d0e,#011e)
L0001: CALL_VS         R0120 (#1c,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d0e,#011e,#01)
L0003: RFALSE          

Routine R0611, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d19,#011f)
L0001: CALL_VS         R0120 (#45,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d19,#011f,#01)
L0003: RFALSE          

Routine R0612, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d26,#0120)
L0001: CALL_VS         R0120 (#11,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d26,#0120,#01)
L0003: RFALSE          

Routine R0613, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d31,#0121)
L0001: CALL_VS         R0120 (#3a,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d31,#0121,#01)
L0003: RFALSE          

Routine R0614, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d3c,#0122)
L0001: CALL_VS         R0120 (#3c,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d3c,#0122,#01)
L0003: RFALSE          

Routine R0615, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d47,#0123)
L0001: CALL_VS         R0120 (#25,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d47,#0123,#01)
L0003: RFALSE          

Routine R0616, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d52,#0124)
L0001: CALL_VS         R0120 (#3d,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d52,#0124,#01)
L0003: RFALSE          

Routine R0617, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d5d,#0125)
L0001: CALL_VS         R0120 (#32,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d5d,#0125,#01)
L0003: RFALSE          

Routine R0618, 0 locals

       JZ              G27 [FALSE] L0002
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d68,#0126)
L0001: CALL_VS         R0120 (#35,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d68,#0126,#01)
L0003: RFALSE          

Routine R0619, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d75,#0127)
L0001: CALL_VS         R0120 (#4c,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d75,#0127,#01)
L0003: RFALSE          

Routine R0620, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d80,#0128)
L0001: CALL_VS         R0120 (#0b,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d80,#0128,#01)
L0003: RFALSE          

Routine R0621, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d8b,#0129)
L0001: CALL_VS         R0120 (#37,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d8b,#0129,#01)
L0003: RFALSE          

Routine R0622, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4d96,#012a)
L0001: CALL_VS         R0120 (#0c,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4d96,#012a,#01)
L0003: RFALSE          

Routine R0623, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           Geb,G32
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4da1,#012b)
L0001: CALL_VS         R0120 (#38,#01,G32) -> -(SP)
       RET_POPPED      
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4da1,#012b,#01)
L0003: RFALSE          

Routine R0624, 0 locals

       JE              G28,G22 [FALSE] L0002
       JZ              G75 [TRUE] L0001
       CALL_VN         R1061 (#4dac,#02e7)
L0001: STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0976 (G32)
       CALL_1N         R0947
       CALL_2N         R0965 (S925)
       NEW_LINE        
       JUMP            L0003
L0002: JG              G75,#01 [FALSE] L0003
       CALL_VN         R1061 (#4dac,#02e7,#01)
L0003: RFALSE          

Routine R0625, 1 local

       RFALSE          

Routine R0626, 1 local

       RFALSE          

Routine R0627, 1 local

       RFALSE          

Routine R0628, 1 local

       RFALSE          

Routine R0629, 1 local

       RFALSE          

Routine R0630, 1 local

       RFALSE          

Routine R0631, 1 local

       RFALSE          

Routine R0632, 1 local

       RFALSE          

Routine R0633, 1 local

       RFALSE          

Routine R0634, 1 local

       RFALSE          

Routine R0635, 1 local

       RFALSE          

Routine R0636, 1 local

       RFALSE          

Routine R0637, 1 local

       RFALSE          

Routine R0638, 1 local

       RFALSE          

Routine R0639, 1 local

       RFALSE          

Routine R0640, 1 local

       RFALSE          

Routine R0641, 1 local

       RFALSE          

Routine R0642, 1 local

       RFALSE          

Routine R0643, 1 local

       RFALSE          

Routine R0644, 1 local

       RFALSE          

Routine R0645, 1 local

       RFALSE          

Routine R0646, 1 local

       RFALSE          

Routine R0647, 1 local

       RFALSE          

Routine R0648, 1 local

       RFALSE          

Routine R0649, 1 local

       RFALSE          

Routine R0650, 1 local

       RFALSE          

Routine R0651, 1 local

       RFALSE          

Routine R0652, 1 local

       RFALSE          

Routine R0653, 1 local

       RFALSE          

Routine R0654, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R1119 (L00) -> -(SP)
       JE              G22,(SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0655, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R1118 (L00) -> -(SP)
       JE              G22,(SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0656, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R1107 (L00) -> -(SP)
       JE              G22,(SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0657, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1144 (G22,L00) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0658, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1144 (G22,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0659, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1145 (G22,L00) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0660, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1145 (G22,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0661, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_2S         R1107 (L00) -> -(SP)
       CALL_VS         R1146 ((SP)+,L00) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0662, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R1107 (L00) -> -(SP)
       CALL_VS         R1146 ((SP)+,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0663, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1125 (L00,#ffff) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0664, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1125 (L00,#ffff) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0665, 1 local

       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1138 (G23,L00) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0666, 1 local

       CALL_VS         R0117 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0667, 1 local

       CALL_VS         R0117 (L00,#02) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0668, 1 local

       JG              L00,#00 [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0669, 1 local

       JL              L00,#00 [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0670, 1 local

       JE              L00,S008 [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0671, 1 local

       CALL_2S         R1260 (L00) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0672, 1 local

       CALL_2S         R1093 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0673, 1 local

       CALL_2S         R0902 (L00) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0674, 1 local

       CALL_2S         R0901 (L00) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0675, 1 local

       CALL_2S         R1267 (L00) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0676, 1 local

       CALL_VS         R1277 (L00,#ffff) -> -(SP)
       RET_POPPED      

Routine R0677, 1 local

       JE              L00,S008 [FALSE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0678, 1 local

       CALL_2S         R1260 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0679, 1 local

       CALL_2S         R1093 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0680, 1 local

       CALL_2S         R0902 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0681, 1 local

       CALL_2S         R0901 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0682, 1 local

       CALL_2S         R1267 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0683, 1 local

       CALL_VS         R1277 (L00,#ffff) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0684, 1 local

       SUB             L00,#01 -> -(SP)
       LOADW           #1d48,(SP)+ -> -(SP)
       JE              (SP)+,#01 [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0685, 1 local

       CALL_2S         R1092 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0686, 1 local

       CALL_2S         R1092 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0687, 1 local

       CALL_2S         R0900 (L00) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0688, 1 local

       CALL_2S         R0114 (L00) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0689, 1 local

       CALL_2S         R0114 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0690, 1 local

       CALL_VS         R0987 (L00,#ffff) -> -(SP)
       RET_POPPED      

Routine R0691, 1 local

       CALL_VS         R0988 (L00,#ffff) -> -(SP)
       RET_POPPED      

Routine R0692, 1 local

       CALL_VS         R0989 (L00,#ffff) -> -(SP)
       RET_POPPED      

Routine R0693, 1 local

       CALL_VS         R0990 (L00,#ffff) -> -(SP)
       RET_POPPED      

Routine R0694, 1 local

       CALL_VS         R0991 (L00,#ffff) -> -(SP)
       RET_POPPED      

Routine R0695, 1 local

       CALL_VS         R0992 (L00,#ffff) -> -(SP)
       RET_POPPED      

Routine R0696, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0713 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0721 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0718 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0697, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#1a) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0698, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#1a) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0699, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#1b) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0700, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#1b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0701, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#1d) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0702, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#1d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0703, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#08) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0704, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#08) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0705, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#15) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0706, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0707, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#08) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0708, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#08) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0709, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#06) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0710, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#06) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0711, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#10) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0712, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0713, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#0f) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0714, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#02) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0715, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#1f) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0716, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#0b) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0717, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0718, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#03) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0719, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#22) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0720, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#22) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0721, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#1e) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0722, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#1e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0723, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#07) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0724, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#14) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0725, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#14) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0726, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#0d) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0727, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#0d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0728, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#0e) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0729, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0730, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#09) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0731, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#0a) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0732, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#0a) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0733, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#18) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0734, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#18) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0735, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#19) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0736, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#0c) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0737, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#0c) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0738, 1 local

       CALL_VS         R1034 (#27,L00,#48) -> -(SP)
       RET_POPPED      

Routine R0739, 1 local

       CALL_VS         R1034 (#27,L00,#48) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R0740, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#24) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0741, 1 local

       JZ              L00 [TRUE] L0003
       CALL_VS         R1032 (L00,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      
L0003: RFALSE          

Routine R0742, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#16) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0743, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#00) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0744, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#20) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0745, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1032 (L00,#21) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0746, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1125 (L00,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0747, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1125 (L00,#00) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0748, 1 local

       CALL_VS         R1277 (L00,#01) -> -(SP)
       RET_POPPED      

Routine R0749, 1 local

       CALL_VS         R1277 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0750, 1 local

       CALL_VS         R0987 (L00,#01) -> -(SP)
       RET_POPPED      

Routine R0751, 1 local

       CALL_VS         R0988 (L00,#01) -> -(SP)
       RET_POPPED      

Routine R0752, 1 local

       CALL_VS         R0989 (L00,#01) -> -(SP)
       RET_POPPED      

Routine R0753, 1 local

       CALL_VS         R0990 (L00,#01) -> -(SP)
       RET_POPPED      

Routine R0754, 1 local

       CALL_VS         R0991 (L00,#01) -> -(SP)
       RET_POPPED      

Routine R0755, 1 local

       CALL_VS         R0992 (L00,#01) -> -(SP)
       RET_POPPED      

Routine R0756, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1a) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0757, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1a,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0758, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1b) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0759, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1b,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0760, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1d) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0761, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1d,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0762, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#08) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0763, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#08,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0764, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#15) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0765, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#15,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0766, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#08) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0767, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#08,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0768, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#06) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0769, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#06,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0770, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#10) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0771, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#10,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0772, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0f) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0773, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#02) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0774, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1f) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0775, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0b) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0776, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#03,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0777, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#03) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0778, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#22) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0779, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#22,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0780, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1e) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0781, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1e,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0782, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#07) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0783, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#14,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0784, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#14) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0785, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0d) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0786, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0d,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0787, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0e) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0788, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0e,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0789, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#09) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0790, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0a) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0791, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0a,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0792, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#18) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0793, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#18,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0794, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#19) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0795, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0c) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0796, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0c,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0797, 1 local

       CALL_VS2        R1035 (#27,L00,#48,#01) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0798, 1 local

       CALL_VS         R1035 (#27,L00,#48) -> -(SP)
       RET_POPPED      

Routine R0799, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#24) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0800, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#24,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0801, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#16) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0802, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#00) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0803, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#20) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0804, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#21) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0805, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1125 (L00,#00) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0806, 1 local

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1125 (L00,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0807, 1 local

       CALL_VS         R1277 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0808, 1 local

       CALL_VS         R1277 (L00,#01) -> -(SP)
       RET_POPPED      

Routine R0809, 1 local

       CALL_VS         R0987 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0810, 1 local

       CALL_VS         R0988 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0811, 1 local

       CALL_VS         R0989 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0812, 1 local

       CALL_VS         R0990 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0813, 1 local

       CALL_VS         R0991 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0814, 1 local

       CALL_VS         R0992 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0815, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1a,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0816, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1a) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0817, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1b,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0818, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1b) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0819, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1d,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0820, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1d) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0821, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#08,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0822, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#08) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0823, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#15,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0824, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#15) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0825, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#08,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0826, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#08) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0827, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#06,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0828, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#06) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0829, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#10,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0830, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#10) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0831, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0f,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0832, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#02,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0833, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1f,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0834, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0b,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0835, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#03) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0836, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#03,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0837, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#22,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0838, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#22) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0839, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1e,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0840, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#1e) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0841, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#07,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0842, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#14) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0843, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#14,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0844, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0d,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0845, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0d) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0846, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0e,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0847, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0e) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0848, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#09,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0849, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0a,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0850, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0a) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0851, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#18,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0852, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#18) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0853, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#19,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0854, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0c,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0855, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#0c) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0856, 1 local

       CALL_VS         R1035 (#27,L00,#48) -> -(SP)
       RET_POPPED      

Routine R0857, 1 local

       CALL_VS2        R1035 (#27,L00,#48,#01) -> -(SP)
       RET_POPPED      

orphan code fragment:

       RFALSE          

Routine R0858, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#24,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0859, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#24) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0860, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#16,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0861, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#00,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0862, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#20,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0863, 1 local

       JZ              L00 [TRUE] L0001
       CALL_VS         R1033 (L00,#21,#01) -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0864, 3 locals

       LOADW           #1d48,#00 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0004
       JZ              G16 [TRUE] L0004
       STORE           L02,#01
       JZ              G76 [TRUE] L0001
       PRINT           "[Scene 'Entire Game' ends]
"
L0001: CALL_VS         R1034 (#27,#01,#48) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STOREW          #1d48,#00,#00
       JUMP            L0003
L0002: STOREW          #1d48,#00,#02
L0003: CALL_VN         R1041 (#08,#01)
       CALL_2N         R1041 (#1c)
       STOREW          #1d42,#00,G1b
       LOADW           #1d4e,#00 -> -(SP)
       OR              (SP)+,#02 -> -(SP)
       STOREW          #1d4e,#00,(SP)+
       STOREW          #1d54,#00,#01
       JUMP            L0006
L0004: LOADW           #1d48,#00 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       JZ              G16 [FALSE] L0006
       STORE           L02,#01
       JZ              G76 [TRUE] L0005
       PRINT           "[Scene 'Entire Game' begins]
"
L0005: STOREW          #1d48,#00,#01
       CALL_VN         R1041 (#07,#01)
       CALL_2N         R1041 (#1b)
       STOREW          #1d3c,#00,G1b
       LOADW           #1d4e,#00 -> -(SP)
       OR              (SP)+,#01 -> -(SP)
       STOREW          #1d4e,#00,(SP)+
       STOREW          #1d54,#00,#00
       JUMP            L0006
L0006: JG              L00,#14 [FALSE] L0007
       PRINT_PADDR     S306
       NEW_LINE        
       RTRUE           
L0007: JG              L02,#00 [FALSE] L0008
       INC             L00
       PUSH            L00
       CALL_2N         R0864 ((SP)+)
L0008: RFALSE          

Routine R0865, 2 locals

       JE              L00,#ffff [FALSE] L0001
       STORE           L00,G2b
L0001: STORE           L01,#01
L0002: LOADW           #2f11,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0004
       LOADW           #2f11,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0003
       RET             L01
L0003: ADD             L01,#06 -> L01
       JUMP            L0002
L0004: RFALSE          

Routine R0866, 1 local

       JL              L00,#00 [TRUE] L0001
       JL              L00,#52 [FALSE] L0001
       MUL             L00,#06 -> -(SP)
       ADD             (SP)+,#00 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R0867, 0 locals

       CALL_2S         R0872 (#40) -> -(SP)
       RET_POPPED      

Routine R0868, 0 locals

       CALL_2S         R0872 (#80) -> -(SP)
       RET_POPPED      

Routine R0869, 0 locals

       CALL_2S         R0872 (#01) -> -(SP)
       RET_POPPED      

Routine R0870, 0 locals

       CALL_2S         R0872 (#02) -> -(SP)
       RET_POPPED      

Routine R0871, 0 locals

       CALL_2S         R0872 (#04) -> -(SP)
       RET_POPPED      

Routine R0872, 3 locals

       CALL_2S         R0865 (#ffff) -> L02
       JZ              L02 [TRUE] RFALSE
       ADD             L02,#01 -> -(SP)
       LOADW           #2f11,(SP)+ -> L01
       AND             L01,L00 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R0873, 10 locals

       JZ              L05 [TRUE] L0001
       CALL_VS2        R1262 (L02,L03,L04,L01,L00,L05) -> -(SP)
       RET_POPPED      
L0001: AND             L00,#30 -> L07
       AND             L00,#01 -> L00
       PUSH            G28
       PUSH            G27
       PUSH            G2d
       PUSH            G2e
       PUSH            G3d
       STORE           L06,G2c
       STORE           G28,L01
       JZ              L00 [TRUE] L0002
       STORE           G27,G22
       JUMP            L0003
L0002: STORE           G27,#00
L0003: CALL_2S         R0865 (L02) -> L01
       JZ              L01 [TRUE] L0011
       ADD             L01,#02 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       JE              (SP)+,#09 [FALSE] L0004
       STORE           G2d,L03
       JUMP            L0005
L0004: STORE           G2d,#01
       STORE           G3d,L03
L0005: ADD             L01,#03 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       JE              (SP)+,#09 [FALSE] L0006
       STORE           G2e,L04
       JUMP            L0007
L0006: STORE           G2e,#01
       STORE           G3d,L04
L0007: ADD             L01,#02 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       JE              (SP)+,#14 [TRUE] L0008
       ADD             L01,#03 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       JE              (SP)+,#14 [FALSE] L0011
L0008: JZ              L07 [TRUE] L0011
       CALL_1S         R1258 -> L08
       CALL_VN         R1259 (G43,#10,L08)
       CALL_1S         R1258 -> L09
       CALL_VN         R1259 (G3d,#0c,L09)
       CALL_2N         R1257 (L09)
       JE              L07,#10 [FALSE] L0009
       STORE           L03,G43
       STORE           G2d,#01
       STORE           G3d,G43
       JUMP            L0010
L0009: STORE           L04,G43
       STORE           G2e,#01
       STORE           G3d,G43
L0010: CALL_2N         R1247 (L09)
       PUSH            G3b
       PUSH            G3c
       STORE           G3b,#01
       SUB             G3d,#64 -> G3c
L0011: CALL_VN2        R0880 (L02,L03,L04,#00,#01)
       JZ              L08 [TRUE] L0012
       PULL            G3c
       PULL            G3b
       CALL_2N         R1257 (L08)
       CALL_2N         R1247 (L08)
L0012: STORE           G2c,L06
       PULL            G3d
       PULL            G2e
       PULL            G2d
       PULL            G27
       PULL            G28
       CALL_VN         R1181 (#01,L06)
       RTRUE           

Routine R0874, 3 locals

       PUSH            G2d
       PUSH            G2e
       STORE           G2d,L01
       STORE           G2e,L02
       CALL_VN         R0880 (L00,L01,L02)
       PULL            G2e
       PULL            G2d
       RTRUE           

Routine R0875, 3 locals

       CALL_VS         R0880 (L00,L01,L02) -> Gb9
       RTRUE           

Routine R0876, 4 locals

       STORE           L00,G32
       CALL_VS         R1113 (G32,G28) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       INSERT_OBJ      L00,G28
       STORE           L03,#01
L0001: STORE           G5a,L00
       CALL_2S         R1111 (G32) -> L01
       CALL_VN         R0880 (#19,G33)
       CALL_2S         R1111 (G28) -> L02
       STORE           G5a,#00
       INSERT_OBJ      L00,L02
       JE              L02,L01 [TRUE] L0003
       CALL_VS         R1113 (L00,G22) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN2        R0873 (#00,G22,#23,#00,#00)
L0002: CALL_1N         R1044
       JUMP            L0004
L0003: CALL_1N         R1045
L0004: RTRUE           

Routine R0877, 2 locals

       JE              G28,G22 [FALSE] L0001
       CALL_VN         R0071 (#1001,#45,L00)
       JUMP            L0002
L0001: CALL_VN         R0071 (#1001,#44,L00)
L0002: CALL_1N         R0945
       PUSH            G34
       STORE           G34,#01
       JZ              G27 [TRUE] L0003
       CALL_VN2        R0873 (#01,G28,#40,L00,#00)
       JUMP            L0004
L0003: CALL_VN2        R0873 (#00,G28,#40,L00,#00)
L0004: PULL            G34
       JIN             L00,G28 [TRUE] RTRUE
       RFALSE          

Routine R0878, 0 locals

       CALL_1N         R0948
       CALL_1N         R0879
       RTRUE           

Routine R0879, 3 locals

       STORE           L00,G2b
       STORE           G2b,#23
       CALL_2S         R0865 (#23) -> L01
       JZ              L01 [TRUE] L0001
       ADD             L01,#04 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L01,#05 -> -(SP)
       LOADW           #2f11,(SP)+ -> L02
       ADD             L01,#04 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       CALL_VN         R0920 ((SP)+,L02)
       CALL_2N         R1041 (#0b)
       CALL_VS         R0924 (L02,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,L00
       CALL_VS         R0924 (L02,#01) -> -(SP)
       STOREW          #3aeb,(SP)+,#01
L0001: CALL_1N         R0267
       JZ              L02 [TRUE] L0002
       ADD             L01,#04 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       CALL_VN         R0921 ((SP)+,L02)
L0002: STORE           G2b,L00
       RTRUE           

Routine R0880, 6 locals

       CALL_1N         R1178
       PUSH            G2b
       PUSH            G32
       PUSH            G33
       PUSH            Geb
       PUSH            G31
       STORE           G2b,L00
       STORE           G32,L01
       STORE           G33,L02
       STORE           Geb,G32
       STORE           G31,L03
       JL              G2b,#1000 [FALSE] L0001
       CALL_1S         R0881 -> L05
L0001: PULL            G31
       PULL            Geb
       PULL            G33
       PULL            G32
       PULL            G2b
       JZ              L04 [FALSE] L0002
       CALL_VN         R1181 (#01,G2c)
L0002: RET             L05

Routine R0881, 7 locals

       CALL_2N         R0928 (#0a)
       JZ              G34 [FALSE] L0001
       JZ              G30 [FALSE] L0001
       CALL_1N         R0946
L0001: STORE           G45,#00
       STORE           L06,#ffff
       CALL_2S         R0865 (G2b) -> L01
       JZ              L01 [TRUE] L0002
       ADD             L01,#04 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       ADD             L01,#05 -> -(SP)
       LOADW           #2f11,(SP)+ -> L06
       ADD             L01,#04 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       CALL_VN         R0920 ((SP)+,L06)
L0002: CALL_1S         R0882 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JE              L06,#ffff [TRUE] L0003
       ADD             L01,#04 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       CALL_VN         R0921 ((SP)+,L06)
L0003: CALL_2N         R0929 (#0a)
       RTRUE           
L0004: CALL_2N         R1041 (#0b)
       CALL_VN         R1181 (#00,G2c)
       CALL_1N         R1039
       JZ              G2c [TRUE] L0005
       JE              G28,G22 [TRUE] L0005
       CALL_VN         R0071 (#1001,#4a,G28)
       STORE           L00,#0009
       JUMP            L0007
L0005: JZ              G2c [TRUE] L0006
       CALL_1N         R0047
       CALL_1S         R1048 -> L00
       JUMP            L0007
L0006: CALL_2N         R1041 (#0a)
       CALL_1S         R1048 -> L00
L0007: JE              L00,#0008 [FALSE] L0008
       CALL_1N         R0891
L0008: CALL_1N         R1040
       JE              L06,#ffff [TRUE] L0009
       CALL_2S         R0865 (G2b) -> L01
       ADD             L01,#04 -> -(SP)
       LOADW           #2f11,(SP)+ -> -(SP)
       CALL_VN         R0921 ((SP)+,L06)
L0009: CALL_2N         R0929 (#0a)
       JZ              G34 [FALSE] L0010
       JZ              G30 [FALSE] L0010
       CALL_1N         R0946
L0010: JE              L00,#0008 [TRUE] RTRUE
       RFALSE          

Routine R0882, 4 locals

       CALL_2S         R0865 (#ffff) -> L03
       JZ              L03 [TRUE] RFALSE
       ADD             L03,#02 -> -(SP)
       LOADW           #2f11,(SP)+ -> L01
       ADD             L03,#03 -> -(SP)
       LOADW           #2f11,(SP)+ -> L02
       JE              L01,#10,#14 [FALSE] L0002
       JE              G2d,#01 [TRUE] L0001
       STORE           G2e,G2d
       STORE           G33,G32
L0001: MUL             #64,G3b -> -(SP)
       ADD             (SP)+,G3c -> G3d
       STORE           G2d,#01
       STORE           G32,#00
L0002: JE              L02,#10,#14 [FALSE] L0003
       MUL             #64,G3b -> -(SP)
       ADD             (SP)+,G3c -> G3d
       STORE           G2e,#01
       STORE           G33,#00
L0003: ADD             L03,#01 -> -(SP)
       LOADW           #2f11,(SP)+ -> L00
       AND             L00,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           G2c,#01
       RFALSE          
L0004: JE              G2d,#01 [FALSE] L0006
       JE              L01,#09 [FALSE] L0005
       CALL_VS         R0071 (#1001,#3d) -> -(SP)
       RET_POPPED      
L0005: JUMP            L0009
L0006: JE              L01,#09 [TRUE] L0007
       CALL_VS         R0071 (#1001,#3e) -> -(SP)
       RET_POPPED      
L0007: AND             L00,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              G32 [FALSE] L0008
       PUSH            G27
       STORE           G27,#00
       CALL_2N         R0904 (#16)
       PULL            G27
       JZ              G32 [FALSE] L0008
       JZ              G05 [FALSE] RTRUE
       CALL_VS         R0071 (#1001,#3b) -> -(SP)
       RET_POPPED      
L0008: AND             L00,#08 -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       JZ              G32 [TRUE] L0009
       CALL_VS         R0071 (#1001,#3c) -> -(SP)
       RET_POPPED      
L0009: JE              G2e,#01 [FALSE] L0011
       JE              L02,#09 [FALSE] L0010
       CALL_VS         R0071 (#1001,#3f) -> -(SP)
       RET_POPPED      
L0010: JUMP            L0014
L0011: JE              L02,#09 [TRUE] L0012
       CALL_VS         R0071 (#1001,#40) -> -(SP)
       RET_POPPED      
L0012: AND             L00,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       JZ              G33 [FALSE] L0013
       PUSH            G27
       STORE           G27,#00
       CALL_2N         R0904 (#17)
       PULL            G27
       JZ              G33 [FALSE] L0013
       JZ              G05 [FALSE] RTRUE
       CALL_VS         R0071 (#1001,#41) -> -(SP)
       RET_POPPED      
L0013: AND             L00,#10 -> -(SP)
       JZ              (SP)+ [FALSE] L0014
       JZ              G33 [TRUE] L0014
       CALL_VS         R0071 (#1001,#42) -> -(SP)
       RET_POPPED      
L0014: RFALSE          

Routine R0883, 0 locals

       JZ              G27 [FALSE] RFALSE
       CALL_1S         R0871 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       JE              G28,G22 [FALSE] L0002
       CALL_2S         R1041 (#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_1S         R1050 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2N         R0905 (#0c)
       CALL_2S         R0906 (#0c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VN         R0071 (#1001,#11)
L0001: CALL_2N         R0907 (#0c)
       STORE           G45,#5311
       CALL_1N         R1045
       RTRUE           
L0002: RFALSE          

Routine R0884, 2 locals

       JZ              G27 [FALSE] RFALSE
       CALL_2S         R0865 (#ffff) -> L01
       JZ              L01 [TRUE] RFALSE
       ADD             L01,#01 -> -(SP)
       LOADW           #2f11,(SP)+ -> L00
       AND             L00,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JZ              G32 [TRUE] L0004
       JE              G2d,#01 [TRUE] L0004
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_1N         R1045
       STORE           G45,#5322
       JE              G28,G22 [FALSE] RTRUE
       CALL_VS         R0071 (#1001,#43) -> -(SP)
       RET_POPPED      
L0001: JE              G28,G22 [FALSE] L0002
       PUSH            #00
       JUMP            L0003
L0002: PUSH            #01
L0003: CALL_VS2        R0082 (G32,(SP)+,#00,G28) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_1N         R1045
       STORE           G45,#5322
       RTRUE           
L0004: AND             L00,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              G33 [TRUE] L0008
       JE              G2e,#01 [TRUE] L0008
       CALL_VS         R0051 (G33,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       CALL_1N         R1045
       STORE           G45,#5322
       JE              G28,G22 [FALSE] RTRUE
       CALL_VS         R0071 (#1001,#43) -> -(SP)
       RET_POPPED      
L0005: JE              G28,G22 [FALSE] L0006
       PUSH            #00
       JUMP            L0007
L0006: PUSH            #01
L0007: CALL_VS2        R0082 (G33,(SP)+,#00,G28) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       CALL_1N         R1045
       STORE           G45,#5322
       RTRUE           
L0008: RFALSE          

Routine R0885, 2 locals

       CALL_2S         R0865 (#ffff) -> L01
       JZ              L01 [TRUE] RFALSE
       ADD             L01,#01 -> -(SP)
       LOADW           #2f11,(SP)+ -> L00
       AND             L00,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       JZ              G32 [TRUE] L0002
       JE              G2d,#01 [TRUE] L0002
       AND             L00,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       JIN             G32,G28 [TRUE] L0002
       CALL_VN         R0905 (#18,G32)
       CALL_VS         R0906 (#18,G32) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2N         R0877 (G32)
L0001: CALL_VN         R0907 (#18,G32)
       JIN             G32,G28 [TRUE] L0002
       CALL_1N         R1045
       STORE           G45,#5352
       RTRUE           
L0002: AND             L00,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JZ              G33 [TRUE] L0004
       JE              G2e,#01 [TRUE] L0004
       AND             L00,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JIN             G33,G28 [TRUE] L0004
       CALL_VN         R0905 (#18,G33)
       CALL_VS         R0906 (#18,G33) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_2N         R0877 (G33)
L0003: CALL_VN         R0907 (#18,G33)
       JIN             G33,G28 [TRUE] L0004
       CALL_1N         R1045
       STORE           G45,#5352
       RTRUE           
L0004: RFALSE          

Routine R0886, 1 local

       JE              G28,G22 [TRUE] L0003
       JZ              G27 [TRUE] L0003
       PUSH            G05
       STORE           G05,#00
       CALL_2S         R1041 (#12) -> L00
       CALL_1S         R1050 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       JZ              G16 [FALSE] L0001
       JZ              G05 [FALSE] L0001
       CALL_VN         R0071 (#1001,#48,G28)
L0001: CALL_2N         R1043 (L00)
       RTRUE           
L0002: PULL            G05
L0003: RFALSE          

Routine R0887, 1 local

       JE              G28,G22 [TRUE] L0003
       JZ              G27 [TRUE] L0003
       PUSH            G27
       STORE           G27,#00
       CALL_VS         R0880 (G2b,G32,G33) -> L00
       JZ              G2c [FALSE] L0001
       JZ              L00 [FALSE] L0002
L0001: JZ              G16 [FALSE] L0002
       CALL_2S         R1041 (#13) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VN         R0071 (#1001,#3a)
L0002: PULL            G27
       CALL_1N         R1042
       RTRUE           
L0003: RFALSE          

Routine R0888, 5 locals

       PUSH            Gb9
       STORE           Gb9,#ffff
       STOREW          #3a87,#00,#01
       JZ              G2c [TRUE] L0001
       STOREW          #3a87,#00,#00
L0001: STOREW          #3a87,#01,G34
       STOREW          #3a87,#02,L00
       STOREW          #3a87,#03,L01
       STOREW          #3a87,#04,L02
       CALL_VN         R1041 (#0c,#00,#01)
       CALL_1S         R1049 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       JE              Gb9,#01 [FALSE] L0002
       CALL_1N         R1042
L0002: PULL            Gb9
       RTRUE           

Routine R0889, 0 locals

       LOADW           #3a87,#00 -> -(SP)
       CALL_VS         R0924 (#0c,#00) -> -(SP)
       STOREW          #3aeb,(SP)+,(SP)+
       LOADW           #3a87,#01 -> -(SP)
       CALL_VS         R0924 (#0c,#01) -> -(SP)
       STOREW          #3aeb,(SP)+,(SP)+
       LOADW           #3a87,#02 -> -(SP)
       CALL_VS         R0924 (#0c,#02) -> -(SP)
       STOREW          #3aeb,(SP)+,(SP)+
       LOADW           #3a87,#03 -> -(SP)
       CALL_VS         R0924 (#0c,#03) -> -(SP)
       STOREW          #3aeb,(SP)+,(SP)+
       LOADW           #3a87,#04 -> -(SP)
       CALL_VS         R0924 (#0c,#04) -> -(SP)
       STOREW          #3aeb,(SP)+,(SP)+
       RFALSE          

Routine R0890, 6 locals

       JZ              L00 [FALSE] L0001
       STORE           L05,#338f
       JUMP            L0002
L0001: CALL_VS         R1284 (L00,#4a) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R1282 (L00,#4a) -> L05
L0002: JE              L01,#ffff [FALSE] L0005
       LOADB           L05,#00 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PUSH            #00
       JUMP            L0004
L0003: PUSH            #01
L0004: RET_POPPED      
L0005: STORE           L02,#00
       STORE           L04,#02
L0006: JL              L02,#52 [FALSE] L0011
       LOADW           #32eb,L02 -> -(SP)
       JE              L01,(SP)+ [FALSE] L0009
       LOADB           L05,L03 -> -(SP)
       AND             (SP)+,L04 -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PUSH            #00
       JUMP            L0008
L0007: PUSH            #01
L0008: RET_POPPED      
L0009: MUL             L04,#02 -> L04
       JE              L04,#0100 [FALSE] L0010
       STORE           L04,#01
       INC             L03
L0010: INC             L02
       JUMP            L0006
L0011: RFALSE          

Routine R0891, 0 locals

       CALL_VN         R0892 (G32,G2b)
       JE              G2b,#19 [FALSE] L0001
       CALL_VN         R0892 (G02,#14)
L0001: RTRUE           

Routine R0892, 6 locals

       STORE           L02,#00
       STORE           L04,#02
L0001: JL              L02,#52 [FALSE] L0005
       LOADW           #32eb,L02 -> -(SP)
       JE              L01,(SP)+ [FALSE] L0003
       CALL_VS         R1284 (L00,#4a) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1282 (L00,#4a) -> L05
       LOADB           L05,#00 -> -(SP)
       OR              (SP)+,#01 -> -(SP)
       STOREB          L05,#00,(SP)+
       LOADB           L05,L03 -> -(SP)
       OR              (SP)+,L04 -> -(SP)
       STOREB          L05,L03,(SP)+
L0002: LOADB           #338f,#00 -> -(SP)
       OR              (SP)+,#01 -> -(SP)
       STOREB          #338f,#00,(SP)+
       LOADB           #338f,L03 -> -(SP)
       OR              (SP)+,L04 -> -(SP)
       STOREB          #338f,L03,(SP)+
L0003: MUL             L04,#02 -> L04
       JE              L04,#0100 [FALSE] L0004
       STORE           L04,#01
       INC             L03
L0004: INC             L02
       JUMP            L0001
L0005: RTRUE           

Routine R0893, 1 local

       CALL_VN2        R0898 (#00,#00,L00,#00,#00,#02)
       RTRUE           

Routine R0894, 1 local

       CALL_VS         R0051 (L00,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_2N         R0977 (L00)
       JUMP            L0002
L0001: CALL_2N         R0975 (L00)
L0002: RTRUE           

Routine R0895, 8 locals

       MOD             L00,#64 -> L07
       DIV             L00,#64 -> L06
       PRINT           """
       STORE           L01,L06
       JUMP            L0002
L0001: INC             L04
       INC             L01
L0002: JL              L04,L07 [FALSE] L0006
       STORE           G4e,L01
       CALL_2S         R0123 (L01) -> L02
       CALL_2S         R0124 (L01) -> L03
       STORE           L05,L02
L0003: ADD             L02,L03 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0004
       LOADB           #00,L05 -> -(SP)
       PRINT_CHAR      (SP)+
       INC             L05
       JUMP            L0003
L0004: SUB             L07,#01 -> -(SP)
       JL              L04,(SP)+ [FALSE] L0005
       PRINT           " "
L0005: JUMP            L0001
L0006: PRINT           """
       RTRUE           

Routine R0896, 1 local

       PRINT_NUM       L00
       RTRUE           

Routine R0897, 1 local

       JZ              L00 [FALSE] L0001
       PRINT           "false"
       JUMP            L0002
L0001: PRINT           "true"
L0002: RTRUE           

Routine R0898, 13 locals

       JZ              L05 [FALSE] L0001
       JG              G77,#00 [FALSE] L0001
       PRINT           "("
       PRINT_NUM       G77
       PRINT           ") "
L0001: JE              L00,G22 [TRUE] L0003
       JE              L05,#02 [TRUE] L0003
       JZ              L01 [TRUE] L0002
       PRINT           "asking "
       CALL_2N         R0975 (L00)
       PRINT           " to try "
       JUMP            L0003
L0002: CALL_2N         R0975 (L00)
       PRINT           " "
L0003: CALL_VN2        R0255 (L02,L03,L04,L05)
       JZ              G34 [TRUE] L0004
       JZ              L05 [FALSE] L0004
       PRINT           " - silently"
L0004: RTRUE           

Routine R0899, 3 locals

       STORE           L00,#00
L0001: JL              L00,Gba [FALSE] L0004
       LOADW           #3a91,L00 -> L01
       JE              L01,#00,#01,#03 [TRUE] L0002
       JE              L01,#04,#05 [FALSE] L0003
L0002: STORE           L02,#01
L0003: INC             L00
       JUMP            L0001
L0004: JZ              Gbb [FALSE] L0005
       JZ              L02 [TRUE] L0005
       STORE           Gbc,G75
       STORE           G75,#00
L0005: JZ              Gbb [TRUE] L0006
       JZ              L02 [FALSE] L0006
       STORE           G75,Gbc
L0006: STORE           Gbb,L02
       RTRUE           

Routine R0900, 4 locals

       STORE           L03,#00
L0001: JL              L03,Gba [FALSE] L0005
       LOADW           #3a91,L03 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0004
       JZ              L01 [TRUE] L0002
       LOADW           #3ab9,L03 -> -(SP)
       CALL_2S         L01 ((SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JUMP            L0004
L0002: JZ              L02 [TRUE] L0003
       LOADW           #3ab9,L03 -> -(SP)
       JE              L02,(SP)+ [TRUE] RTRUE
       JUMP            L0004
L0003: RTRUE           
L0004: INC             L03
       JUMP            L0001
L0005: RFALSE          

Routine R0901, 2 locals

       LOADW           #2b23,L00 -> L01
       LOADW           #33a7,L01 -> -(SP)
       LOADW           (SP)+,#00 -> -(SP)
       JE              (SP)+,#ffff [FALSE] RFALSE
       LOADW           #2b65,L00 -> L01
       LOADW           #33a7,L01 -> -(SP)
       LOADW           (SP)+,#00 -> -(SP)
       JE              (SP)+,#ffff [FALSE] RFALSE
       LOADW           #2ba7,L00 -> L01
       LOADW           #33a7,L01 -> -(SP)
       LOADW           (SP)+,#00 -> -(SP)
       JE              (SP)+,#ffff [FALSE] RFALSE
       RTRUE           

Routine R0902, 1 local

       LOADW           #33a7,L00 -> -(SP)
       LOADW           (SP)+,#00 -> -(SP)
       JE              (SP)+,#ffff [FALSE] RFALSE
       RTRUE           

Routine R0903, 3 locals

       PUSH            Geb
       JZ              L01 [TRUE] L0001
       STORE           Geb,L01
L0001: CALL_VS         R1041 (L00,L01,#01) -> L02
       PULL            Geb
       JZ              L02 [FALSE] RTRUE
       RFALSE          

Routine R0904, 3 locals

       CALL_VN         R0905 (L00,L01)
       CALL_VS         R0906 (L00,L01) -> L02
       CALL_VN         R0907 (L00,L01)
       RET             L02

Routine R0905, 3 locals

       JE              Gba,#14 [FALSE] L0001
       CALL_2S         R1025 (#0c) -> -(SP)
       RET_POPPED      
L0001: STOREW          #3ab9,Gba,L01
       PUSH            Gba
       INC             Gba
       STOREW          #3a91,(SP)+,L00
       CALL_1N         R0899
       CALL_2N         R0930 (L00)
       LOADB           #2be9,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           L02,G2b
       STORE           G2b,G4c
L0002: LOADW           #2b23,L00 -> -(SP)
       CALL_VS         R0903 ((SP)+,L01) -> L01
       LOADB           #2be9,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           G2b,L02
L0003: RET             L01

Routine R0906, 3 locals

       LOADB           #2be9,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           L02,G2b
       STORE           G2b,G4c
L0001: LOADW           #2b65,L00 -> -(SP)
       CALL_VS         R0903 ((SP)+,L01) -> L01
       LOADB           #2be9,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           G2b,L02
L0002: RET             L01

Routine R0907, 4 locals

       JG              Gba,#00 [FALSE] L0003
       SUB             Gba,#01 -> -(SP)
       LOADW           #3a91,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       LOADB           #2be9,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           L03,G2b
       STORE           G2b,G4c
L0001: LOADW           #2ba7,L00 -> -(SP)
       CALL_VS         R0903 ((SP)+,L01) -> L02
       LOADB           #2be9,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           G2b,L03
L0002: DEC             Gba
       CALL_1N         R0899
       CALL_2N         R0931 (L00)
       RET             L02
L0003: CALL_2S         R1025 (#0d) -> -(SP)
       RET_POPPED      

Routine R0908, 2 locals

       JG              Gba,#00 [FALSE] L0001
       SUB             Gba,#01 -> -(SP)
       LOADW           #3a91,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0001
       DEC             Gba
       CALL_1N         R0899
       CALL_2N         R0931 (L00)
       RTRUE           
L0001: CALL_2S         R1025 (#0e) -> -(SP)
       RET_POPPED      

Routine R0909, 2 locals

       JZ              L01 [TRUE] L0001
       LOADB           #3ae1,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: STOREB          #3ae1,L00,#01
       PRINT           "
"
       CALL_2N         R0024 (L00)
       PRINT           "
"
       RTRUE           

Routine R0910, 2 locals

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: JZ              L01 [TRUE] L0002
       LOADB           #3ae1,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: STOREB          #3ae1,L00,#01
       CALL_2N         R0025 (L00)
       RTRUE           

Routine R0911, 3 locals

       JL              L00,#01 [TRUE] L0001
       JG              L00,#00 [FALSE] L0002
L0001: PRINT           "
*** Error on unknown file: "
       PRINT_PADDR     L01
       PRINT           " ***
"
       JUMP            L0003
L0002: LOADW           #3ae7,L00 -> L02
       PRINT           "
*** Error on file '"
       LOADW           L02,#04 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           "': "
       PRINT_PADDR     L01
       PRINT           " ***
"
L0003: CALL_2N         R1025 (#30)
       RFALSE          

Routine R0912, 1 local

       RFALSE          

Routine R0913, 1 local

       RFALSE          

Routine R0914, 1 local

       RET             #ffff

Routine R0915, 2 locals

       CALL_VS         R0911 (L00,S307) -> -(SP)
       RET_POPPED      

Routine R0916, 2 locals

       CALL_2N         R0915 (L00)
       RTRUE           

Routine R0917, 2 locals

       CALL_2N         R0915 (L00)
       RTRUE           

Routine R0918, 1 local

       CALL_2N         R0915 (L00)
       RTRUE           

Routine R0919, 1 local

       CALL_2N         R0915 (L00)
       RTRUE           

Routine R0920, 3 locals

       JZ              L00 [TRUE] RFALSE
       ADD             Gbd,#02 -> -(SP)
       CALL_VS2        R1281 (L00,#45,(SP)+,#01) -> L02
       JZ              L02 [TRUE] RFALSE
       ADD             Gbd,#08 -> -(SP)
       JL              (SP)+,#a2 [TRUE] L0001
       CALL_VN         R1025 (#2e,#a0)
       CALL_1N         R0923
       RFALSE          
L0001: INC             Gbd
       STOREW          #3aeb,Gbd,L01
       INC             Gbd
       ADD             Gbd,L02 -> Gbd
       ADD             L02,#02 -> -(SP)
       SUB             #00,(SP)+ -> -(SP)
       STOREW          #3aeb,Gbd,(SP)+
       RTRUE           

Routine R0921, 3 locals

       CALL_2S         R0922 (L01) -> L02
       JZ              L02 [TRUE] RFALSE
       SUB             L02,#02 -> Gbd
       JZ              L00 [TRUE] L0001
       CALL_VN2        R1281 (L00,#45,L02,#ffff)
L0001: RTRUE           

Routine R0922, 2 locals

       STORE           L01,Gbd
L0001: JG              L01,#00 [FALSE] L0003
       LOADW           #3aeb,L01 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       LOADW           #3aeb,L01 -> Gbe
       ADD             L01,Gbe -> L01
       SUB             #fffe,Gbe -> Gbe
       ADD             L01,#01 -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0002
       ADD             L01,#02 -> -(SP)
       RET_POPPED      
L0002: JUMP            L0001
L0003: STORE           Gbe,#00
       RFALSE          

Routine R0923, 2 locals

       PRINT           "Mstack backtrace: size "
       ADD             Gbd,#01 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " words
"
       STORE           L00,Gbd
L0001: LOADW           #3aeb,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       LOADW           #3aeb,L00 -> Gbe
       ADD             L00,Gbe -> L00
       SUB             #fffe,Gbe -> Gbe
       PRINT           "Block at "
       ADD             L00,#02 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " owner ID "
       ADD             L00,#01 -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " size "
       PRINT_NUM       Gbe
       PRINT           "
"
       STORE           L01,#00
L0002: JL              L01,Gbe [FALSE] L0003
       ADD             L00,#02 -> -(SP)
       ADD             (SP)+,L01 -> -(SP)
       LOADW           #3aeb,(SP)+ -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " "
       INC             L01
       JUMP            L0002
L0003: PRINT           "
"
       JUMP            L0001
L0004: RTRUE           

Routine R0924, 3 locals

       CALL_2S         R0922 (L00) -> L02
       JZ              L02 [FALSE] L0001
       PRINT_PADDR     S308
       PRINT           "internal ID number "
       PRINT_NUM       L00
       PRINT           "/"
       PRINT_NUM       L01
       PRINT           "
"
       RFALSE          
L0001: JL              L01,#00 [TRUE] L0002
       JL              L01,Gbe [TRUE] L0003
L0002: PRINT           "Variable stack offset wrong: "
       PRINT_NUM       L00
       PRINT           "/"
       PRINT_NUM       L01
       PRINT           " at "
       PRINT_NUM       L02
       PRINT           "
"
       RFALSE          
L0003: ADD             L02,L01 -> -(SP)
       RET_POPPED      

Routine R0925, 3 locals

       CALL_2S         R0922 (L00) -> L02
       JZ              L02 [FALSE] L0001
       RFALSE          
L0001: JL              L01,#00 [TRUE] L0002
       JL              L01,Gbe [TRUE] L0003
L0002: PRINT           "Variable stack offset wrong: "
       PRINT_NUM       L00
       PRINT           "/"
       PRINT_NUM       L01
       PRINT           " at "
       PRINT_NUM       L02
       PRINT           "
"
       RFALSE          
L0003: ADD             L02,L01 -> -(SP)
       RET_POPPED      

Routine R0926, 2 locals

       JE              L01,#01 [FALSE] L0001
       STOREW          #3aeb,L00,#29
       INC             L00
       JUMP            L0002
L0001: INC             L00
L0002: RTRUE           

Routine R0927, 2 locals

       JE              L01,#01 [FALSE] L0001
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       STOREW          #3aeb,L00,#00
       INC             L00
       JUMP            L0002
L0001: INC             L00
       INC             L00
       INC             L00
       INC             L00
       INC             L00
       INC             L00
L0002: RET             #06

Routine R0928, 2 locals

       LOADW           #3c2b,L00 -> L01
       JZ              L01 [FALSE] L0001
       RTRUE           
L0001: CALL_VN         R0920 (L01,L00)
       RTRUE           

Routine R0929, 2 locals

       LOADW           #3c2b,L00 -> L01
       JZ              L01 [FALSE] L0001
       RTRUE           
L0001: CALL_VN         R0921 (L01,L00)
       RTRUE           

Routine R0930, 2 locals

       LOADW           #3f13,L00 -> L01
       JZ              L01 [FALSE] L0001
       RTRUE           
L0001: ADD             L00,#2710 -> -(SP)
       CALL_VN         R0920 (L01,(SP)+)
       RTRUE           

Routine R0931, 2 locals

       LOADW           #3f13,L00 -> L01
       JZ              L01 [FALSE] L0001
       RTRUE           
L0001: ADD             L00,#2710 -> -(SP)
       CALL_VN         R0921 (L01,(SP)+)
       RTRUE           

Routine R0932, 0 locals

       JE              G1a,#01 [FALSE] L0001
       CALL_VN         R0071 (#1001,#0b)
       RTRUE           
L0001: JZ              G15 [FALSE] L0002
       CALL_VN         R0071 (#1001,#06)
       RTRUE           
L0002: JE              G15,#01 [FALSE] L0003
       CALL_VN         R0071 (#1001,#07)
       RTRUE           
L0003: CALL_1S         R0037 -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       CALL_VN         R0071 (#1001,#07)
L0004: RTRUE           

Routine R0933, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       CALL_2N         R0120 (#33)
       CALL_1N         R1105
       RTRUE           

Routine R0934, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       STORE           G1f,#01
       RTRUE           

Routine R0935, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       CALL_2N         R0120 (#29)
       RTRUE           

Routine R0936, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       STORE           G1f,#00
       RTRUE           

Routine R0937, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       CALL_2N         R0120 (#28)
       RTRUE           

Routine R0938, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       STORE           G5f,#01
       RTRUE           

Routine R0939, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       PRINT_PADDR     S004
       CALL_2N         R0120 (#1f)
       RTRUE           

Routine R0940, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       STORE           G5f,#02
       RTRUE           

Routine R0941, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       PRINT_PADDR     S004
       CALL_2N         R0120 (#20)
       RTRUE           

Routine R0942, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       STORE           G5f,#03
       RTRUE           

Routine R0943, 0 locals

       JE              G28,G22 [FALSE] RFALSE
       PRINT_PADDR     S004
       CALL_2N         R0120 (#21)
       RTRUE           

Routine R0944, 4 locals

       JE              G28,G22 [FALSE] RFALSE
       CALL_VN         R0120 (#2b,#01)
       LOADW           #2035,#00 -> -(SP)
       DIV             (SP)+,#03 -> L02
       JE              G22,#29 [TRUE] L0001
       INC             L02
L0001: JZ              L02 [FALSE] L0002
       CALL_VS         R0120 (#2b,#04) -> -(SP)
       RET_POPPED      
L0002: STORE           L00,#01
       STORE           L03,#00
       JUMP            L0004
L0003: ADD             L00,#03 -> L00
L0004: LOADW           #2035,#00 -> -(SP)
       JG              L00,(SP)+ [TRUE] L0009
       PRINT           """
       LOADW           #2035,L00 -> -(SP)
       PRINT_ADDR      (SP)+
       PRINT           "" "
       ADD             L00,#02 -> -(SP)
       LOADW           #2035,(SP)+ -> L01
       JE              L01,#ffff [FALSE] L0005
       CALL_VN         R0120 (#2b,#03)
       JUMP            L0006
L0005: CALL_VN         R0120 (#2b,#02)
       CALL_2N         R0975 (L01)
L0006: INC             L03
       SUB             L02,#01 -> -(SP)
       JL              L03,(SP)+ [FALSE] L0007
       PRINT           ", "
L0007: SUB             L02,#01 -> -(SP)
       JE              L03,(SP)+ [FALSE] L0008
       PRINT_PADDR     S049
L0008: JUMP            L0003
L0009: JE              G22,#29 [TRUE] L0010
       PRINT           """
       PRINT_ADDR      "me"
       PRINT           "" "
       CALL_VN         R0120 (#2b,#02)
       STORE           L02,G22
       STORE           G22,#29
       CALL_2N         R0975 (L02)
       STORE           G22,L02
L0010: PRINT_RET       "."

Routine R0945, 0 locals

       STORE           G05,#00
       STORE           G06,#00
       RTRUE           

Routine R0946, 0 locals

       JZ              G05 [TRUE] L0002
       NEW_LINE        
       STORE           G05,#00
       OR              G06,#01 -> G06
       AND             G06,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       SUB             G06,#02 -> G06
L0001: AND             G06,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       SUB             G06,#04 -> G06
L0002: OR              G06,#10 -> G06
       RTRUE           

Routine R0947, 0 locals

       AND             G06,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       SUB             G06,#10 -> G06
       STORE           G05,#01
L0001: RTRUE           

Routine R0948, 0 locals

       AND             G06,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       NEW_LINE        
L0001: CALL_1N         R0945
       RTRUE           

Routine R0949, 0 locals

       NEW_LINE        
       CALL_1N         R0945
       RTRUE           

Routine R0950, 0 locals

       STORE           G05,#00
       OR              G06,#02 -> G06
       OR              G06,#04 -> G06
       RTRUE           

Routine R0951, 0 locals

       STORE           G05,#00
       OR              G06,#02 -> G06
       RTRUE           

Routine R0952, 0 locals

       JZ              G05 [FALSE] L0001
       AND             G06,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       AND             G06,#04 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0001: NEW_LINE        
L0002: CALL_1N         R0945
       RTRUE           

Routine R0953, 1 local

       STORE           G05,#01
       OR              G06,#08 -> G06
       CALL_2N         R0965 (L00)
       CALL_1N         R0946
       STORE           G06,#00
       RTRUE           

Routine R0954, 0 locals

       JE              G07,#01 [TRUE] L0001
       PRINT           "s"
L0001: RTRUE           

Routine R0955, 1 local

       SET_TEXT_STYLE  ROMAN
       CALL_1N         R0952
       LOADW           #2e52,#01 -> -(SP)
       CALL_2N         R0965 ((SP)+)
       CALL_1N         R0957
       CALL_1N         R0945
       STORE           G11,#01
       RTRUE           

Routine R0956, 1 local

       STORE           Gbf,L00
       RTRUE           

Routine R0957, 1 local

       JZ              Gbf [TRUE] L0004
       STORE           L00,#00
L0001: LOADW           #478e,L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       LOADW           #478e,L00 -> -(SP)
       JE              (SP)+,Gbf [FALSE] L0002
       STORE           Gbf,#00
       RTRUE           
L0002: INC             L00
       JUMP            L0001
L0003: STOREW          #478e,L00,Gbf
       CALL_1N         R0945
       CALL_1N         Gbf
       CALL_1N         R0945
       STORE           Gbf,#00
L0004: RTRUE           

Routine R0958, 0 locals

       JE              G1f,#01 [FALSE] L0001
       CALL_1N         R0946
       CALL_2N         R0026 (#06)
       PRINT           "["
       SUB             G1d,G1e -> -(SP)
       CALL_VN         R0071 (#1001,#32,(SP)+)
       PRINT           ".]
"
       CALL_2N         R0026 (#00)
L0001: RTRUE           

Routine R0959, 2 locals

       PUSH            G05
       PUSH            G06
       CALL_2N         R0905 (#0d)
       CALL_2N         R0036 (#01)
       CALL_VN         R0035 (#01,#01)
       JZ              G6d [TRUE] L0007
       CALL_1S         R0030 -> L00
       SUB             L00,#0f -> L01
       STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0002
L0001: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0001
L0002: CALL_1N         R0945
       CALL_2S         R0906 (#0d) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       CALL_VN         R0035 (#01,#02)
       CALL_VS         R1288 (G20) -> -(SP)
       PULL            Gef
       JE              Gef,#04 [FALSE] L0003
       PRINT_PADDR     G20
       JUMP            L0004
L0003: JE              Gef,#03 [FALSE] L0004
       CALL_1N         G20
L0004: CALL_VN         R0035 (#01,L01)
       CALL_VS         R1288 (G21) -> -(SP)
       PULL            Gef
       JE              Gef,#04 [FALSE] L0005
       PRINT_PADDR     G21
       JUMP            L0006
L0005: JE              Gef,#03 [FALSE] L0006
       CALL_1N         G21
L0006: CALL_VN         R0035 (#01,#01)
       CALL_1N         R0034
L0007: CALL_1N         R0945
       CALL_2N         R0907 (#0d)
       PULL            G06
       PULL            G05
       RTRUE           

Routine R0960, 0 locals

       JZ              G19 [TRUE] L0001
       RTRUE           
L0001: PRINT_NUM       G03
       PRINT           "/"
       PRINT_NUM       G04
       RTRUE           

Routine R0961, 0 locals

       JZ              G19 [TRUE] L0001
       RTRUE           
L0001: JE              G02,#07 [FALSE] L0003
       CALL_2N         R0905 (#08)
       CALL_2S         R0906 (#08) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VN         R0071 (#1001,#47)
L0002: CALL_2N         R0907 (#08)
       JUMP            L0005
L0003: CALL_1N         R0080
       JE              G24,G02 [FALSE] L0004
       CALL_2N         R0977 (G02)
       JUMP            L0005
L0004: CALL_2N         R0976 (G24)
L0005: RTRUE           

Routine R0962, 0 locals

       CALL_2N         R0905 (#0e)
       CALL_2S         R0906 (#0e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2N         R0026 (#03)
       PRINT_PADDR     S004
       CALL_2N         R0026 (#00)
       NEW_LINE        
       PRINT_PADDR     S005
       PRINT           " by "
       PRINT_PADDR     S971
       NEW_LINE        
       CALL_1N         R0007
       PRINT           " / Inform 7 build "
       PRINT_PADDR     S001
       PRINT           " "
       PRINT           "(I6/v"
       LOADB           #00,#3c -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3d -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3e -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3f -> Gef
       PRINT_CHAR      Gef
       PRINT           " lib "
       PRINT_PADDR     S003
       PRINT           ") "
       NEW_LINE        
L0001: CALL_2N         R0907 (#0e)
       RTRUE           

Routine R0963, 1 local

       PRINT_NUM       L00
       RTRUE           

Routine R0964, 1 local

       CALL_2N         R0054 (L00)
       RTRUE           

Routine R0965, 1 local

       CALL_VS         R0051 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     L00
L0001: CALL_VS         R0051 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_1N         L00
L0002: RTRUE           

Routine R0966, 1 local

       CALL_2N         R0965 (L00)
       RTRUE           

Routine R0967, 4 locals

       JZ              L01 [FALSE] L0001
       CALL_2N         R0977 (L01)
       STORE           L03,#01
       JUMP            L0005
L0001: CALL_VS         R1280 (L00,L01) -> -(SP)
       CALL_VS         R1288 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0002
       STORE           L03,#00
       JUMP            L0005
L0002: JE              Gef,#04 [FALSE] L0004
       CALL_VS         R1280 (L00,L01) -> -(SP)
       JE              (SP)+,S008 [FALSE] L0003
       JUMP            L0005
L0003: CALL_VS         R1280 (L00,L01) -> -(SP)
       PRINT_PADDR     (SP)+
       STORE           L03,#01
       JUMP            L0005
L0004: JE              Gef,#03 [FALSE] L0005
       CALL_VS         R0112 (L00,L01) -> L03
L0005: JZ              L03 [TRUE] L0006
       STORE           G05,#01
       JZ              L02 [FALSE] L0006
       NEW_LINE        
       CALL_1N         R0946
L0006: RET             L03

Routine R0968, 5 locals

       CALL_VS         R0051 (L00,#04) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0051 (L00,#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       JZ              L01 [FALSE] L0002
L0001: CALL_VN         R0013 (#3f55,#a0,L00)
       JUMP            L0004
L0002: CALL_VS         R1280 (L00,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       CALL_VS         R1280 (L00,L01) -> -(SP)
       CALL_VS         R1288 ((SP)+) -> -(SP)
       JE              (SP)+,#03,#04 [FALSE] L0003
       CALL_VN2        R0013 (#3f55,#a0,L00,L01)
       JUMP            L0004
L0003: CALL_VS         R1026 (#02,L00,L01) -> -(SP)
       RET_POPPED      
L0004: LOADW           #3f55,#00 -> L03
       LOADB           #3f55,#02 -> -(SP)
       CALL_2S         R0028 ((SP)+) -> -(SP)
       STOREB          #3f55,#02,(SP)+
       STORE           L04,#02
L0005: ADD             L03,#02 -> -(SP)
       JL              L04,(SP)+ [FALSE] L0006
       LOADB           #3f55,L04 -> -(SP)
       PRINT_CHAR      (SP)+
       INC             L04
       JUMP            L0005
L0006: JG              L04,#02 [FALSE] L0007
       STORE           G05,#01
L0007: RTRUE           

Routine R0969, 2 locals

       JZ              L01 [TRUE] L0001
       PRINT_PADDR     L00
       JUMP            L0002
L0001: CALL_VN         R0968 (L00,#00)
L0002: RTRUE           

Routine R0970, 1 local

       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S040
       RTRUE           
L0001: CALL_VS         R1288 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#03 [FALSE] L0002
       PRINT           "<routine "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0002: JE              Gef,#04 [FALSE] L0003
       PRINT           "<string ""
       PRINT_PADDR     L00
       PRINT           "">"
       RTRUE           
L0003: JE              Gef,#00 [FALSE] L0004
       PRINT           "<illegal object number "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0004: CALL_VN         R0904 (#00,L00)
       RTRUE           

Routine R0971, 1 local

       STORE           L00,G0c
       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S040
       RTRUE           
L0001: CALL_VS         R1288 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#03 [FALSE] L0002
       PRINT           "<routine "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0002: JE              Gef,#04 [FALSE] L0003
       PRINT           "<string ""
       PRINT_PADDR     L00
       PRINT           "">"
       RTRUE           
L0003: JE              Gef,#00 [FALSE] L0004
       PRINT           "<illegal object number "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0004: JE              L00,G22 [FALSE] L0007
       JE              Ga5,#ffff [FALSE] L0005
       JZ              Gc0 [TRUE] L0005
       PRINT_PADDR     S035
       JUMP            L0006
L0005: PRINT_PADDR     G80
L0006: RTRUE           
L0007: JZ              Ga5 [TRUE] L0008
       GET_PROP_ADDR   L00,#27 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0008
       CALL_VS         R0967 (L00,#27,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       RTRUE           
L0008: JZ              Gc0 [TRUE] L0009
       CALL_VS         R1282 (L00,#50) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R0967 (L00,#50,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           Gc0,#00
       RTRUE           
L0009: GET_PROP_ADDR   L00,#15 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0010
       CALL_VS         R0967 (L00,#15,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       RTRUE           
L0010: PRINT_OBJ       L00
       RTRUE           

Routine R0972, 8 locals

       CALL_VS         R1284 (L00,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       MUL             Gc1,#01 -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       GET_PROP_ADDR   L00,#24 -> Gef
       PUSH            Gef
       LOADW           (SP)+,(SP)+ -> L07
       JZ              L03 [TRUE] L0001
       CALL_2N         R0969 (L07)
       PRINT           " "
       JUMP            L0002
L0001: PRINT_PADDR     L07
       PRINT           " "
L0002: JZ              L02 [TRUE] L0003
       RTRUE           
L0003: CALL_2N         R0970 (L00)
       RTRUE           
L0004: CALL_2S         R0180 (L00) -> L04
       JZ              L02 [TRUE] L0006
       JL              L04,#03 [TRUE] L0005
       JL              L04,#06 [TRUE] L0006
       JL              L04,#09 [FALSE] L0006
L0005: ADD             L04,#03 -> L04
L0006: LOADW           #2163,L04 -> L04
       MUL             L04,#01 -> -(SP)
       ADD             Gc1,(SP)+ -> -(SP)
       MUL             #0c,(SP)+ -> -(SP)
       ADD             #214b,(SP)+ -> L05
       ADD             L01,#03 -> -(SP)
       LOADW           L05,(SP)+ -> -(SP)
       LOADW           L05,L01 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0007
       STORE           L06,#01
L0007: JZ              G14 [TRUE] L0010
       JZ              L06 [TRUE] L0010
       STOREW          #3f55,#00,#a0
       OUTPUT_STREAM   REDIRECT_ENABLE,#3f55
       JZ              L02 [TRUE] L0008
       CALL_2N         R0964 (L02)
       JUMP            L0009
L0008: CALL_2N         R0970 (L00)
L0009: OUTPUT_STREAM   #fffd
       ADD             #3f55,#02 -> -(SP)
       CALL_2S         R0058 ((SP)+) -> -(SP)
       MUL             #03,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> L01
L0010: JZ              L03 [TRUE] L0011
       PUSH            #00
       JUMP            L0012
L0011: PUSH            #01
L0012: LOADW           L05,L01 -> -(SP)
       CALL_VN         R0969 ((SP)+,(SP)+)
       JZ              L02 [TRUE] L0013
       RTRUE           
L0013: CALL_2N         R0970 (L00)
       RTRUE           

Routine R0973, 2 locals

       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S040
       RTRUE           
L0001: STORE           L01,Ga5
       STORE           Ga5,#01
       TEST_ATTR       L00,#1b [FALSE] L0002
       STORE           Ga5,#ffff
       CALL_2N         R0970 (L00)
       STORE           Ga5,L01
       RTRUE           
L0002: CALL_VS         R1284 (L00,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       GET_PROP        L00,#05 -> Gef
       PUSH            Gef
       JE              (SP)+,S008 [TRUE] L0003
       CALL_VN         R0967 (L00,#05,#01)
       PRINT           " "
       CALL_2N         R0970 (L00)
       STORE           Ga5,L01
       RTRUE           
L0003: CALL_VN         R0972 (L00,#02)
       STORE           Ga5,L01
       RTRUE           

Routine R0974, 2 locals

       JZ              L00 [FALSE] L0001
       CALL_VN         R0968 (S040,#00)
       RTRUE           
L0001: STORE           L01,Ga5
       STORE           Ga5,#01
       TEST_ATTR       L00,#1b [FALSE] L0002
       STORE           Ga5,#ffff
       STORE           Gc0,#01
       CALL_2N         R0970 (L00)
       STORE           Ga5,L01
       STORE           Gc0,#00
       RTRUE           
L0002: CALL_VS         R1284 (L00,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       GET_PROP        L00,#05 -> Gef
       PUSH            Gef
       JE              (SP)+,S008 [TRUE] L0003
       CALL_VN         R0968 (L00,#05)
       PRINT           " "
       CALL_2N         R0970 (L00)
       STORE           Ga5,L01
       RTRUE           
L0003: CALL_VN2        R0972 (L00,#02,#00,#01)
       STORE           Ga5,L01
       RTRUE           

Routine R0975, 2 locals

       STORE           L01,Ga5
       STORE           Ga5,#00
       CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       TEST_ATTR       L00,#1b [FALSE] L0002
L0001: STORE           Ga5,#ffff
       CALL_2N         R0970 (L00)
       STORE           Ga5,L01
       RTRUE           
L0002: CALL_VN         R0972 (L00,#01)
       STORE           Ga5,L01
       RTRUE           

Routine R0976, 2 locals

       STORE           L01,Ga5
       STORE           Ga5,#00
       CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       TEST_ATTR       L00,#1b [TRUE] L0001
       JE              L00,G22 [FALSE] L0002
L0001: STORE           Ga5,#ffff
       STORE           Gc0,#01
       CALL_2N         R0970 (L00)
       STORE           Ga5,L01
       STORE           Gc0,#00
       RTRUE           
L0002: CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       TEST_ATTR       L00,#1b [FALSE] L0004
L0003: STORE           Ga5,#ffff
       CALL_2N         R0970 (L00)
       STORE           Ga5,L01
       RTRUE           
L0004: CALL_VN         R0972 (L00,#00)
       STORE           Ga5,L01
       RTRUE           

Routine R0977, 2 locals

       STORE           L01,Ga5
       STORE           Ga5,#ffff
       CALL_2N         R0970 (L00)
       STORE           Ga5,L01
       RTRUE           

Routine R0978, 2 locals

       JG              L01,#01 [TRUE] L0001
       RET             L01
L0001: RANDOM          L01 -> -(SP)
       RET_POPPED      

Routine R0979, 3 locals

       JG              L01,#01 [TRUE] L0001
       RET             L01
L0001: STORE           L02,L00
L0002: JE              L02,L00 [FALSE] L0003
       RANDOM          L01 -> L02
       JUMP            L0002
L0003: RET             L02

Routine R0980, 3 locals

       JZ              L00 [TRUE] L0001
       RET             L00
L0001: CALL_VS         R0978 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0981, 2 locals

       INC             L00
       JG              L00,L01 [FALSE] L0001
       STORE           L00,#01
L0001: RET             L00

Routine R0982, 2 locals

       INC             L00
       JG              L00,L01 [FALSE] L0001
       STORE           L00,L01
L0001: RET             L00

Routine R0983, 5 locals

       JG              L01,#01 [TRUE] L0001
       RET             L01
L0001: ADD             L01,#01 -> -(SP)
       MUL             L01,(SP)+ -> -(SP)
       DIV             (SP)+,#02 -> L02
       RANDOM          L02 -> L03
       STORE           L04,#01
L0002: JG              L04,L01 [TRUE] L0004
       SUB             L03,L04 -> L03
       JG              L03,#00 [TRUE] L0003
       SUB             L01,L04 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       RET_POPPED      
L0003: INC             L04
       JUMP            L0002
L0004: RTRUE           

Routine R0984, 2 locals

       JL              L00,L01 [FALSE] L0001
       ADD             L00,#01 -> -(SP)
       RET_POPPED      
L0001: ADD             L01,#01 -> -(SP)
       MOD             L00,(SP)+ -> -(SP)
       CALL_VS         R0979 ((SP)+,L01) -> -(SP)
       ADD             L01,#01 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0985, 2 locals

       JL              L00,L01 [FALSE] L0001
       ADD             L00,#01 -> -(SP)
       RET_POPPED      
L0001: ADD             L01,#01 -> -(SP)
       MOD             L00,(SP)+ -> -(SP)
       CALL_VS         R0978 ((SP)+,L01) -> -(SP)
       ADD             L01,#01 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0986, 12 locals

       ADD             L01,#01 -> L0b
       MOD             L00,L0b -> L04
       DIV             L00,L0b -> L00
       MOD             L00,L0b -> L03
       DIV             L00,L0b -> L02
       JG              L01,#20 [FALSE] L0001
       CALL_VS         R0978 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: JG              L01,#01 [TRUE] L0002
       STORE           L04,L01
       JUMP            L0009
L0002: MUL             L0b,L0b -> L0a
       DIV             #7ffe,L0a -> L09
       JZ              L02 [FALSE] L0003
       RANDOM          L09 -> L02
       STORE           L03,#00
L0003: STORE           L05,#00
L0004: JL              L05,L01 [FALSE] L0005
       STOREB          #4051,L05,L05
       INC             L05
       JUMP            L0004
L0005: STORE           L08,L02
       STORE           L05,#00
L0006: SUB             L01,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0008
       SUB             L01,L05 -> -(SP)
       MOD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,L05 -> L06
       MUL             L02,#7ce5 -> -(SP)
       ADD             (SP)+,#11 -> L02
       JL              L02,#00 [FALSE] L0007
       SUB             #00,L02 -> L02
L0007: LOADB           #4051,L06 -> L07
       LOADB           #4051,L05 -> -(SP)
       STOREB          #4051,L06,(SP)+
       STOREB          #4051,L05,L07
       INC             L05
       JUMP            L0006
L0008: LOADB           #4051,L03 -> -(SP)
       ADD             (SP)+,#01 -> L04
       INC             L03
       JL              L03,L01 [TRUE] L0009
       STORE           L03,#00
       STORE           L08,#00
L0009: MUL             L08,L0b -> -(SP)
       MUL             (SP)+,L0b -> -(SP)
       MUL             L03,L0b -> -(SP)
       ADD             L04,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0987, 5 locals

       LOADW           L00,#05 -> L02
       AND             L02,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           L03,#01
L0001: JL              L01,#00 [FALSE] L0002
       RET             L03
L0002: JZ              L01 [TRUE] L0003
       JZ              L03 [FALSE] L0003
       ADD             L02,#4000 -> L02
       AND             L02,#8000 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       ADD             L02,#8000 -> L02
L0003: JZ              L01 [FALSE] L0004
       JZ              L03 [TRUE] L0004
       SUB             L02,#4000 -> L02
       AND             L02,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       SUB             L02,#8000 -> L02
L0004: STOREW          L00,#05,L02
       LOADW           L00,#08 -> L04
       AND             L02,#f000 -> -(SP)
       CALL_VS         L04 (L00,#0005,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_PADDR     S309
       NEW_LINE        
       RTRUE           
L0005: RTRUE           

Routine R0988, 5 locals

       LOADW           L00,#05 -> L02
       AND             L02,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           L03,#01
L0001: JL              L01,#00 [FALSE] L0002
       RET             L03
L0002: JZ              L01 [TRUE] L0003
       JZ              L03 [FALSE] L0003
       ADD             L02,#8000 -> L02
L0003: JZ              L01 [FALSE] L0004
       JZ              L03 [TRUE] L0004
       SUB             L02,#8000 -> L02
L0004: STOREW          L00,#05,L02
       LOADW           L00,#08 -> L04
       AND             L02,#f000 -> -(SP)
       CALL_VS         L04 (L00,#0005,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_PADDR     S310
       NEW_LINE        
       RTRUE           
L0005: RTRUE           

Routine R0989, 5 locals

       LOADW           L00,#05 -> L02
       AND             L02,#3000 -> -(SP)
       JE              (SP)+,#3000 [FALSE] L0001
       STORE           L03,#01
L0001: JL              L01,#00 [FALSE] L0002
       RET             L03
L0002: JZ              L01 [TRUE] L0005
       JZ              L03 [FALSE] L0005
       AND             L02,#2000 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       ADD             L02,#2000 -> L02
L0003: AND             L02,#1000 -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       ADD             L02,#1000 -> L02
L0004: AND             L02,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       SUB             L02,#4000 -> L02
L0005: JZ              L01 [FALSE] L0007
       JZ              L03 [TRUE] L0007
       AND             L02,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       SUB             L02,#2000 -> L02
L0006: AND             L02,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       SUB             L02,#1000 -> L02
L0007: STOREW          L00,#05,L02
       LOADW           L00,#08 -> L04
       AND             L02,#f000 -> -(SP)
       CALL_VS         L04 (L00,#0005,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       PRINT_PADDR     S311
       NEW_LINE        
       RTRUE           
L0008: RTRUE           

Routine R0990, 5 locals

       LOADW           L00,#05 -> L02
       AND             L02,#3000 -> -(SP)
       JE              (SP)+,#2000 [FALSE] L0001
       STORE           L03,#01
L0001: JL              L01,#00 [FALSE] L0002
       RET             L03
L0002: JZ              L01 [TRUE] L0006
       JZ              L03 [FALSE] L0006
       AND             L02,#2000 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       ADD             L02,#2000 -> L02
L0003: AND             L02,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       SUB             L02,#1000 -> L02
L0004: AND             L02,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       SUB             L02,#8000 -> L02
L0005: AND             L02,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       SUB             L02,#4000 -> L02
L0006: JZ              L01 [FALSE] L0008
       JZ              L03 [TRUE] L0008
       AND             L02,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       SUB             L02,#2000 -> L02
L0007: AND             L02,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       SUB             L02,#1000 -> L02
L0008: STOREW          L00,#05,L02
       LOADW           L00,#08 -> L04
       AND             L02,#f000 -> -(SP)
       CALL_VS         L04 (L00,#0005,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       PRINT_PADDR     S312
       NEW_LINE        
       RTRUE           
L0009: RTRUE           

Routine R0991, 5 locals

       LOADW           L00,#05 -> L02
       AND             L02,#3000 -> -(SP)
       JE              (SP)+,#1000 [FALSE] L0001
       STORE           L03,#01
L0001: JL              L01,#00 [FALSE] L0002
       RET             L03
L0002: JZ              L01 [TRUE] L0006
       JZ              L03 [FALSE] L0006
       AND             L02,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       SUB             L02,#2000 -> L02
L0003: AND             L02,#1000 -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       ADD             L02,#1000 -> L02
L0004: AND             L02,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       SUB             L02,#8000 -> L02
L0005: AND             L02,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       SUB             L02,#4000 -> L02
L0006: JZ              L01 [FALSE] L0008
       JZ              L03 [TRUE] L0008
       AND             L02,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       SUB             L02,#2000 -> L02
L0007: AND             L02,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       SUB             L02,#1000 -> L02
L0008: STOREW          L00,#05,L02
       LOADW           L00,#08 -> L04
       AND             L02,#f000 -> -(SP)
       CALL_VS         L04 (L00,#0005,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       PRINT_PADDR     S313
       NEW_LINE        
       RTRUE           
L0009: RTRUE           

Routine R0992, 5 locals

       LOADW           L00,#05 -> L02
       AND             L02,#3000 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       STORE           L03,#01
L0001: JL              L01,#00 [FALSE] L0002
       RET             L03
L0002: JZ              L01 [TRUE] L0004
       JZ              L03 [FALSE] L0004
       AND             L02,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       SUB             L02,#2000 -> L02
L0003: AND             L02,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       SUB             L02,#1000 -> L02
L0004: JZ              L01 [FALSE] L0006
       JZ              L03 [TRUE] L0006
       AND             L02,#2000 -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       ADD             L02,#2000 -> L02
L0005: AND             L02,#1000 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       ADD             L02,#1000 -> L02
L0006: STOREW          L00,#05,L02
       LOADW           L00,#08 -> L04
       AND             L02,#f000 -> -(SP)
       CALL_VS         L04 (L00,#0005,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT_PADDR     S314
       NEW_LINE        
       RTRUE           
L0007: RTRUE           

Routine R0993, 4 locals

       JZ              L02 [TRUE] L0003
       STORE           L03,#01
L0001: CALL_VS         R1284 (L03,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1280 (L03,L01) -> -(SP)
       JE              (SP)+,L02 [FALSE] L0002
       CALL_VN         R1279 (L03,L01,#00)
L0002: INC             L03
       JG              L03,#0043 [TRUE] L0003
       JUMP            L0001
L0003: JZ              L00 [TRUE] L0004
       CALL_VN         R1279 (L00,L01,L02)
L0004: RTRUE           

Routine R0994, 3 locals

       JZ              L00 [TRUE] L0001
       CALL_VS         R1280 (L00,L01) -> -(SP)
       JE              (SP)+,L02 [FALSE] L0001
       CALL_VN         R1279 (L00,L01,#00)
L0001: RTRUE           

Routine R0995, 6 locals

       JZ              L01 [TRUE] L0003
       CALL_2S         R0243 (L02) -> L05
       STORE           L04,#01
L0001: JG              L04,L05 [TRUE] L0003
       CALL_VS         R1034 (L02,L04,L03) -> -(SP)
       JE              (SP)+,L01 [FALSE] L0002
       CALL_VN2        R1035 (L02,L04,L03,#00)
L0002: INC             L04
       JUMP            L0001
L0003: JZ              L00 [TRUE] L0004
       CALL_VN2        R1035 (L02,L00,L03,L01)
L0004: RTRUE           

Routine R0996, 4 locals

       JZ              L00 [TRUE] L0001
       CALL_VS         R1034 (L02,L00,L03) -> -(SP)
       JE              (SP)+,L01 [FALSE] L0001
       CALL_VN2        R1035 (L02,L00,L03,#00)
L0001: RTRUE           

Routine R0997, 3 locals

       CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1284 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R0051 (L02,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1284 (L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1280 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1280 (L00,L01) -> -(SP)
       CALL_VN         R1279 ((SP)+,L01,#00)
L0001: CALL_VS         R1280 (L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1280 (L02,L01) -> -(SP)
       CALL_VN         R1279 ((SP)+,L01,#00)
L0002: CALL_VN         R1279 (L00,L01,L02)
       CALL_VN         R1279 (L02,L01,L00)
L0003: RTRUE           

Routine R0998, 3 locals

       CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1284 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0051 (L02,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1284 (L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1280 (L00,L01) -> -(SP)
       JE              (SP)+,L02 [FALSE] L0001
       CALL_VN         R1279 (L00,L01,#00)
       CALL_VN         R1279 (L02,L01,#00)
L0001: RTRUE           

Routine R0999, 4 locals

       CALL_VS         R1034 (L02,L00,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1034 (L02,L00,L03) -> -(SP)
       CALL_VN2        R1035 (L02,(SP)+,L03,#00)
L0001: CALL_VS         R1034 (L02,L01,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1034 (L02,L01,L03) -> -(SP)
       CALL_VN2        R1035 (L02,(SP)+,L03,#00)
L0002: CALL_VN2        R1035 (L02,L00,L03,L01)
       CALL_VN2        R1035 (L02,L01,L03,L00)
       RTRUE           

Routine R1000, 4 locals

       CALL_VS         R1034 (L02,L00,L03) -> -(SP)
       JE              (SP)+,L01 [FALSE] L0001
       CALL_VN2        R1035 (L02,L00,L03,#00)
       CALL_VN2        R1035 (L02,L01,L03,#00)
L0001: RTRUE           

Routine R1001, 9 locals

       JZ              L03 [TRUE] L0001
       JE              L02,L00 [TRUE] L0001
       CALL_VN2        R1001 (L02,L01,L00,#00)
L0001: LOADW           L01,#06 -> L08
       LOADW           L08,#00 -> L04
       LOADW           L08,#01 -> L05
       STOREW          L08,#06,#01
       JZ              L04 [TRUE] L0004
       CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1284 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1280 (L00,L04) -> L06
       JUMP            L0003
L0002: CALL_VS         R1025 (#05,L00,L01) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: SUB             L00,#01 -> L06
L0005: JZ              L05 [TRUE] L0008
       CALL_VS         R0051 (L02,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R1284 (L02,L05) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R1280 (L02,L05) -> L07
       JUMP            L0007
L0006: CALL_VS         R1025 (#05,L02,L01) -> -(SP)
       RET_POPPED      
L0007: JUMP            L0009
L0008: SUB             L02,#01 -> L07
L0009: LOADW           L08,#03 -> -(SP)
       MUL             L06,(SP)+ -> -(SP)
       ADD             (SP)+,L07 -> L04
       MOD             L04,#10 -> -(SP)
       LOADW           #1b14,(SP)+ -> L06
       DIV             L04,#10 -> -(SP)
       ADD             (SP)+,#08 -> L04
       LOADW           L08,L04 -> -(SP)
       OR              (SP)+,L06 -> -(SP)
       STOREW          L08,L04,(SP)+
       RTRUE           

Routine R1002, 9 locals

       JZ              L03 [TRUE] L0001
       JE              L02,L00 [TRUE] L0001
       CALL_VN2        R1002 (L02,L01,L00,#00)
L0001: LOADW           L01,#06 -> L08
       LOADW           L08,#00 -> L04
       LOADW           L08,#01 -> L05
       STOREW          L08,#06,#01
       JZ              L04 [TRUE] L0004
       CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1284 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1280 (L00,L04) -> L06
       JUMP            L0003
L0002: CALL_VS         R1025 (#05,L00,L01) -> -(SP)
       RET_POPPED      
L0003: JUMP            L0005
L0004: SUB             L00,#01 -> L06
L0005: JZ              L05 [TRUE] L0008
       CALL_VS         R0051 (L02,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R1284 (L02,L05) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R1280 (L02,L05) -> L07
       JUMP            L0007
L0006: CALL_VS         R1025 (#05,L02,L01) -> -(SP)
       RET_POPPED      
L0007: JUMP            L0009
L0008: SUB             L02,#01 -> L07
L0009: LOADW           L08,#03 -> -(SP)
       MUL             L06,(SP)+ -> -(SP)
       ADD             (SP)+,L07 -> L04
       MOD             L04,#10 -> -(SP)
       LOADW           #1b14,(SP)+ -> L06
       DIV             L04,#10 -> -(SP)
       ADD             (SP)+,#08 -> L04
       LOADW           L08,L04 -> -(SP)
       AND             (SP)+,L06 -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       LOADW           L08,L04 -> -(SP)
       SUB             (SP)+,L06 -> -(SP)
       STOREW          L08,L04,(SP)+
L0010: RTRUE           

Routine R1003, 9 locals

       LOADW           L01,#06 -> L08
       LOADW           L08,#00 -> L04
       LOADW           L08,#01 -> L05
       JZ              L03 [TRUE] L0001
       JG              L02,L00 [FALSE] L0001
       STORE           L03,L00
       STORE           L00,L02
       STORE           L02,L03
L0001: JZ              L04 [TRUE] L0004
       CALL_VS         R0051 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1284 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1280 (L00,L04) -> L06
       JUMP            L0003
L0002: CALL_VN         R1025 (#05,L00,L01)
       RFALSE          
L0003: JUMP            L0005
L0004: SUB             L00,#01 -> L06
L0005: JZ              L05 [TRUE] L0008
       CALL_VS         R0051 (L02,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R1284 (L02,L05) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R1280 (L02,L05) -> L07
       JUMP            L0007
L0006: CALL_VN         R1025 (#05,L02,L01)
       RFALSE          
L0007: JUMP            L0009
L0008: SUB             L02,#01 -> L07
L0009: LOADW           L08,#03 -> -(SP)
       MUL             L06,(SP)+ -> -(SP)
       ADD             (SP)+,L07 -> L04
       MOD             L04,#10 -> -(SP)
       LOADW           #1b14,(SP)+ -> L06
       DIV             L04,#10 -> -(SP)
       ADD             (SP)+,#08 -> L04
       LOADW           L08,L04 -> -(SP)
       AND             (SP)+,L06 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R1004, 5 locals

       CALL_VS         R1280 (L00,L01) -> L03
       CALL_VS         R1280 (L02,L01) -> L04
       JE              L03,L04 [FALSE] L0001
       RTRUE           
L0001: JL              L03,L04 [FALSE] L0002
       CALL_VS         R1280 (L00,L01) -> L04
       CALL_VS         R1280 (L02,L01) -> L03
L0002: STORE           L00,#01
L0003: CALL_VS         R1284 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VS         R1280 (L00,L01) -> -(SP)
       JE              (SP)+,L03 [FALSE] L0004
       CALL_VN         R1279 (L00,L01,L04)
L0004: INC             L00
       JG              L00,#0043 [TRUE] L0005
       JUMP            L0003
L0005: RTRUE           

Routine R1005, 5 locals

       CALL_VS         R1280 (L00,L01) -> L03
       CALL_VS         R1280 (L02,L01) -> L04
       JE              L03,L04 [TRUE] L0001
       RTRUE           
L0001: STORE           L04,#00
       STORE           L02,#01
L0002: CALL_VS         R1284 (L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1280 (L02,L01) -> -(SP)
       JG              (SP)+,L04 [FALSE] L0003
       CALL_VS         R1280 (L02,L01) -> L04
L0003: INC             L02
       JG              L02,#0043 [TRUE] L0004
       JUMP            L0002
L0004: INC             L04
       CALL_VN         R1279 (L00,L01,L04)
       RTRUE           

Routine R1006, 8 locals

       CALL_VS         R1034 (L02,L00,L03) -> L05
       CALL_VS         R1034 (L02,L01,L03) -> L06
       JE              L05,L06 [FALSE] L0001
       RTRUE           
L0001: JL              L05,L06 [FALSE] L0002
       CALL_VS         R1034 (L02,L00,L03) -> L06
       CALL_VS         R1034 (L02,L01,L03) -> L05
L0002: CALL_2S         R0243 (L02) -> L04
       STORE           L07,#01
L0003: JG              L07,L04 [TRUE] L0005
       CALL_VS         R1034 (L02,L07,L03) -> -(SP)
       JE              (SP)+,L05 [FALSE] L0004
       CALL_VN2        R1035 (L02,L07,L03,L06)
L0004: INC             L07
       JUMP            L0003
L0005: RTRUE           

Routine R1007, 8 locals

       CALL_VS         R1034 (L02,L00,L03) -> L05
       CALL_VS         R1034 (L02,L01,L03) -> L06
       JE              L05,L06 [TRUE] L0001
       RTRUE           
L0001: STORE           L06,#00
       CALL_2S         R0243 (L02) -> L04
       STORE           L07,#01
L0002: JG              L07,L04 [TRUE] L0004
       CALL_VS         R1034 (L02,L07,L03) -> -(SP)
       JG              (SP)+,L06 [FALSE] L0003
       CALL_VS         R1034 (L02,L07,L03) -> L06
L0003: INC             L07
       JUMP            L0002
L0004: INC             L06
       CALL_VN2        R1035 (L02,L00,L03,L06)
       RTRUE           

Routine R1008, 10 locals

       LOADW           L00,#06 -> L09
       LOADW           L09,#00 -> L05
       LOADW           L09,#01 -> L06
       LOADW           L09,#04 -> L07
       LOADW           L09,#05 -> L08
       JZ              L05 [TRUE] L0010
       JZ              L06 [TRUE] L0010
       STORE           L03,#01
L0001: CALL_VS         R1284 (L03,L05) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       STORE           L04,#01
L0002: CALL_VS         R1284 (L04,L06) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JZ              L01 [TRUE] L0003
       JG              L04,L03 [FALSE] L0003
       JUMP            L0007
L0003: CALL_VS         R1003 (L03,L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JZ              L02 [FALSE] L0004
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0004: PRINT           "  "
       CALL_2N         R0976 (L03)
       JZ              L01 [TRUE] L0005
       PRINT           "  <=>  "
       JUMP            L0006
L0005: PRINT           "  >=>  "
L0006: CALL_2N         R0975 (L04)
       PRINT           "
"
L0007: INC             L04
       JG              L04,#0043 [TRUE] L0008
       JUMP            L0002
L0008: INC             L03
       JG              L03,#0043 [TRUE] L0009
       JUMP            L0001
L0009: RTRUE           
L0010: JZ              L05 [TRUE] L0017
       JZ              L06 [FALSE] L0017
       STORE           L03,#01
L0011: CALL_VS         R1284 (L03,L05) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       STORE           L04,#01
L0012: LOADW           L09,#03 -> -(SP)
       JG              L04,(SP)+ [TRUE] L0015
       CALL_VS         R1003 (L03,L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       JZ              L02 [FALSE] L0013
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0013: PRINT           "  "
       CALL_2N         R0976 (L03)
       PRINT           "  >=>  "
       CALL_VN         R1281 (L08,#45,L04)
       PRINT           "
"
L0014: INC             L04
       JUMP            L0012
L0015: INC             L03
       JG              L03,#0043 [TRUE] L0016
       JUMP            L0011
L0016: RTRUE           
L0017: JZ              L05 [FALSE] L0024
       JZ              L06 [TRUE] L0024
       STORE           L03,#01
L0018: LOADW           L09,#02 -> -(SP)
       JG              L03,(SP)+ [TRUE] L0023
       STORE           L04,#01
L0019: CALL_VS         R1284 (L04,L06) -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       CALL_VS         R1003 (L03,L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       JZ              L02 [FALSE] L0020
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0020: PRINT           "  "
       CALL_VN         R1281 (L07,#45,L03)
       PRINT           "  >=>  "
       CALL_2N         R0975 (L04)
       PRINT           "
"
L0021: INC             L04
       JG              L04,#0043 [TRUE] L0022
       JUMP            L0019
L0022: INC             L03
       JUMP            L0018
L0023: RTRUE           
L0024: STORE           L03,#01
L0025: LOADW           L09,#02 -> -(SP)
       JG              L03,(SP)+ [TRUE] L0030
       STORE           L04,#01
L0026: LOADW           L09,#03 -> -(SP)
       JG              L04,(SP)+ [TRUE] L0029
       CALL_VS         R1003 (L03,L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       JZ              L02 [FALSE] L0027
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0027: PRINT           "  "
       CALL_VN         R1281 (L07,#45,L03)
       PRINT           "  >=>  "
       CALL_VN         R1281 (L08,#45,L04)
       PRINT           "
"
L0028: INC             L04
       JUMP            L0026
L0029: INC             L03
       JUMP            L0025
L0030: RTRUE           

Routine R1009, 8 locals

       LOADW           L00,#06 -> L03
       LOADW           L00,#07 -> -(SP)
       CALL_VS         R0107 ((SP)+,#00) -> L04
       CALL_2S         R0243 (L04) -> L05
       JE              L04,#09 [FALSE] L0009
       STORE           L06,#01
L0001: CALL_VS         R1284 (L06,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R1280 (L06,L03) -> L07
       JZ              L01 [TRUE] L0002
       JL              L07,L06 [FALSE] L0002
       JUMP            L0007
L0002: JZ              L07 [FALSE] L0003
       JUMP            L0007
L0003: JZ              L02 [FALSE] L0004
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0004: PRINT           "  "
       CALL_2N         R0976 (L06)
       JZ              L01 [TRUE] L0005
       PRINT           "  ==  "
       JUMP            L0006
L0005: PRINT           "  >=>  "
L0006: CALL_2N         R0975 (L07)
       PRINT           "
"
L0007: INC             L06
       JG              L06,#0043 [TRUE] L0008
       JUMP            L0001
L0008: JUMP            L0017
L0009: STORE           L06,#01
L0010: JG              L06,L05 [TRUE] L0017
       CALL_VS         R1034 (L04,L06,L03) -> L07
       JZ              L01 [TRUE] L0011
       JL              L07,L06 [FALSE] L0011
       JUMP            L0016
L0011: JZ              L07 [FALSE] L0012
       JUMP            L0016
L0012: JZ              L02 [FALSE] L0013
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0013: PRINT           "  "
       CALL_VN         R0240 (L04,L06)
       JZ              L01 [TRUE] L0014
       PRINT           "  ==  "
       JUMP            L0015
L0014: PRINT           "  >=>  "
L0015: CALL_VN         R0240 (L04,L07)
       PRINT           "
"
L0016: INC             L06
       JUMP            L0010
L0017: RTRUE           

Routine R1010, 10 locals

       LOADW           L00,#06 -> L03
       LOADW           L00,#07 -> -(SP)
       CALL_VS         R0107 ((SP)+,#00) -> L06
       LOADW           L00,#07 -> -(SP)
       CALL_VS         R0107 ((SP)+,#01) -> L07
       JE              L07,#09 [FALSE] L0016
       JE              L06,#09 [FALSE] L0008
       STORE           L04,#01
L0001: STORE           L05,#01
L0002: CALL_VS         R1284 (L05,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       CALL_VS         R1280 (L05,L03) -> -(SP)
       JE              (SP)+,L04 [TRUE] L0003
       JUMP            L0005
L0003: JZ              L02 [FALSE] L0004
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0004: PRINT           "  "
       CALL_2N         R0976 (L04)
       PRINT           "  >=>  "
       CALL_2N         R0975 (L05)
       PRINT           "
"
L0005: INC             L05
       JG              L05,#0043 [TRUE] L0006
       JUMP            L0002
L0006: INC             L04
       JG              L04,#0043 [TRUE] L0007
       JUMP            L0001
L0007: JUMP            L0015
L0008: CALL_2S         R0243 (L06) -> L08
       STORE           L04,#01
L0009: JG              L04,L08 [TRUE] L0015
       STORE           L05,#01
L0010: CALL_VS         R1284 (L05,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       CALL_VS         R1280 (L05,L03) -> -(SP)
       JE              (SP)+,L04 [TRUE] L0011
       JUMP            L0013
L0011: JZ              L02 [FALSE] L0012
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0012: PRINT           "  "
       CALL_VN         R0240 (L06,L04)
       PRINT           "  >=>  "
       CALL_2N         R0975 (L05)
       PRINT           "
"
L0013: INC             L05
       JG              L05,#0043 [TRUE] L0014
       JUMP            L0010
L0014: INC             L04
       JUMP            L0009
L0015: JUMP            L0031
L0016: CALL_2S         R0243 (L07) -> L09
       JE              L06,#09 [FALSE] L0024
       STORE           L04,#01
L0017: STORE           L05,#01
L0018: JG              L05,L09 [TRUE] L0022
       CALL_VS         R1034 (L07,L05,L03) -> -(SP)
       JE              (SP)+,L04 [TRUE] L0019
       JUMP            L0021
L0019: JZ              L02 [FALSE] L0020
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0020: PRINT           "  "
       CALL_2N         R0976 (L04)
       PRINT           "  >=>  "
       CALL_VN         R0240 (L07,L05)
       PRINT           "
"
L0021: INC             L05
       JUMP            L0018
L0022: INC             L04
       JG              L04,#0043 [TRUE] L0023
       JUMP            L0017
L0023: JUMP            L0031
L0024: CALL_2S         R0243 (L06) -> L08
       STORE           L04,#01
L0025: JG              L04,L08 [TRUE] L0031
       STORE           L05,#01
L0026: JG              L05,L09 [TRUE] L0030
       CALL_VS         R1034 (L07,L05,L03) -> -(SP)
       JE              (SP)+,L04 [TRUE] L0027
       JUMP            L0029
L0027: JZ              L02 [FALSE] L0028
       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       STORE           L02,#01
L0028: PRINT           "  "
       CALL_VN         R0240 (L06,L04)
       PRINT           "  >=>  "
       CALL_VN         R0240 (L07,L05)
       PRINT           "
"
L0029: INC             L05
       JUMP            L0026
L0030: INC             L04
       JUMP            L0025
L0031: RTRUE           

Routine R1011, 4 locals

       CALL_VS         R1034 (L00,L01,L02) -> L03
       SUB             #00,L03 -> L03
       CALL_VN2        R1035 (L00,L01,L02,L03)
       RTRUE           

Routine R1012, 3 locals

       CALL_VS         R1034 (L00,L01,L02) -> -(SP)
       JL              (SP)+,#00 [TRUE] RTRUE
       RFALSE          

Routine R1013, 11 locals

       LOADW           L00,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           ":
"
       LOADW           L00,#06 -> L01
       LOADW           L00,#07 -> -(SP)
       CALL_VS         R0107 ((SP)+,#00) -> L08
       CALL_2S         R0243 (L08) -> L09
       JE              L08,#09 [FALSE] L0030
       STORE           L02,#01
L0001: CALL_VS         R1284 (L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1280 (L02,L01) -> -(SP)
       SUB             #00,(SP)+ -> -(SP)
       CALL_VN         R1279 (L02,L01,(SP)+)
L0002: INC             L02
       JG              L02,#0043 [TRUE] L0003
       JUMP            L0001
L0003: STORE           L02,#01
L0004: CALL_VS         R1284 (L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       CALL_VS         R1280 (L02,L01) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0012
       CALL_VS         R1280 (L02,L01) -> L04
       STORE           L05,#00
       STORE           L03,#01
L0005: TEST_ATTR       L03,#23 [FALSE] L0006
       CLEAR_ATTR      L03,#23
L0006: INC             L03
       JG              L03,#0043 [TRUE] L0007
       JUMP            L0005
L0007: STORE           L03,#01
L0008: CALL_VS         R1284 (L03,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R1280 (L03,L01) -> -(SP)
       JE              (SP)+,L04 [FALSE] L0009
       SET_ATTR        L03,#23
       SUB             #00,L04 -> -(SP)
       CALL_VN         R1279 (L03,L01,(SP)+)
       INC             L05
L0009: INC             L03
       JG              L03,#0043 [TRUE] L0010
       JUMP            L0008
L0010: JG              L05,#01 [FALSE] L0011
       STORE           L07,#01
       PRINT           "  { "
       CALL_2N         R0089 (#08)
       PRINT           " }
"
       JUMP            L0012
L0011: CALL_VN         R1279 (L02,L01,L04)
L0012: INC             L02
       JG              L02,#0043 [TRUE] L0013
       JUMP            L0004
L0013: STORE           L03,#01
L0014: TEST_ATTR       L03,#23 [FALSE] L0015
       CLEAR_ATTR      L03,#23
L0015: INC             L03
       JG              L03,#0043 [TRUE] L0016
       JUMP            L0014
L0016: STORE           L05,#00
       STORE           L02,#01
L0017: CALL_VS         R1284 (L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       CALL_VS         R1280 (L02,L01) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0018
       INC             L05
       SET_ATTR        L02,#23
L0018: INC             L02
       JG              L02,#0043 [TRUE] L0019
       JUMP            L0017
L0019: JZ              L05 [FALSE] L0020
       RTRUE           
L0020: JZ              L07 [TRUE] L0021
       PRINT           "  and "
       JUMP            L0022
L0021: PRINT           "  "
L0022: JL              L05,#04 [FALSE] L0023
       CALL_2N         R0089 (#08)
       PRINT           " in"
       JUMP            L0024
L0023: PRINT_NUM       L05
L0024: JE              L05,#01 [FALSE] L0025
       PRINT           " a"
L0025: PRINT           " single-member group"
       JG              L05,#01 [FALSE] L0026
       PRINT           "s"
L0026: PRINT           "
"
       STORE           L02,#01
L0027: CALL_VS         R1284 (L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       CALL_VS         R1280 (L02,L01) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0028
       CALL_VS         R1280 (L02,L01) -> -(SP)
       SUB             #00,(SP)+ -> -(SP)
       CALL_VN         R1279 (L02,L01,(SP)+)
L0028: INC             L02
       JG              L02,#0043 [TRUE] L0029
       JUMP            L0027
L0029: JUMP            L0058
L0030: STORE           L02,#01
L0031: JG              L02,L09 [TRUE] L0032
       CALL_VN         R1011 (L08,L02,L01)
       INC             L02
       JUMP            L0031
L0032: STORE           L02,#01
L0033: JG              L02,L09 [TRUE] L0043
       CALL_VS         R1012 (L08,L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0042
       CALL_VS         R1034 (L08,L02,L01) -> L04
       STORE           L05,#00
       STORE           L03,#01
L0034: JG              L03,L09 [TRUE] L0036
       CALL_VS         R1034 (L08,L03,L01) -> -(SP)
       JE              (SP)+,L04 [FALSE] L0035
       INC             L05
L0035: INC             L03
       JUMP            L0034
L0036: JG              L05,#01 [FALSE] L0041
       STORE           L07,#01
       PRINT           "  {"
       STORE           L06,#00
       STORE           L03,#01
L0037: JG              L03,L09 [TRUE] L0040
       CALL_VS         R1034 (L08,L03,L01) -> -(SP)
       JE              (SP)+,L04 [FALSE] L0039
       PRINT           " "
       CALL_VN         R0240 (L08,L03)
       SUB             L05,#01 -> -(SP)
       JL              L06,(SP)+ [FALSE] L0038
       PRINT           ","
L0038: PRINT           " "
       CALL_VN         R1011 (L08,L03,L01)
       INC             L06
L0039: INC             L03
       JUMP            L0037
L0040: PRINT           "}
"
       JUMP            L0042
L0041: CALL_VN2        R1035 (L08,L02,L01,L04)
L0042: INC             L02
       JUMP            L0033
L0043: STORE           L03,#01
L0044: TEST_ATTR       L03,#23 [FALSE] L0045
       CLEAR_ATTR      L03,#23
L0045: INC             L03
       JG              L03,#0043 [TRUE] L0046
       JUMP            L0044
L0046: STORE           L05,#00
       STORE           L02,#01
L0047: JG              L02,L09 [TRUE] L0049
       CALL_VS         R1012 (L08,L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0048
       INC             L05
L0048: INC             L02
       JUMP            L0047
L0049: JZ              L05 [FALSE] L0050
       RTRUE           
L0050: JZ              L07 [TRUE] L0051
       PRINT           "  and "
       JUMP            L0052
L0051: PRINT           "  "
L0052: JE              L05,#01 [FALSE] L0053
       PRINT           "a"
       JUMP            L0054
L0053: PRINT_NUM       L05
L0054: PRINT           " single-member group"
       JG              L05,#01 [FALSE] L0055
       PRINT           "s"
L0055: PRINT           "
"
       STORE           L02,#01
L0056: JG              L02,L09 [TRUE] L0058
       CALL_VS         R1012 (L08,L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0057
       CALL_VN         R1011 (L08,L02,L01)
L0057: INC             L02
       JUMP            L0056
L0058: RTRUE           

Routine R1014, 0 locals

       STORE           Gc2,#01
       RTRUE           

Routine R1015, 8 locals

       JZ              L00 [FALSE] L0001
       RFALSE          
L0001: JZ              L01 [FALSE] L0002
       RFALSE          
L0002: JE              L00,L01 [FALSE] L0003
       RFALSE          
L0003: JZ              L02 [TRUE] L0004
       CALL_2S         L02 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       RFALSE          
L0004: JZ              L02 [TRUE] L0005
       CALL_2S         L02 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       RFALSE          
L0005: JE              Gc3,L02 [FALSE] L0006
       JE              Gc4,L03 [TRUE] L0007
L0006: STORE           Gc2,#01
L0007: STORE           L06,#00
       STORE           L05,#01
L0008: TEST_ATTR       L05,#20 [FALSE] L0013
       JZ              L02 [TRUE] L0009
       CALL_2S         L02 (L05) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
L0009: GET_PROP        L05,#14 -> Gef
       PUSH            Gef
       JE              (SP)+,#ffff [FALSE] L0010
       STORE           Gc2,#01
L0010: PUSH            L06
       INC             L06
       PUT_PROP        L05,#14,(SP)+
       JUMP            L0013
L0011: GET_PROP        L05,#14 -> Gef
       PUSH            Gef
       JL              (SP)+,#00 [TRUE] L0012
       STORE           Gc2,#01
L0012: PUT_PROP        L05,#14,#ffff
L0013: INC             L05
       JG              L05,#0043 [TRUE] L0014
       JUMP            L0008
L0014: STORE           L06,#00
       STORE           L05,#01
L0015: CALL_VS         R0051 (L05,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       STORE           L07,#00
       AND             L03,#02 -> -(SP)
       JZ              (SP)+ [FALSE] L0016
       TEST_ATTR       L05,#0d [TRUE] L0016
       TEST_ATTR       L05,#0e [FALSE] L0017
       TEST_ATTR       L05,#0a [TRUE] L0017
L0016: STORE           L07,#01
L0017: LOADB           #4071,L06 -> -(SP)
       JE              (SP)+,L07 [TRUE] L0018
       STORE           Gc2,#01
L0018: STOREB          #4071,L06,L07
       INC             L06
L0019: INC             L05
       JG              L05,#0043 [TRUE] L0020
       JUMP            L0015
L0020: JZ              Gc2 [TRUE] L0021
       STORE           Gc2,#00
       STORE           Gc3,L02
       STORE           Gc4,L03
L0021: JZ              L04 [TRUE] L0022
       CALL_VS2        R1017 (L00,L01,L02,L03) -> -(SP)
       RET_POPPED      
L0022: CALL_VS2        R1016 (L00,L01,L02,L03) -> -(SP)
       RET_POPPED      

Routine R1016, 10 locals

       JZ              L00 [FALSE] L0001
       RFALSE          
L0001: JZ              L01 [FALSE] L0002
       RFALSE          
L0002: JE              L00,L01 [FALSE] L0003
       RFALSE          
L0003: STORE           L04,#01
L0004: TEST_ATTR       L04,#20 [FALSE] L0005
       PUT_PROP        L04,#16,#00
L0005: INC             L04
       JG              L04,#0043 [TRUE] L0006
       JUMP            L0004
L0006: PUT_PROP        L01,#16,#01
L0007: JZ              #01 [TRUE] L0024
       STORE           L07,#00
       STORE           L04,#01
L0008: TEST_ATTR       L04,#20 [FALSE] L0017
       JZ              L02 [TRUE] L0009
       CALL_2S         L02 (L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0017
L0009: GET_PROP        L04,#16 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0017
       STORE           L05,#01
L0010: CALL_VS         R0051 (L05,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       CALL_VS         R1280 (L05,#4d) -> -(SP)
       GET_PROP        L04,#19 -> Gef
       PUSH            Gef
       MUL             (SP)+,#10 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADW           #2c4a,(SP)+ -> L06
       JZ              L06 [FALSE] L0011
       JUMP            L0016
L0011: JZ              L06 [TRUE] L0013
       TEST_ATTR       L06,#20 [FALSE] L0013
       GET_PROP        L06,#16 -> Gef
       PUSH            Gef
       JG              (SP)+,#00 [FALSE] L0013
       JZ              L02 [TRUE] L0012
       CALL_2S         L02 (L06) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
L0012: OR              L05,#8000 -> -(SP)
       PUT_PROP        L04,#16,(SP)+
       STORE           L07,#01
       JUMP            L0016
L0013: JZ              L03 [TRUE] L0016
       CALL_VS         R0051 (L06,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       AND             L03,#02 -> -(SP)
       JZ              (SP)+ [FALSE] L0014
       TEST_ATTR       L06,#0d [TRUE] L0014
       TEST_ATTR       L06,#0e [FALSE] L0016
       TEST_ATTR       L06,#0a [TRUE] L0016
L0014: STORE           L08,G02
       STORE           G02,L04
       CALL_VS         R1281 (L06,#0c) -> L09
       STORE           G02,L08
       JZ              L09 [TRUE] L0016
       TEST_ATTR       L09,#20 [FALSE] L0016
       GET_PROP        L09,#16 -> Gef
       PUSH            Gef
       JG              (SP)+,#00 [FALSE] L0016
       JZ              L02 [TRUE] L0015
       CALL_2S         L02 (L09) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
L0015: OR              L05,#8000 -> -(SP)
       PUT_PROP        L04,#16,(SP)+
       STORE           L07,#01
       JUMP            L0016
L0016: INC             L05
       JG              L05,#0043 [TRUE] L0017
       JUMP            L0010
L0017: INC             L04
       JG              L04,#0043 [TRUE] L0018
       JUMP            L0008
L0018: STORE           L04,#01
L0019: TEST_ATTR       L04,#20 [FALSE] L0020
       GET_PROP        L04,#16 -> Gef
       PUSH            Gef
       AND             (SP)+,#7fff -> -(SP)
       PUT_PROP        L04,#16,(SP)+
L0020: INC             L04
       JG              L04,#0043 [TRUE] L0021
       JUMP            L0019
L0021: GET_PROP        L00,#16 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0022
       GET_PROP        L00,#16 -> Gef
       PUSH            Gef
       RET_POPPED      
L0022: JZ              L07 [FALSE] L0023
       GET_PROP        L00,#16 -> Gef
       PUSH            Gef
       RET_POPPED      
L0023: JUMP            L0007
L0024: RTRUE           

Routine R1017, 6 locals

       JZ              L00 [FALSE] L0001
       RET             #ffff
L0001: JZ              L01 [FALSE] L0002
       RET             #ffff
L0002: JE              L00,L01 [FALSE] L0003
       RFALSE          
L0003: TEST_ATTR       L00,#20 [FALSE] L0007
       TEST_ATTR       L01,#20 [FALSE] L0007
       CALL_VS2        R1015 (L00,L01,L02,L03) -> L04
       JZ              L04 [FALSE] L0004
       RET             #ffff
L0004: STORE           L05,#00
       STORE           L04,L00
L0005: JE              L04,L01 [TRUE] L0006
       JL              L05,#0d [FALSE] L0006
       INC             L05
       GET_PROP        L04,#16 -> Gef
       PUSH            Gef
       CALL_VS         R1133 (L04,(SP)+) -> L04
       JUMP            L0005
L0006: RET             L05
L0007: RET             #ffff

Routine R1018, 5 locals

       JZ              L03 [TRUE] L0004
       JZ              L01 [FALSE] L0001
       RET             #ffff
L0001: JZ              L02 [FALSE] L0002
       RET             #ffff
L0002: JZ              L00 [FALSE] L0003
       RET             #ffff
L0003: JUMP            L0007
L0004: JZ              L01 [FALSE] L0005
       RFALSE          
L0005: JZ              L02 [FALSE] L0006
       RFALSE          
L0006: JZ              L00 [FALSE] L0007
       RFALSE          
L0007: JE              L01,L02 [FALSE] L0008
       RFALSE          
L0008: LOADW           L00,#05 -> -(SP)
       AND             (SP)+,#80 -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       CALL_2N         R1025 (#1e)
       RFALSE          
L0009: LOADW           L00,#06 -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       RFALSE          
L0010: LOADW           L00,#08 -> L04
       JZ              L03 [TRUE] L0011
       CALL_VS2        L04 (L00,#40,L01,L02) -> -(SP)
       RET_POPPED      
L0011: CALL_VS2        L04 (L00,#80,L01,L02) -> -(SP)
       RET_POPPED      

Routine R1019, 5 locals

       JZ              L00 [FALSE] L0001
       RET             #ffff
L0001: STORE           L04,#00
       STORE           L03,L01
L0002: JE              L03,L02 [TRUE] L0003
       JG              L04,#47 [TRUE] L0003
       INC             L04
       GET_PROP        L03,#16 -> Gef
       STORE           L03,Gef
       JUMP            L0002
L0003: RET             L04

Routine R1020, 4 locals

L0001: JZ              L02 [TRUE] L0003
       CALL_VS         R1284 (L02,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1280 (L02,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1280 (L02,L00) -> L03
       PUT_PROP        L03,#16,L02
       JE              L03,L01 [FALSE] L0002
       RET             L02
L0002: STORE           L02,L03
       JUMP            L0001
L0003: RFALSE          

Routine R1021, 5 locals

       STORE           L04,L01
L0001: JZ              L01 [TRUE] L0003
       CALL_VS         R1284 (L01,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1280 (L01,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1280 (L01,L00) -> L03
       PUT_PROP        L01,#16,L03
       JE              L01,L02 [FALSE] L0002
       GET_PROP        L04,#16 -> Gef
       PUSH            Gef
       RET_POPPED      
L0002: STORE           L01,L03
       JUMP            L0001
L0003: RFALSE          

Routine R1022, 12 locals

       LOADW           L00,#06 -> L0b
       LOADW           L0b,#07 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS2        R1023 (L00,L01,L02,L03) -> -(SP)
       RET_POPPED      
L0001: LOADW           L0b,#00 -> L08
       LOADW           L0b,#01 -> L09
       STORE           L04,#01
L0002: CALL_VS         R0051 (L04,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1284 (L04,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       PUT_PROP        L04,#16,#00
L0003: INC             L04
       JG              L04,#0043 [TRUE] L0004
       JUMP            L0002
L0004: PUT_PROP        L02,#16,#01
L0005: JZ              #01 [TRUE] L0016
       STORE           L07,#00
       STORE           L04,#01
L0006: CALL_VS         R0051 (L04,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R1284 (L04,L08) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       GET_PROP        L04,#16 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0009
       STORE           L05,#01
L0007: CALL_VS         R0051 (L05,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       CALL_VS         R1284 (L05,L09) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       GET_PROP        L05,#16 -> Gef
       PUSH            Gef
       JG              (SP)+,#00 [FALSE] L0008
       CALL_VS         R1003 (L04,L00,L05) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       OR              L05,#8000 -> -(SP)
       PUT_PROP        L04,#16,(SP)+
       STORE           L07,#01
       JUMP            L0008
L0008: INC             L05
       JG              L05,#0043 [TRUE] L0009
       JUMP            L0007
L0009: INC             L04
       JG              L04,#0043 [TRUE] L0010
       JUMP            L0006
L0010: STORE           L04,#01
L0011: CALL_VS         R0051 (L04,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       CALL_VS         R1284 (L04,L08) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       GET_PROP        L04,#16 -> Gef
       PUSH            Gef
       AND             (SP)+,#7fff -> -(SP)
       PUT_PROP        L04,#16,(SP)+
L0012: INC             L04
       JG              L04,#0043 [TRUE] L0013
       JUMP            L0011
L0013: GET_PROP        L01,#16 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0014
       JUMP            L0016
L0014: JZ              L07 [FALSE] L0015
       JUMP            L0016
L0015: JUMP            L0005
L0016: JZ              L03 [TRUE] L0020
       GET_PROP        L01,#16 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0017
       RET             #ffff
L0017: STORE           L0a,#00
       STORE           L04,L01
L0018: JE              L04,L02 [TRUE] L0019
       JG              L0a,#47 [TRUE] L0019
       INC             L0a
       GET_PROP        L04,#16 -> Gef
       STORE           L04,Gef
       JUMP            L0018
L0019: RET             L0a
L0020: GET_PROP        L01,#16 -> Gef
       PUSH            Gef
       RET_POPPED      

Routine R1023, 15 locals

       LOADW           L00,#06 -> -(SP)
       LOADW           (SP)+,#02 -> L04
       LOADW           L00,#06 -> -(SP)
       LOADW           (SP)+,#00 -> L07
       CALL_VS         R1284 (L01,L07) -> -(SP)
       JZ              (SP)+ [TRUE] L0037
       CALL_VS         R1284 (L02,L07) -> -(SP)
       JZ              (SP)+ [TRUE] L0037
       JL              L04,#0100 [FALSE] L0020
       LOADW           L00,#06 -> -(SP)
       LOADW           (SP)+,#07 -> L05
       MUL             L04,L04 -> -(SP)
       ADD             L05,(SP)+ -> L06
       LOADW           L00,#06 -> -(SP)
       LOADW           (SP)+,#06 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0014
       LOADW           L00,#06 -> -(SP)
       STOREW          (SP)+,#06,#00
       STORE           L09,#01
L0001: CALL_VS         R1284 (L09,L07) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       STORE           L08,#01
L0002: CALL_VS         R1284 (L08,L07) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VS         R1003 (L09,L00,L08) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1280 (L08,L07) -> -(SP)
       CALL_VS         R1280 (L09,L07) -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             (SP)+,(SP)+ -> L0b
       STOREB          L05,L0b,#01
       CALL_VS         R1280 (L08,L07) -> -(SP)
       STOREB          L06,L0b,(SP)+
       JUMP            L0004
L0003: CALL_VS         R1280 (L08,L07) -> -(SP)
       CALL_VS         R1280 (L09,L07) -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             (SP)+,(SP)+ -> L0b
       STOREB          L05,L0b,#00
       STOREB          L06,L0b,#ff
L0004: INC             L08
       JG              L08,#0043 [TRUE] L0005
       JUMP            L0002
L0005: INC             L09
       JG              L09,#0043 [TRUE] L0006
       JUMP            L0001
L0006: STORE           L09,#00
L0007: JL              L09,L04 [FALSE] L0014
       STORE           L08,#00
L0008: JL              L08,L04 [FALSE] L0013
       MUL             L08,L04 -> -(SP)
       ADD             (SP)+,L09 -> -(SP)
       LOADB           L05,(SP)+ -> L0c
       JG              L0c,#00 [FALSE] L0012
       STORE           L0a,#00
L0009: JL              L0a,L04 [FALSE] L0012
       MUL             L09,L04 -> -(SP)
       ADD             (SP)+,L0a -> -(SP)
       LOADB           L05,(SP)+ -> L0e
       JG              L0e,#00 [FALSE] L0011
       MUL             L08,L04 -> -(SP)
       ADD             (SP)+,L0a -> L0b
       LOADB           L05,L0b -> L0d
       JZ              L0d [TRUE] L0010
       ADD             L0c,L0e -> -(SP)
       JL              (SP)+,L0d [FALSE] L0011
L0010: ADD             L0c,L0e -> -(SP)
       STOREB          L05,L0b,(SP)+
       MUL             L08,L04 -> -(SP)
       ADD             (SP)+,L09 -> -(SP)
       LOADB           L06,(SP)+ -> -(SP)
       STOREB          L06,L0b,(SP)+
L0011: INC             L0a
       JUMP            L0009
L0012: INC             L08
       JUMP            L0008
L0013: INC             L09
       JUMP            L0007
L0014: JZ              L03 [TRUE] L0016
       CALL_VS         R1280 (L02,L07) -> -(SP)
       CALL_VS         R1280 (L01,L07) -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADB           L05,(SP)+ -> L03
       JZ              L03 [FALSE] L0015
       RET             #ffff
L0015: RET             L03
L0016: CALL_VS         R1280 (L02,L07) -> -(SP)
       CALL_VS         R1280 (L01,L07) -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADB           L06,(SP)+ -> L09
       JL              L09,#ff [FALSE] L0019
       STORE           L08,#01
L0017: CALL_VS         R1284 (L08,L07) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       CALL_VS         R1280 (L08,L07) -> -(SP)
       JE              (SP)+,L09 [FALSE] L0018
       RET             L09
L0018: INC             L08
       JG              L08,#0043 [TRUE] L0019
       JUMP            L0017
L0019: RFALSE          
L0020: LOADW           L00,#06 -> -(SP)
       LOADW           (SP)+,#07 -> L05
       MUL             #02,L04 -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             L05,(SP)+ -> L06
       LOADW           L00,#06 -> -(SP)
       LOADW           (SP)+,#06 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0034
       LOADW           L00,#06 -> -(SP)
       STOREW          (SP)+,#06,#00
       STORE           L09,#01
L0021: CALL_VS         R1284 (L09,L07) -> -(SP)
       JZ              (SP)+ [TRUE] L0025
       STORE           L08,#01
L0022: CALL_VS         R1284 (L08,L07) -> -(SP)
       JZ              (SP)+ [TRUE] L0024
       CALL_VS         R1003 (L09,L00,L08) -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       CALL_VS         R1280 (L08,L07) -> -(SP)
       CALL_VS         R1280 (L09,L07) -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             (SP)+,(SP)+ -> L0b
       STOREW          L05,L0b,#01
       STOREW          L06,L0b,L08
       JUMP            L0024
L0023: CALL_VS         R1280 (L08,L07) -> -(SP)
       CALL_VS         R1280 (L09,L07) -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             (SP)+,(SP)+ -> L0b
       STOREW          L05,L0b,#00
       STOREW          L06,L0b,#00
L0024: INC             L08
       JG              L08,#0043 [TRUE] L0025
       JUMP            L0022
L0025: INC             L09
       JG              L09,#0043 [TRUE] L0026
       JUMP            L0021
L0026: STORE           L09,#00
L0027: JL              L09,L04 [FALSE] L0034
       STORE           L08,#00
L0028: JL              L08,L04 [FALSE] L0033
       MUL             L08,L04 -> -(SP)
       ADD             (SP)+,L09 -> -(SP)
       LOADW           L05,(SP)+ -> L0c
       JG              L0c,#00 [FALSE] L0032
       STORE           L0a,#00
L0029: JL              L0a,L04 [FALSE] L0032
       MUL             L09,L04 -> -(SP)
       ADD             (SP)+,L0a -> -(SP)
       LOADW           L05,(SP)+ -> L0e
       JG              L0e,#00 [FALSE] L0031
       MUL             L08,L04 -> -(SP)
       ADD             (SP)+,L0a -> L0b
       LOADW           L05,L0b -> L0d
       JZ              L0d [TRUE] L0030
       ADD             L0c,L0e -> -(SP)
       JL              (SP)+,L0d [FALSE] L0031
L0030: ADD             L0c,L0e -> -(SP)
       STOREW          L05,L0b,(SP)+
       MUL             L08,L04 -> -(SP)
       ADD             (SP)+,L09 -> -(SP)
       LOADW           L06,(SP)+ -> -(SP)
       STOREW          L06,L0b,(SP)+
L0031: INC             L0a
       JUMP            L0029
L0032: INC             L08
       JUMP            L0028
L0033: INC             L09
       JUMP            L0027
L0034: JZ              L03 [TRUE] L0036
       CALL_VS         R1280 (L02,L07) -> -(SP)
       CALL_VS         R1280 (L01,L07) -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADW           L05,(SP)+ -> L03
       JZ              L03 [FALSE] L0035
       RET             #ffff
L0035: RET             L03
L0036: CALL_VS         R1280 (L02,L07) -> -(SP)
       CALL_VS         R1280 (L01,L07) -> -(SP)
       MUL             (SP)+,L04 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADW           L06,(SP)+ -> -(SP)
       RET_POPPED      
L0037: JZ              L03 [TRUE] L0038
       RET             #ffff
L0038: RFALSE          

Routine R1024, 1 local

       CALL_2N         L00 (#4762)
       CALL_2N         L00 (#4776)
       RTRUE           

Routine R1025, 7 locals

       JZ              G11 [FALSE] L0001
       RTRUE           
L0001: STORE           G11,#00
       PRINT           "
*** Run-time problem P"
       PRINT_NUM       L00
       JZ              L04 [TRUE] L0002
       PRINT           " (at paragraph "
       PRINT_NUM       L04
       PRINT           " in the source text)"
L0002: PRINT           ": "
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0003
       PRINT           "Tried to move "
       CALL_2N         R0975 (L01)
       PRINT           " (a backdrop) to "
       CALL_2N         R0975 (L02)
       PRINT           ", which is not a region.
"
       JUMP            L0062
L0003: JE              Gef,#04 [FALSE] L0004
       PRINT           "Tried to change player to "
       CALL_2N         R0975 (L01)
       PRINT           ", which is not a person.
"
       JUMP            L0062
L0004: JE              Gef,#03 [FALSE] L0005
       PRINT           "Tried to change "
       CALL_2N         R0975 (L02)
       PRINT           " exit of "
       CALL_2N         R0975 (L01)
       PRINT_PADDR     S315
       JUMP            L0062
L0005: JE              Gef,#02 [FALSE] L0006
       PRINT           "Tried to change "
       CALL_2N         R0975 (L02)
       PRINT           " exit of "
       CALL_2N         R0975 (L01)
       PRINT_PADDR     S316
       JUMP            L0062
L0006: JE              Gef,#05 [FALSE] L0007
       PRINT_PADDR     S317
       CALL_2N         R0975 (L01)
       PRINT           ", violating '"
       LOADW           L02,#09 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           "'.
"
       JUMP            L0062
L0007: JE              Gef,#06 [FALSE] L0008
       PRINT_PADDR     S318
       JUMP            L0062
L0008: JE              Gef,#07 [FALSE] L0009
       PRINT_PADDR     S319
       JUMP            L0062
L0009: JE              Gef,#08 [FALSE] L0010
       PRINT_PADDR     S320
       JUMP            L0062
L0010: JE              Gef,#09 [FALSE] L0011
       PRINT_PADDR     S321
       CALL_2N         R0975 (L01)
       PRINT           ".
"
       JUMP            L0062
L0011: JE              Gef,#0a [FALSE] L0012
       PRINT           "Since "
       CALL_2N         R0975 (L01)
       PRINT           " is not allowed the property ""
       PRINT_PADDR     L02
       PRINT_PADDR     S322
       JUMP            L0062
L0012: JE              Gef,#0b [FALSE] L0013
       PRINT           "Although "
       CALL_2N         R0975 (L01)
       PRINT_PADDR     S323
       PRINT_PADDR     L02
       PRINT_PADDR     S324
       JUMP            L0062
L0013: JE              Gef,#0c [FALSE] L0014
       PRINT_PADDR     S325
       JUMP            L0062
L0014: JE              Gef,#0d [FALSE] L0015
       PRINT_PADDR     S326
       JUMP            L0062
L0015: JE              Gef,#0e [FALSE] L0016
       PRINT_PADDR     S327
       JUMP            L0062
L0016: JE              Gef,#0f [FALSE] L0017
       PRINT           "You can't move nothing.
"
       JUMP            L0062
L0017: JE              Gef,#10 [FALSE] L0018
       PRINT_PADDR     S328
       JUMP            L0062
L0018: JE              Gef,#11 [FALSE] L0019
       PRINT           "You can't divide by zero.
"
       JUMP            L0062
L0019: JE              Gef,#12 [FALSE] L0020
       PRINT_PADDR     S329
       PRINT_PADDR     S330
       PRINT_NUM       L01
       PRINT           ".
"
       JUMP            L0062
L0020: JE              Gef,#13 [FALSE] L0021
       PRINT           "Tried to move "
       CALL_2N         R0975 (L01)
       PRINT           " (not a backdrop) to "
       CALL_2N         R0975 (L02)
       PRINT           ", which is a region.
"
       JUMP            L0062
L0021: JE              Gef,#14 [FALSE] L0022
       PRINT_PADDR     S331
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0022: JE              Gef,#15 [FALSE] L0023
       PRINT_PADDR     S332
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0023: JE              Gef,#16 [FALSE] L0024
       PRINT_PADDR     S333
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0024: JE              Gef,#17 [FALSE] L0025
       PRINT_PADDR     S334
       PRINT_NUM       L02
       PRINT           ", row "
       PRINT_NUM       L03
       PRINT           " of the table '"
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0025: JE              Gef,#18 [FALSE] L0026
       PRINT_PADDR     S335
       PRINT_NUM       L01
       PRINT           ").
"
       JUMP            L0062
L0026: JE              Gef,#19 [FALSE] L0027
       PRINT_PADDR     S336
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0027: JE              Gef,#1a [FALSE] L0028
       PRINT_PADDR     S337
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0028: JE              Gef,#3a [FALSE] L0029
       PRINT_PADDR     S338
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0029: JE              Gef,#1b [FALSE] L0030
       PRINT_PADDR     S339
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0030: JE              Gef,#22 [FALSE] L0031
       PRINT_PADDR     S340
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0031: JE              Gef,#23 [FALSE] L0032
       PRINT_PADDR     S341
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0032: JE              Gef,#24 [FALSE] L0033
       PRINT_PADDR     S342
       CALL_2N         R1103 (L01)
       PRINT           "'.
"
       JUMP            L0062
L0033: JE              Gef,#1c [FALSE] L0034
       PRINT_PADDR     S343
       CALL_2N         R0975 (L01)
       PRINT_PADDR     S344
       JUMP            L0062
L0034: JE              Gef,#1d [FALSE] L0035
       PRINT_PADDR     S345
       JUMP            L0062
L0035: JE              Gef,#1e [FALSE] L0036
       PRINT_PADDR     S346
       JUMP            L0062
L0036: JE              Gef,#1f [FALSE] L0037
       PRINT_PADDR     S347
       CALL_2N         R1030 (L02)
       PRINT           "
"
       JUMP            L0062
L0037: JE              Gef,#20 [FALSE] L0038
       PRINT_PADDR     S348
       JUMP            L0062
L0038: JE              Gef,#21 [FALSE] L0039
       PRINT           "Attempt to 'decide on nothing'.
"
       JUMP            L0062
L0039: JE              Gef,#25 [FALSE] L0040
       PRINT           "Low level error.
"
       JUMP            L0062
L0040: JE              Gef,#26 [FALSE] L0041
       PRINT_PADDR     S349
       JUMP            L0062
L0041: JE              Gef,#27 [FALSE] L0042
       PRINT_PADDR     S350
       PRINT_NUM       L01
       PRINT           " to "
       PRINT_NUM       L02
       PRINT           ".
"
       JUMP            L0062
L0042: JE              Gef,#28 [FALSE] L0043
       PRINT_PADDR     S351
       PRINT_NUM       L01
       PRINT           " to "
       PRINT_NUM       L02
       PRINT           ".
"
       JUMP            L0062
L0043: JE              Gef,#29 [FALSE] L0044
       PRINT_PADDR     S352
       PRINT_NUM       L01
       PRINT           " to "
       PRINT_NUM       L02
       PRINT           ".
"
       JUMP            L0062
L0044: JE              Gef,#2a [FALSE] L0045
       PRINT_PADDR     S353
       JUMP            L0062
L0045: JE              Gef,#2b [FALSE] L0046
       PRINT_PADDR     S354
       JUMP            L0062
L0046: JE              Gef,#2c [FALSE] L0047
       PRINT_PADDR     S355
       JUMP            L0062
L0047: JE              Gef,#2d [FALSE] L0048
       PRINT_PADDR     S356
       JUMP            L0062
L0048: JE              Gef,#2e [FALSE] L0049
       PRINT           "The memory stack is exhausted.
"
       JUMP            L0062
L0049: JE              Gef,#2f [FALSE] L0050
       PRINT_PADDR     S357
       JUMP            L0062
L0050: JE              Gef,#30 [FALSE] L0051
       PRINT           "Error handling external file.
"
       JUMP            L0062
L0051: JE              Gef,#31 [FALSE] L0052
       PRINT_PADDR     S358
       JUMP            L0062
L0052: JE              Gef,#32 [FALSE] L0053
       PRINT_PADDR     S359
       JUMP            L0062
L0053: JE              Gef,#33 [FALSE] L0054
       PRINT_PADDR     S360
       JUMP            L0062
L0054: JE              Gef,#34 [FALSE] L0055
       PRINT_PADDR     S361
       JUMP            L0062
L0055: JE              Gef,#35 [FALSE] L0056
       PRINT_PADDR     S362
       JUMP            L0062
L0056: JE              Gef,#13 [FALSE] L0057
       PRINT           "Tried to move "
       CALL_2N         R0975 (L01)
       PRINT           " (not a thing) to "
       CALL_2N         R0975 (L02)
       PRINT_PADDR     S363
       JUMP            L0062
L0057: JE              Gef,#37 [FALSE] L0058
       PRINT           "The scene "
       CALL_2N         R0220 (L01)
       PRINT_PADDR     S364
       JUMP            L0062
L0058: JE              Gef,#38 [FALSE] L0059
       PRINT           "The scene "
       CALL_2N         R0220 (L01)
       PRINT_PADDR     S365
       JUMP            L0062
L0059: JE              Gef,#39 [FALSE] L0060
       PRINT_PADDR     S366
       JUMP            L0062
L0060: JE              Gef,#3b [FALSE] L0061
       PRINT_PADDR     S367
       PRINT_PADDR     S368
       PRINT_PADDR     L01
       PRINT           "".
"
       JUMP            L0062
L0061: JE              Gef,#3c [FALSE] L0062
       PRINT_PADDR     S369
       PRINT           "you wrote '"
       PRINT_PADDR     L02
       PRINT           "', which sets the value to "
       CALL_2N         R0975 (L01)
       PRINT_PADDR     S370
       PRINT_PADDR     L03
       PRINT           "'.
"
L0062: PRINT           "
"
       RTRUE           

Routine R1026, 3 locals

       PRINT           "** Library error "
       PRINT_NUM       L00
       PRINT           " ("
       PRINT_NUM       L01
       PRINT           ","
       PRINT_NUM       L02
       PRINT           ") **
"
       CALL_2N         R1025 (#25)
       RTRUE           

Routine R1027, 3 locals

       CALL_VN2        R1025 (#2f,#00,#00,#00,L01)
       RTRUE           

Routine R1028, 2 locals

       CALL_VS         R0051 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RET             L00
L0001: JZ              L00 [FALSE] L0002
       CALL_2N         R1025 (#21)
       JUMP            L0003
L0002: CALL_2N         R1025 (#20)
L0003: RET             L00

Routine R1029, 9 locals

       CALL_VS         R1288 (L00) -> -(SP)
       JE              (SP)+,#02 [FALSE] RFALSE
       JL              L02,#00 [FALSE] L0001
       NOT             L02 -> L02
L0001: JZ              L01 [TRUE] L0004
       JL              L02,#0048 [FALSE] L0002
       LOADW           #2905,L02 -> L04
       JUMP            L0003
L0002: LOADW           #2965,L02 -> L04
L0003: JUMP            L0005
L0004: LOADW           #2965,L02 -> L04
L0005: JL              L04,#00 [FALSE] L0007
       JZ              L03 [TRUE] L0006
       CALL_VN         R1025 (#09,L00)
L0006: RFALSE          
L0007: LOADW           #2715,L04 -> L06
       INC             L04
       CALL_VS         R1031 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JUMP            L0013
L0008: CALL_VS         R1284 (L00,#18) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       GET_PROP        L00,#18 -> Gef
       STORE           L08,Gef
L0009: JG              L08,#00 [FALSE] L0011
       MUL             L08,#02 -> L07
       LOADW           #2c0a,L07 -> -(SP)
       CALL_VS         R1031 ((SP)+,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       JUMP            L0013
L0010: ADD             L07,#01 -> -(SP)
       LOADW           #2c0a,(SP)+ -> L08
       JUMP            L0009
L0011: JZ              L03 [TRUE] L0012
       CALL_VN         R1025 (#0a,L00,L06)
L0012: RFALSE          
L0013: JZ              L01 [FALSE] RTRUE
       CALL_VS         R1284 (L00,L02) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JZ              L03 [TRUE] L0014
       CALL_VN         R1025 (#0b,L00,L06)
L0014: RFALSE          

Routine R1030, 3 locals

       JL              L00,#00 [FALSE] L0001
       NOT             L00 -> L00
L0001: LOADW           #2965,L00 -> L01
       LOADW           #2715,L01 -> L02
       PRINT_PADDR     L02
       RTRUE           

Routine R1031, 3 locals

       STORE           L02,L01
L0001: LOADW           #2715,L02 -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       LOADW           #2715,L02 -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L02
       JUMP            L0001
L0002: RFALSE          

Routine R1032, 2 locals

       JZ              L00 [TRUE] RFALSE
       JL              L01,#00 [FALSE] L0001
       NOT             L01 -> L01
L0001: CALL_VS2        R1029 (L00,#01,L01,#00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JL              L01,#0048 [FALSE] L0002
       TEST_ATTR       L00,L01 [TRUE] RTRUE
       RFALSE          
L0002: CALL_VS         R1284 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R1280 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0003: RFALSE          

Routine R1033, 4 locals

       JL              L01,#00 [FALSE] L0001
       NOT             L01 -> L01
       NOT             L02 -> L02
L0001: JZ              L03 [TRUE] L0002
       CALL_2N         L03 (L00)
       JUMP            L0007
L0002: CALL_VS2        R1029 (L00,#01,L01,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JZ              L02 [TRUE] L0005
       JL              L01,#0048 [FALSE] L0003
       CLEAR_ATTR      L00,L01
       JUMP            L0004
L0003: CALL_VN         R1279 (L00,L01,#00)
L0004: JUMP            L0007
L0005: JL              L01,#0048 [FALSE] L0006
       SET_ATTR        L00,L01
       JUMP            L0007
L0006: CALL_VN         R1279 (L00,L01,#01)
L0007: RTRUE           

Routine R1034, 4 locals

       JE              L00,#09 [FALSE] L0001
       STORE           L03,L01
       JUMP            L0002
L0001: LOADW           #2dea,L00 -> L03
L0002: JZ              L03 [FALSE] L0003
       CALL_VN         R1025 (#1f,L03,L02)
       RFALSE          
L0003: CALL_VS         R1284 (L03,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       JE              L00,#09 [FALSE] L0006
       JE              L02,#0c [FALSE] L0004
       CALL_VS         R1281 (L03,L02) -> -(SP)
       RET_POPPED      
L0004: CALL_VS2        R1029 (L01,#00,L02,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       CALL_VS         R1280 (L03,L02) -> -(SP)
       RET_POPPED      
L0005: RFALSE          
L0006: CALL_VS         R0051 (L03,#0d) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VN2        R1029 (L01,#00,L02,#01)
L0007: JL              L01,#01 [TRUE] L0008
       CALL_VS         R1280 (L03,#49) -> -(SP)
       JG              L01,(SP)+ [FALSE] L0009
L0008: CALL_2N         R1025 (#12)
       RFALSE          
L0009: ADD             L01,#0002 -> -(SP)
       CALL_VS         R1280 (L03,L02) -> -(SP)
       LOADW           (SP)+,(SP)+ -> -(SP)
       RET_POPPED      
L0010: CALL_VS         R0051 (L03,#0d) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       CALL_VN2        R1029 (L01,#00,L02,#01)
L0011: RFALSE          

Routine R1035, 5 locals

       JE              L00,#09 [FALSE] L0001
       STORE           L04,L01
       JUMP            L0002
L0001: LOADW           #2dea,L00 -> L04
L0002: JZ              L04 [FALSE] L0003
       CALL_VN         R1025 (#1f,L04,L02)
       RFALSE          
L0003: JE              L00,#09 [FALSE] L0005
       CALL_VS2        R1029 (L01,#00,L02,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VN         R1279 (L04,L02,L03)
L0004: JUMP            L0008
L0005: JL              L01,#01 [TRUE] L0006
       CALL_VS         R1280 (L04,#49) -> -(SP)
       JG              L01,(SP)+ [FALSE] L0007
L0006: CALL_2S         R1025 (#12) -> -(SP)
       RET_POPPED      
L0007: CALL_VS         R1284 (L04,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       ADD             L01,#0002 -> -(SP)
       CALL_VS         R1280 (L04,L02) -> -(SP)
       STOREW          (SP)+,(SP)+,L03
L0008: RTRUE           

Routine R1036, 1 local

       PRINT           "property "
       PRINT_NUM       L00
       RTRUE           

Routine R1037, 3 locals

       JL              Gc5,#01f5 [TRUE] L0001
       CALL_2S         R1025 (#06) -> -(SP)
       RET_POPPED      
L0001: LOADW           #4073,Gc5 -> -(SP)
       JE              (SP)+,#0008,#0009 [FALSE] L0002
       ADD             Gc5,#01 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       CALL_2S         R0244 ((SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       ADD             Gc5,#02 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       CALL_2N         R1252 ((SP)+)
L0002: JE              L00,#0008,#0009 [FALSE] L0003
       CALL_2S         R0244 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R1251 (L01) -> -(SP)
       CALL_VS         R1253 ((SP)+,L02) -> L02
L0003: PUSH            Gc5
       INC             Gc5
       STOREW          #4073,(SP)+,L00
       PUSH            Gc5
       INC             Gc5
       STOREW          #4073,(SP)+,L01
       PUSH            Gc5
       INC             Gc5
       STOREW          #4073,(SP)+,L02
       RTRUE           

Routine R1038, 4 locals

       PUSH            Geb
       LOADW           #2707,#00 -> -(SP)
       JE              (SP)+,#3fd3 [FALSE] L0001
       LOADW           #2707,#01 -> -(SP)
       JE              (SP)+,#3039 [TRUE] L0002
L0001: PRINT_PADDR     S371
       QUIT            
L0002: JZ              L01 [TRUE] L0003
       STORE           Geb,L01
L0003: JZ              L00 [TRUE] L0004
       CALL_1N         R1039
L0004: CALL_VS         R1041 (L00,L01,L02) -> L03
       JZ              L00 [TRUE] L0005
       CALL_1N         R1040
L0005: PULL            Geb
       JZ              L03 [FALSE] RTRUE
       RFALSE          

Routine R1039, 0 locals

       CALL_VN         R1037 (#ffff,#ffff,#ffff)
       INC             Gc6
       JE              Gc6,#14 [FALSE] L0001
       CALL_2N         R1025 (#07)
       STORE           Gc6,#ffff
       RTRUE           
L0001: CALL_VN         R1041 (#00,#00,#01)
       RTRUE           

Routine R1040, 3 locals

       LOADW           #4073,Gc5 -> -(SP)
       JE              (SP)+,#08 [FALSE] L0001
       STORE           L00,#01
       JUMP            L0003
L0001: LOADW           #4073,Gc5 -> -(SP)
       JE              (SP)+,#09 [FALSE] L0002
       STORE           L00,#00
       JUMP            L0003
L0002: STORE           L00,#ffff
L0003: JE              L00,#ffff [TRUE] L0004
       ADD             Gc5,#01 -> -(SP)
       LOADW           #4073,(SP)+ -> L01
       ADD             Gc5,#02 -> -(SP)
       LOADW           #4073,(SP)+ -> L02
L0004: DEC             Gc6
L0005: JG              Gc5,#00 [FALSE] L0007
       SUB             Gc5,#03 -> Gc5
       LOADW           #4073,Gc5 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0006
       JUMP            L0007
L0006: JUMP            L0005
L0007: JZ              Gc5 [FALSE] L0008
       STORE           Gc6,#00
L0008: JE              L00,#01 [FALSE] L0009
       STOREW          #4073,Gc5,#08
       JUMP            L0010
L0009: JZ              L00 [FALSE] L0010
       STOREW          #4073,Gc5,#09
L0010: JE              L00,#ffff [TRUE] L0011
       ADD             Gc5,#01 -> -(SP)
       STOREW          #4073,(SP)+,L01
       ADD             Gc5,#02 -> -(SP)
       STOREW          #4073,(SP)+,L02
L0011: RTRUE           

Routine R1041, 14 locals

       JZ              L02 [TRUE] L0001
       STORE           L02,#18
L0001: AND             G06,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       OR              L02,#10 -> L02
L0002: JL              Gc6,#00 [TRUE] RFALSE
       JZ              L01 [TRUE] L0003
       STORE           G0c,L01
L0003: SUB             Gc5,#03 -> L04
       JUMP            L0005
L0004: SUB             L04,#03 -> L04
L0005: JL              L04,#00 [TRUE] L0009
       LOADW           #4073,L04 -> L07
       JE              L07,#ffff [FALSE] L0006
       ADD             L04,#03 -> L04
       JUMP            L0009
L0006: ADD             L04,#01 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0007
       OR              L02,#20 -> L02
       JE              L07,#03,#04 [FALSE] L0007
       OR              L02,#02 -> L02
L0007: ADD             L04,#02 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0008
       OR              L02,#20 -> L02
L0008: JUMP            L0004
L0009: JL              L04,#00 [FALSE] L0010
       STORE           L04,#00
L0010: STORE           L05,L04
       AND             L02,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       JZ              L03 [FALSE] L0011
       RFALSE          
L0011: OR              L02,#05 -> L02
       STORE           L06,L00
       STORE           L03,#00
       AND             L02,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       JUMP            L0013
L0012: ADD             L04,#03 -> L04
L0013: JL              L04,Gc5 [FALSE] L0022
       LOADW           #4073,L04 -> L07
       ADD             L04,#01 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0018
       JE              L07,#01 [FALSE] L0014
       AND             L02,#fffe -> L02
L0014: JE              L07,#02 [FALSE] L0015
       OR              L02,#01 -> L02
L0015: JE              L07,#05 [FALSE] L0016
       AND             L02,#fffb -> L02
L0016: JE              L07,#06 [FALSE] L0017
       OR              L02,#04 -> L02
L0017: JE              L07,#07 [FALSE] L0018
       ADD             L04,#02 -> -(SP)
       LOADW           #4073,(SP)+ -> L06
L0018: JE              L07,#03 [FALSE] L0021
       ADD             L04,#02 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0021
       AND             L02,#08 -> -(SP)
       JZ              (SP)+ [FALSE] L0019
       PUSH            #00
       JUMP            L0020
L0019: PUSH            #01
L0020: ADD             L04,#01 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       CALL_VS2        R1041 ((SP)+,L01,(SP)+,#01) -> L03
       JZ              L03 [TRUE] L0021
       RET             L03
L0021: JUMP            L0012
L0022: AND             L02,#01 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       STORE           L07,Gc8
       JZ              Gc8 [TRUE] L0023
       CALL_VN         R1060 (L06,L01)
L0023: ADD             Gc7,Gc8 -> Gc7
       JL              L06,#00 [TRUE] L0041
       JL              L06,#0173 [FALSE] L0041
       LOADW           #33a7,L06 -> L09
       LOADW           L09,#00 -> L0a
       STORE           L04,#00
       STORE           L08,G16
       JE              L0a,#ffff [TRUE] L0040
       AND             L02,#08 -> -(SP)
       JZ              (SP)+ [FALSE] L0024
       PUSH            #00
       JUMP            L0025
L0024: PUSH            #01
L0025: PULL            L0b
       JE              L06,#0a [TRUE] L0026
       CALL_2N         R0928 (L06)
L0026: JE              L0a,#fffe [FALSE] L0035
       STORE           L04,#01
L0027: JE              L08,G16 [FALSE] L0034
       LOADW           L09,L04 -> L0a
       JE              L0a,#ffff [FALSE] L0028
       JUMP            L0034
L0028: JZ              L0c [FALSE] L0031
       STORE           L0d,L0a
       INC             L04
       LOADW           L09,L04 -> L0c
       JL              L0c,#01 [TRUE] L0029
       JG              L0c,#1f [FALSE] L0030
L0029: STORE           L0c,#01
       DEC             L04
L0030: INC             L04
       LOADW           L09,L04 -> L0a
L0031: DEC             L0c
       JE              L0d,#fffe,G2b [TRUE] L0032
       JUMP            L0033
L0032: CALL_VS         R1041 (L0a,L01,L0b) -> L03
       JZ              L03 [TRUE] L0033
       AND             L02,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0033
       JUMP            L0039
L0033: INC             L04
       JUMP            L0027
L0034: JUMP            L0038
L0035: JE              L08,G16 [FALSE] L0038
       LOADW           L09,L04 -> L0a
       JE              L0a,#ffff [FALSE] L0036
       JUMP            L0038
L0036: CALL_VS         R1041 (L0a,L01,L0b) -> L03
       JZ              L03 [TRUE] L0037
       AND             L02,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0037
       JUMP            L0039
L0037: INC             L04
       JUMP            L0035
L0038: STORE           L03,#00
L0039: JE              L06,#0a [TRUE] L0040
       CALL_2N         R0929 (L06)
L0040: JUMP            L0044
L0041: JZ              G05 [TRUE] L0042
       AND             L02,#10 -> -(SP)
       JZ              (SP)+ [FALSE] L0042
       CALL_1N         R0946
L0042: CALL_1S         L06 -> L03
       JE              L03,#02 [FALSE] L0043
       STORE           L03,G45
       JUMP            L0044
L0043: JZ              L03 [TRUE] L0044
       STORE           L03,L06
L0044: JZ              L03 [TRUE] L0050
       AND             L02,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       SUB             Gc7,Gc8 -> Gc7
       JL              Gc7,#00 [FALSE] L0045
       STORE           Gc7,#00
L0045: JZ              Gc8 [TRUE] L0049
       MUL             #02,Gc7 -> -(SP)
       PULL            Gef
       JL              Gef,#01 [TRUE] L0047
L0046: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0046
L0047: LOADW           #4073,Gc5 -> -(SP)
       JE              (SP)+,#08 [FALSE] L0048
       PRINT           "[stopped: success]
"
L0048: LOADW           #4073,Gc5 -> -(SP)
       JE              (SP)+,#09 [FALSE] L0049
       PRINT           "[stopped: fail]
"
L0049: STORE           Gc8,L07
       RET             L03
L0050: AND             L02,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0056
       SUB             Gc5,#03 -> L04
       JUMP            L0052
L0051: SUB             L04,#03 -> L04
L0052: JL              L04,L05 [TRUE] L0056
       LOADW           #4073,L04 -> -(SP)
       JE              (SP)+,#04 [FALSE] L0055
       ADD             L04,#02 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       JE              (SP)+,L00 [FALSE] L0055
       AND             L02,#08 -> -(SP)
       JZ              (SP)+ [FALSE] L0053
       PUSH            #00
       JUMP            L0054
L0053: PUSH            #01
L0054: ADD             L04,#01 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       CALL_VS2        R1041 ((SP)+,L01,(SP)+,#01) -> L03
       JZ              L03 [TRUE] L0055
       DEC             Gc7
       STORE           Gc8,L07
       RET             L03
L0055: JUMP            L0051
L0056: SUB             Gc7,Gc8 -> Gc7
       STOREW          #4073,Gc5,#00
       STORE           Gc8,L07
       RFALSE          

Routine R1042, 1 local

       JZ              L00 [TRUE] L0001
       STORE           G45,L00
L0001: CALL_1N         R1044
       RTRUE           

Routine R1043, 1 local

       JZ              L00 [TRUE] L0001
       STORE           G45,L00
L0001: CALL_1N         R1045
       RTRUE           

Routine R1044, 2 locals

       CALL_VN         R1037 (#08,L00,L01)
       SUB             Gc5,#03 -> Gc5
       RTRUE           

Routine R1045, 2 locals

       CALL_VN         R1037 (#09,L00,L01)
       SUB             Gc5,#03 -> Gc5
       RTRUE           

Routine R1046, 0 locals

       CALL_VN         R1037 (#0a,#00,#00)
       SUB             Gc5,#03 -> Gc5
       RTRUE           

Routine R1047, 1 local

       STOREW          #4073,Gc5,L00
       RTRUE           

Routine R1048, 1 local

       LOADW           #4073,Gc5 -> L00
       JE              L00,#09 [TRUE] L0001
       JE              L00,#08 [FALSE] L0002
L0001: RET             L00
L0002: RET             #0a

Routine R1049, 0 locals

       LOADW           #4073,Gc5 -> -(SP)
       JE              (SP)+,#09 [TRUE] RTRUE
       RFALSE          

Routine R1050, 0 locals

       LOADW           #4073,Gc5 -> -(SP)
       JE              (SP)+,#08 [TRUE] RTRUE
       RFALSE          

Routine R1051, 5 locals

       JZ              L00 [TRUE] L0001
       CALL_VN         R1041 (L00,L01,L02)
L0001: LOADW           #4073,Gc5 -> L04
       JE              L04,#09 [TRUE] L0002
       JE              L04,#08 [FALSE] L0003
L0002: ADD             Gc5,#01 -> -(SP)
       LOADW           #4073,(SP)+ -> L04
       JZ              L04 [TRUE] L0003
       ADD             Gc5,#02 -> -(SP)
       LOADW           #4073,(SP)+ -> -(SP)
       RET_POPPED      
L0003: JZ              L03 [TRUE] L0004
       CALL_2S         R0241 (L03) -> -(SP)
       RET_POPPED      
L0004: RFALSE          

Routine R1052, 1 local

       JE              L00,#02 [FALSE] L0002
       JZ              Gc9 [FALSE] L0001
       CALL_2N         R1025 (#26)
L0001: STORE           Gc9,#01
       JUMP            L0003
L0002: CALL_VN         R1037 (#01,L00,#00)
L0003: RTRUE           

Routine R1053, 1 local

       CALL_VN         R1037 (#02,L00,#00)
       RTRUE           

Routine R1054, 1 local

       CALL_VN         R1037 (#05,L00,#00)
       RTRUE           

Routine R1055, 1 local

       CALL_VN         R1037 (#06,L00,#00)
       RTRUE           

Routine R1056, 2 locals

       CALL_VN         R1037 (#07,L01,L00)
       RTRUE           

Routine R1057, 2 locals

       CALL_VN         R1037 (#03,L00,L01)
       RTRUE           

Routine R1058, 2 locals

       CALL_VN         R1037 (#04,L00,L01)
       RTRUE           

Routine R1059, 2 locals

       JL              L00,#00 [TRUE] L0001
       JL              L00,#0173 [FALSE] L0001
       LOADW           #445d,L00 -> -(SP)
       PRINT_PADDR     (SP)+
       JUMP            L0420
L0001: JE              L00,#3a70 [FALSE] L0002
       PRINT           "start in the correct scenes rule"
       RTRUE           
L0002: JE              L00,#3a72 [FALSE] L0003
       PRINT           "when play begins stage rule"
       RTRUE           
L0003: JE              L00,#3a74 [FALSE] L0004
       PRINT           "fix baseline scoring rule"
       RTRUE           
L0004: JE              L00,#3a76 [FALSE] L0005
       PRINT           "display banner rule"
       RTRUE           
L0005: JE              L00,#3a79 [FALSE] L0006
       PRINT           "initial room description rule"
       RTRUE           
L0006: JE              L00,#3a7e [FALSE] L0007
       PRINT           "every turn stage rule"
       RTRUE           
L0007: JE              L00,#3a82 [FALSE] L0008
       PRINT           "notify score changes rule"
       RTRUE           
L0008: JE              L00,#3a85 [FALSE] L0009
       PRINT           "when play ends stage rule"
       RTRUE           
L0009: JE              L00,#3a87 [FALSE] L0010
       PRINT           "print player's obituary rule"
       RTRUE           
L0010: JE              L00,#3ab3 [FALSE] L0011
       PRINT_PADDR     S743
       RTRUE           
L0011: JE              L00,#3aab [FALSE] L0012
       PRINT_PADDR     S744
       RTRUE           
L0012: JE              L00,#3ab6 [FALSE] L0013
       PRINT           "before stage rule"
       RTRUE           
L0013: JE              L00,#3ab9 [FALSE] L0014
       PRINT           "instead stage rule"
       RTRUE           
L0014: JE              L00,#3abc [FALSE] L0015
       PRINT_PADDR     S745
       RTRUE           
L0015: JE              L00,#3b1f [FALSE] L0016
       PRINT_PADDR     S746
       RTRUE           
L0016: JE              L00,#3b2a [FALSE] L0017
       PRINT           "check stage rule"
       RTRUE           
L0017: JE              L00,#3b36 [FALSE] L0018
       PRINT           "carry out stage rule"
       RTRUE           
L0018: JE              L00,#3b3b [FALSE] L0019
       PRINT           "after stage rule"
       RTRUE           
L0019: JE              L00,#3b46 [FALSE] L0020
       PRINT_PADDR     S747
       RTRUE           
L0020: JE              L00,#3b55 [FALSE] L0021
       PRINT           "report stage rule"
       RTRUE           
L0021: JE              L00,#3b6c [FALSE] L0022
       PRINT_PADDR     S748
       RTRUE           
L0022: JE              L00,#3b6f [FALSE] L0023
       PRINT_PADDR     S749
       RTRUE           
L0023: JE              L00,#3b74 [FALSE] L0024
       PRINT_PADDR     S750
       RTRUE           
L0024: JE              L00,#3b7b [FALSE] L0025
       PRINT_PADDR     S751
       RTRUE           
L0025: JE              L00,#3b82 [FALSE] L0026
       PRINT           "can't act in the dark rule"
       RTRUE           
L0026: JE              L00,#3c99 [FALSE] L0027
       PRINT_PADDR     S752
       RTRUE           
L0027: JE              L00,#3a91 [FALSE] L0028
       PRINT           "scene description text rule"
       RTRUE           
L0028: JE              L00,#3ca9 [FALSE] L0029
       PRINT           "make named things mentioned rule"
       RTRUE           
L0029: JE              L00,#3cb9 [FALSE] L0030
       PRINT_PADDR     S753
       RTRUE           
L0030: JE              L00,#3cd0 [FALSE] L0031
       PRINT_PADDR     S754
       RTRUE           
L0031: JE              L00,#3ce7 [FALSE] L0032
       PRINT_PADDR     S755
       RTRUE           
L0032: JE              L00,#3cea [FALSE] L0033
       PRINT_PADDR     S756
       RTRUE           
L0033: JE              L00,#3d07 [FALSE] L0034
       PRINT_PADDR     S757
       RTRUE           
L0034: JE              L00,#3cf7 [FALSE] L0035
       PRINT_PADDR     S758
       RTRUE           
L0035: JE              L00,#3d15 [FALSE] L0036
       PRINT           "ambient odour rule"
       RTRUE           
L0036: JE              L00,#3d1f [FALSE] L0037
       PRINT           "ambient sound rule"
       RTRUE           
L0037: JE              L00,#3d29 [FALSE] L0038
       PRINT           "block vaguely going rule"
       RTRUE           
L0038: JE              L00,#3da6 [FALSE] L0039
       PRINT           "print the final prompt rule"
       RTRUE           
L0039: JE              L00,#3d43 [FALSE] L0040
       PRINT           "print the final question rule"
       RTRUE           
L0040: JE              L00,#3dab [FALSE] L0041
       PRINT_PADDR     S759
       RTRUE           
L0041: JE              L00,#3ddc [FALSE] L0042
       PRINT_PADDR     S760
       RTRUE           
L0042: JE              L00,#3df8 [FALSE] L0043
       PRINT           "find notable locale objects rule"
       RTRUE           
L0043: JE              L00,#3dfb [FALSE] L0044
       PRINT_PADDR     S761
       RTRUE           
L0044: JE              L00,#3e12 [FALSE] L0045
       PRINT           "you-can-also-see rule"
       RTRUE           
L0045: JE              L00,#3eb9 [FALSE] L0046
       PRINT_PADDR     S762
       RTRUE           
L0046: JE              L00,#3ec3 [FALSE] L0047
       PRINT_PADDR     S763
       RTRUE           
L0047: JE              L00,#3ed6 [FALSE] L0048
       PRINT_PADDR     S764
       RTRUE           
L0048: JE              L00,#3ee9 [FALSE] L0049
       PRINT_PADDR     S765
       RTRUE           
L0049: JE              L00,#3efc [FALSE] L0050
       PRINT_PADDR     S766
       RTRUE           
L0050: JE              L00,#3f0f [FALSE] L0051
       PRINT_PADDR     S767
       RTRUE           
L0051: JE              L00,#3f2e [FALSE] L0052
       PRINT_PADDR     S768
       RTRUE           
L0052: JE              L00,#3f77 [FALSE] L0053
       PRINT_PADDR     S769
       RTRUE           
L0053: JE              L00,#3faf [FALSE] L0054
       PRINT           "print empty inventory rule"
       RTRUE           
L0054: JE              L00,#3fbb [FALSE] L0055
       PRINT           "print standard inventory rule"
       RTRUE           
L0055: JE              L00,#3fcc [FALSE] L0056
       PRINT_PADDR     S770
       RTRUE           
L0056: JE              L00,#3fd7 [FALSE] L0057
       PRINT           "can't take yourself rule"
       RTRUE           
L0057: JE              L00,#3fe3 [FALSE] L0058
       PRINT           "can't take other people rule"
       RTRUE           
L0058: JE              L00,#3ff0 [FALSE] L0059
       PRINT           "can't take component parts rule"
       RTRUE           
L0059: JE              L00,#4002 [FALSE] L0060
       PRINT_PADDR     S771
       RTRUE           
L0060: JE              L00,#4017 [FALSE] L0061
       PRINT_PADDR     S772
       RTRUE           
L0061: JE              L00,#4029 [FALSE] L0062
       PRINT_PADDR     S773
       RTRUE           
L0062: JE              L00,#4037 [FALSE] L0063
       PRINT_PADDR     S774
       RTRUE           
L0063: JE              L00,#4049 [FALSE] L0064
       PRINT           "can't take scenery rule"
       RTRUE           
L0064: JE              L00,#4056 [FALSE] L0065
       PRINT           "can only take things rule"
       RTRUE           
L0065: JE              L00,#4063 [FALSE] L0066
       PRINT_PADDR     S775
       RTRUE           
L0066: JE              L00,#4070 [FALSE] L0067
       PRINT_PADDR     S776
       RTRUE           
L0067: JE              L00,#4098 [FALSE] L0068
       PRINT_PADDR     S777
       RTRUE           
L0068: JE              L00,#40a7 [FALSE] L0069
       PRINT           "standard taking rule"
       RTRUE           
L0069: JE              L00,#40b1 [FALSE] L0070
       PRINT           "standard report taking rule"
       RTRUE           
L0070: JE              L00,#40bf [FALSE] L0071
       PRINT_PADDR     S778
       RTRUE           
L0071: JE              L00,#40cf [FALSE] L0072
       PRINT           "can't remove from people rule"
       RTRUE           
L0072: JE              L00,#40e4 [FALSE] L0073
       PRINT           "convert remove to take rule"
       RTRUE           
L0073: JE              L00,#40f1 [FALSE] L0074
       PRINT           "can't drop yourself rule"
       RTRUE           
L0074: JE              L00,#40fd [FALSE] L0075
       PRINT_PADDR     S779
       RTRUE           
L0075: JE              L00,#410c [FALSE] L0076
       PRINT           "can't drop what's not held rule"
       RTRUE           
L0076: JE              L00,#411c [FALSE] L0077
       PRINT_PADDR     S780
       RTRUE           
L0077: JE              L00,#4131 [FALSE] L0078
       PRINT_PADDR     S781
       RTRUE           
L0078: JE              L00,#4156 [FALSE] L0079
       PRINT           "standard dropping rule"
       RTRUE           
L0079: JE              L00,#4162 [FALSE] L0080
       PRINT           "standard report dropping rule"
       RTRUE           
L0080: JE              L00,#4170 [FALSE] L0081
       PRINT_PADDR     S782
       RTRUE           
L0081: JE              L00,#4181 [FALSE] L0082
       PRINT           "can't put what's not held rule"
       RTRUE           
L0082: JE              L00,#419d [FALSE] L0083
       PRINT_PADDR     S783
       RTRUE           
L0083: JE              L00,#41b0 [FALSE] L0084
       PRINT_PADDR     S784
       RTRUE           
L0084: JE              L00,#41c0 [FALSE] L0085
       PRINT_PADDR     S785
       RTRUE           
L0085: JE              L00,#41d0 [FALSE] L0086
       PRINT_PADDR     S786
       RTRUE           
L0086: JE              L00,#41e7 [FALSE] L0087
       PRINT_PADDR     S787
       RTRUE           
L0087: JE              L00,#41fb [FALSE] L0088
       PRINT           "standard putting rule"
       RTRUE           
L0088: JE              L00,#4208 [FALSE] L0089
       PRINT           "concise report putting rule"
       RTRUE           
L0089: JE              L00,#4218 [FALSE] L0090
       PRINT           "standard report putting rule"
       RTRUE           
L0090: JE              L00,#4228 [FALSE] L0091
       PRINT_PADDR     S788
       RTRUE           
L0091: JE              L00,#4239 [FALSE] L0092
       PRINT_PADDR     S789
       RTRUE           
L0092: JE              L00,#4253 [FALSE] L0093
       PRINT_PADDR     S790
       RTRUE           
L0093: JE              L00,#4266 [FALSE] L0094
       PRINT_PADDR     S791
       RTRUE           
L0094: JE              L00,#4278 [FALSE] L0095
       PRINT_PADDR     S792
       RTRUE           
L0095: JE              L00,#4288 [FALSE] L0096
       PRINT_PADDR     S793
       RTRUE           
L0096: JE              L00,#429f [FALSE] L0097
       PRINT_PADDR     S794
       RTRUE           
L0097: JE              L00,#42b3 [FALSE] L0098
       PRINT           "standard inserting rule"
       RTRUE           
L0098: JE              L00,#42c0 [FALSE] L0099
       PRINT           "concise report inserting rule"
       RTRUE           
L0099: JE              L00,#42d0 [FALSE] L0100
       PRINT           "standard report inserting rule"
       RTRUE           
L0100: JE              L00,#42e0 [FALSE] L0101
       PRINT           "can't eat unless edible rule"
       RTRUE           
L0101: JE              L00,#42f0 [FALSE] L0102
       PRINT_PADDR     S795
       RTRUE           
L0102: JE              L00,#4302 [FALSE] L0103
       PRINT           "standard eating rule"
       RTRUE           
L0103: JE              L00,#430c [FALSE] L0104
       PRINT           "standard report eating rule"
       RTRUE           
L0104: JE              L00,#3abe [FALSE] L0105
       PRINT_PADDR     S796
       RTRUE           
L0105: JE              L00,#431a [FALSE] L0106
       PRINT           "stand up before going rule"
       RTRUE           
L0106: JE              L00,#4331 [FALSE] L0107
       PRINT_PADDR     S797
       RTRUE           
L0107: JE              L00,#4346 [FALSE] L0108
       PRINT_PADDR     S798
       RTRUE           
L0108: JE              L00,#435f [FALSE] L0109
       PRINT_PADDR     S799
       RTRUE           
L0109: JE              L00,#4386 [FALSE] L0110
       PRINT           "determine map connection rule"
       RTRUE           
L0110: JE              L00,#43aa [FALSE] L0111
       PRINT           "can't go that way rule"
       RTRUE           
L0111: JE              L00,#43c7 [FALSE] L0112
       PRINT           "move player and vehicle rule"
       RTRUE           
L0112: JE              L00,#43e2 [FALSE] L0113
       PRINT           "move floating objects rule"
       RTRUE           
L0113: JE              L00,#43ec [FALSE] L0114
       PRINT           "check light in new location rule"
       RTRUE           
L0114: JE              L00,#43f6 [FALSE] L0115
       PRINT           "describe room gone into rule"
       RTRUE           
L0115: JE              L00,#3d34 [FALSE] L0116
       PRINT           "find what to enter rule"
       RTRUE           
L0116: JE              L00,#44b2 [FALSE] L0117
       PRINT           "convert enter door into go rule"
       RTRUE           
L0117: JE              L00,#44bf [FALSE] L0118
       PRINT_PADDR     S800
       RTRUE           
L0118: JE              L00,#44cc [FALSE] L0119
       PRINT_PADDR     S801
       RTRUE           
L0119: JE              L00,#44da [FALSE] L0120
       PRINT_PADDR     S802
       RTRUE           
L0120: JE              L00,#44e7 [FALSE] L0121
       PRINT_PADDR     S803
       RTRUE           
L0121: JE              L00,#44f7 [FALSE] L0122
       PRINT_PADDR     S804
       RTRUE           
L0122: JE              L00,#4505 [FALSE] L0123
       PRINT_PADDR     S805
       RTRUE           
L0123: JE              L00,#4542 [FALSE] L0124
       PRINT           "standard entering rule"
       RTRUE           
L0124: JE              L00,#454b [FALSE] L0125
       PRINT           "standard report entering rule"
       RTRUE           
L0125: JE              L00,#455d [FALSE] L0126
       PRINT_PADDR     S806
       RTRUE           
L0126: JE              L00,#4568 [FALSE] L0127
       PRINT           "convert exit into go out rule"
       RTRUE           
L0127: JE              L00,#457d [FALSE] L0128
       PRINT_PADDR     S807
       RTRUE           
L0128: JE              L00,#458e [FALSE] L0129
       PRINT_PADDR     S808
       RTRUE           
L0129: JE              L00,#45a3 [FALSE] L0130
       PRINT           "convert exit into get off rule"
       RTRUE           
L0130: JE              L00,#45b4 [FALSE] L0131
       PRINT           "standard exiting rule"
       RTRUE           
L0131: JE              L00,#45c2 [FALSE] L0132
       PRINT           "standard report exiting rule"
       RTRUE           
L0132: JE              L00,#45d7 [FALSE] L0133
       PRINT           "describe room emerged into rule"
       RTRUE           
L0133: JE              L00,#45e1 [FALSE] L0134
       PRINT           "can't get off things rule"
       RTRUE           
L0134: JE              L00,#45f1 [FALSE] L0135
       PRINT           "standard getting off rule"
       RTRUE           
L0135: JE              L00,#45fc [FALSE] L0136
       PRINT           "standard report getting off rule"
       RTRUE           
L0136: JE              L00,#4609 [FALSE] L0137
       PRINT           "describe room stood up into rule"
       RTRUE           
L0137: JE              L00,#3afc [FALSE] L0138
       PRINT_PADDR     S809
       RTRUE           
L0138: JE              L00,#4613 [FALSE] L0139
       PRINT           "room description heading rule"
       RTRUE           
L0139: JE              L00,#464c [FALSE] L0140
       PRINT           "room description body text rule"
       RTRUE           
L0140: JE              L00,#4685 [FALSE] L0141
       PRINT_PADDR     S810
       RTRUE           
L0141: JE              L00,#46a9 [FALSE] L0142
       PRINT           "check new arrival rule"
       RTRUE           
L0142: JE              L00,#46b8 [FALSE] L0143
       PRINT           "other people looking rule"
       RTRUE           
L0143: JE              L00,#46c3 [FALSE] L0144
       PRINT           "standard examining rule"
       RTRUE           
L0144: JE              L00,#46de [FALSE] L0145
       PRINT           "examine directions rule"
       RTRUE           
L0145: JE              L00,#46ee [FALSE] L0146
       PRINT           "examine containers rule"
       RTRUE           
L0146: JE              L00,#4717 [FALSE] L0147
       PRINT           "examine supporters rule"
       RTRUE           
L0147: JE              L00,#472b [FALSE] L0148
       PRINT           "examine devices rule"
       RTRUE           
L0148: JE              L00,#473b [FALSE] L0149
       PRINT           "examine undescribed things rule"
       RTRUE           
L0149: JE              L00,#474d [FALSE] L0150
       PRINT_PADDR     S811
       RTRUE           
L0150: JE              L00,#4758 [FALSE] L0151
       PRINT           "standard looking under rule"
       RTRUE           
L0151: JE              L00,#4762 [FALSE] L0152
       PRINT_PADDR     S812
       RTRUE           
L0152: JE              L00,#476d [FALSE] L0153
       PRINT_PADDR     S813
       RTRUE           
L0153: JE              L00,#477d [FALSE] L0154
       PRINT_PADDR     S814
       RTRUE           
L0154: JE              L00,#478f [FALSE] L0155
       PRINT           "standard search containers rule"
       RTRUE           
L0155: JE              L00,#47a0 [FALSE] L0156
       PRINT           "standard search supporters rule"
       RTRUE           
L0156: JE              L00,#47b1 [FALSE] L0157
       PRINT_PADDR     S815
       RTRUE           
L0157: JE              L00,#47bc [FALSE] L0158
       PRINT           "block consulting rule"
       RTRUE           
L0158: JE              L00,#47cc [FALSE] L0159
       PRINT           "can't lock without a lock rule"
       RTRUE           
L0159: JE              L00,#47de [FALSE] L0160
       PRINT_PADDR     S816
       RTRUE           
L0160: JE              L00,#47ee [FALSE] L0161
       PRINT           "can't lock what's open rule"
       RTRUE           
L0161: JE              L00,#47fe [FALSE] L0162
       PRINT_PADDR     S817
       RTRUE           
L0162: JE              L00,#4814 [FALSE] L0163
       PRINT           "standard locking rule"
       RTRUE           
L0163: JE              L00,#4820 [FALSE] L0164
       PRINT           "standard report locking rule"
       RTRUE           
L0164: JE              L00,#4833 [FALSE] L0165
       PRINT           "can't unlock without a lock rule"
       RTRUE           
L0165: JE              L00,#4845 [FALSE] L0166
       PRINT_PADDR     S818
       RTRUE           
L0166: JE              L00,#4855 [FALSE] L0167
       PRINT_PADDR     S819
       RTRUE           
L0167: JE              L00,#486b [FALSE] L0168
       PRINT           "standard unlocking rule"
       RTRUE           
L0168: JE              L00,#4877 [FALSE] L0169
       PRINT           "standard report unlocking rule"
       RTRUE           
L0169: JE              L00,#488a [FALSE] L0170
       PRINT_PADDR     S820
       RTRUE           
L0170: JE              L00,#4897 [FALSE] L0171
       PRINT_PADDR     S821
       RTRUE           
L0171: JE              L00,#48a4 [FALSE] L0172
       PRINT           "standard switching on rule"
       RTRUE           
L0172: JE              L00,#48ae [FALSE] L0173
       PRINT_PADDR     S822
       RTRUE           
L0173: JE              L00,#48bc [FALSE] L0174
       PRINT_PADDR     S823
       RTRUE           
L0174: JE              L00,#48c9 [FALSE] L0175
       PRINT_PADDR     S824
       RTRUE           
L0175: JE              L00,#48d6 [FALSE] L0176
       PRINT           "standard switching off rule"
       RTRUE           
L0176: JE              L00,#48e0 [FALSE] L0177
       PRINT_PADDR     S825
       RTRUE           
L0177: JE              L00,#48ee [FALSE] L0178
       PRINT           "can't open unless openable rule"
       RTRUE           
L0178: JE              L00,#48fd [FALSE] L0179
       PRINT           "can't open what's locked rule"
       RTRUE           
L0179: JE              L00,#490d [FALSE] L0180
       PRINT_PADDR     S826
       RTRUE           
L0180: JE              L00,#491a [FALSE] L0181
       PRINT           "standard opening rule"
       RTRUE           
L0181: JE              L00,#4924 [FALSE] L0182
       PRINT_PADDR     S827
       RTRUE           
L0182: JE              L00,#4939 [FALSE] L0183
       PRINT           "standard report opening rule"
       RTRUE           
L0183: JE              L00,#494c [FALSE] L0184
       PRINT           "can't close unless openable rule"
       RTRUE           
L0184: JE              L00,#495b [FALSE] L0185
       PRINT_PADDR     S828
       RTRUE           
L0185: JE              L00,#4968 [FALSE] L0186
       PRINT           "standard closing rule"
       RTRUE           
L0186: JE              L00,#4972 [FALSE] L0187
       PRINT           "standard report closing rule"
       RTRUE           
L0187: JE              L00,#4985 [FALSE] L0188
       PRINT_PADDR     S829
       RTRUE           
L0188: JE              L00,#4995 [FALSE] L0189
       PRINT           "can't wear what's not held rule"
       RTRUE           
L0189: JE              L00,#49a2 [FALSE] L0190
       PRINT_PADDR     S830
       RTRUE           
L0190: JE              L00,#49af [FALSE] L0191
       PRINT           "standard wearing rule"
       RTRUE           
L0191: JE              L00,#49b9 [FALSE] L0192
       PRINT           "standard report wearing rule"
       RTRUE           
L0192: JE              L00,#49c7 [FALSE] L0193
       PRINT_PADDR     S831
       RTRUE           
L0193: JE              L00,#49d4 [FALSE] L0194
       PRINT           "standard taking off rule"
       RTRUE           
L0194: JE              L00,#49de [FALSE] L0195
       PRINT           "standard report taking off rule"
       RTRUE           
L0195: JE              L00,#49ec [FALSE] L0196
       PRINT_PADDR     S832
       RTRUE           
L0196: JE              L00,#49fc [FALSE] L0197
       PRINT           "can't give to yourself rule"
       RTRUE           
L0197: JE              L00,#4a0a [FALSE] L0198
       PRINT           "can't give to a non-person rule"
       RTRUE           
L0198: JE              L00,#4a1a [FALSE] L0199
       PRINT_PADDR     S833
       RTRUE           
L0199: JE              L00,#4a31 [FALSE] L0200
       PRINT           "block giving rule"
       RTRUE           
L0200: JE              L00,#4a3e [FALSE] L0201
       PRINT           "standard giving rule"
       RTRUE           
L0201: JE              L00,#4a4b [FALSE] L0202
       PRINT           "standard report giving rule"
       RTRUE           
L0202: JE              L00,#4a5f [FALSE] L0203
       PRINT_PADDR     S834
       RTRUE           
L0203: JE              L00,#4a6f [FALSE] L0204
       PRINT_PADDR     S835
       RTRUE           
L0204: JE              L00,#4a7d [FALSE] L0205
       PRINT           "block showing rule"
       RTRUE           
L0205: JE              L00,#4a8a [FALSE] L0206
       PRINT           "block waking rule"
       RTRUE           
L0206: JE              L00,#4a94 [FALSE] L0207
       PRINT_PADDR     S836
       RTRUE           
L0207: JE              L00,#4aab [FALSE] L0208
       PRINT_PADDR     S837
       RTRUE           
L0208: JE              L00,#4abb [FALSE] L0209
       PRINT           "block throwing at rule"
       RTRUE           
L0209: JE              L00,#4ac8 [FALSE] L0210
       PRINT           "block attacking rule"
       RTRUE           
L0210: JE              L00,#4ad2 [FALSE] L0211
       PRINT           "kissing yourself rule"
       RTRUE           
L0211: JE              L00,#4ade [FALSE] L0212
       PRINT           "block kissing rule"
       RTRUE           
L0212: JE              L00,#4ae8 [FALSE] L0213
       PRINT           "block answering rule"
       RTRUE           
L0213: JE              L00,#4af5 [FALSE] L0214
       PRINT           "telling yourself rule"
       RTRUE           
L0214: JE              L00,#4b03 [FALSE] L0215
       PRINT           "block telling rule"
       RTRUE           
L0215: JE              L00,#4b10 [FALSE] L0216
       PRINT           "block asking rule"
       RTRUE           
L0216: JE              L00,#4b1d [FALSE] L0217
       PRINT_PADDR     S838
       RTRUE           
L0217: JE              L00,#4b2d [FALSE] L0218
       PRINT_PADDR     S839
       RTRUE           
L0218: JE              L00,#4b3a [FALSE] L0219
       PRINT           "standard report waiting rule"
       RTRUE           
L0219: JE              L00,#4b48 [FALSE] L0220
       PRINT           "report touching yourself rule"
       RTRUE           
L0220: JE              L00,#4b57 [FALSE] L0221
       PRINT_PADDR     S840
       RTRUE           
L0221: JE              L00,#4b6b [FALSE] L0222
       PRINT           "report touching things rule"
       RTRUE           
L0222: JE              L00,#4b79 [FALSE] L0223
       PRINT           "can't wave what's not held rule"
       RTRUE           
L0223: JE              L00,#4b87 [FALSE] L0224
       PRINT           "report waving things rule"
       RTRUE           
L0224: JE              L00,#4b95 [FALSE] L0225
       PRINT_PADDR     S841
       RTRUE           
L0225: JE              L00,#4ba3 [FALSE] L0226
       PRINT           "can't pull scenery rule"
       RTRUE           
L0226: JE              L00,#4bb1 [FALSE] L0227
       PRINT           "can't pull people rule"
       RTRUE           
L0227: JE              L00,#4bbf [FALSE] L0228
       PRINT           "report pulling rule"
       RTRUE           
L0228: JE              L00,#4bcd [FALSE] L0229
       PRINT_PADDR     S842
       RTRUE           
L0229: JE              L00,#4bdd [FALSE] L0230
       PRINT           "can't push scenery rule"
       RTRUE           
L0230: JE              L00,#4bed [FALSE] L0231
       PRINT           "can't push people rule"
       RTRUE           
L0231: JE              L00,#4bfd [FALSE] L0232
       PRINT           "report pushing rule"
       RTRUE           
L0232: JE              L00,#4c0e [FALSE] L0233
       PRINT_PADDR     S843
       RTRUE           
L0233: JE              L00,#4c1c [FALSE] L0234
       PRINT           "can't turn scenery rule"
       RTRUE           
L0234: JE              L00,#4c2a [FALSE] L0235
       PRINT           "can't turn people rule"
       RTRUE           
L0235: JE              L00,#4c38 [FALSE] L0236
       PRINT           "report turning rule"
       RTRUE           
L0236: JE              L00,#4c46 [FALSE] L0237
       PRINT_PADDR     S844
       RTRUE           
L0237: JE              L00,#4c56 [FALSE] L0238
       PRINT_PADDR     S845
       RTRUE           
L0238: JE              L00,#4c66 [FALSE] L0239
       PRINT           "can't push vertically rule"
       RTRUE           
L0239: JE              L00,#4c76 [FALSE] L0240
       PRINT_PADDR     S846
       RTRUE           
L0240: JE              L00,#4c82 [FALSE] L0241
       PRINT           "block pushing in directions rule"
       RTRUE           
L0241: JE              L00,#4c8f [FALSE] L0242
       PRINT_PADDR     S847
       RTRUE           
L0242: JE              L00,#4c9d [FALSE] L0243
       PRINT           "report squeezing rule"
       RTRUE           
L0243: JE              L00,#4cab [FALSE] L0244
       PRINT           "block saying yes rule"
       RTRUE           
L0244: JE              L00,#4cb6 [FALSE] L0245
       PRINT           "block saying no rule"
       RTRUE           
L0245: JE              L00,#4cc1 [FALSE] L0246
       PRINT           "block burning rule"
       RTRUE           
L0246: JE              L00,#4ccc [FALSE] L0247
       PRINT           "block waking up rule"
       RTRUE           
L0247: JE              L00,#4cd7 [FALSE] L0248
       PRINT           "block thinking rule"
       RTRUE           
L0248: JE              L00,#4ce2 [FALSE] L0249
       PRINT           "block smelling rule"
       RTRUE           
L0249: JE              L00,#4ced [FALSE] L0250
       PRINT           "block listening rule"
       RTRUE           
L0250: JE              L00,#4cf8 [FALSE] L0251
       PRINT           "block tasting rule"
       RTRUE           
L0251: JE              L00,#4d03 [FALSE] L0252
       PRINT           "block cutting rule"
       RTRUE           
L0252: JE              L00,#4d0e [FALSE] L0253
       PRINT           "block jumping rule"
       RTRUE           
L0253: JE              L00,#4d19 [FALSE] L0254
       PRINT           "block tying rule"
       RTRUE           
L0254: JE              L00,#4d26 [FALSE] L0255
       PRINT           "block drinking rule"
       RTRUE           
L0255: JE              L00,#4d31 [FALSE] L0256
       PRINT           "block saying sorry rule"
       RTRUE           
L0256: JE              L00,#4d3c [FALSE] L0257
       PRINT           "block swearing obscenely rule"
       RTRUE           
L0257: JE              L00,#4d47 [FALSE] L0258
       PRINT           "block swearing mildly rule"
       RTRUE           
L0258: JE              L00,#4d52 [FALSE] L0259
       PRINT           "block swinging rule"
       RTRUE           
L0259: JE              L00,#4d5d [FALSE] L0260
       PRINT           "block rubbing rule"
       RTRUE           
L0260: JE              L00,#4d68 [FALSE] L0261
       PRINT           "block setting it to rule"
       RTRUE           
L0261: JE              L00,#4d75 [FALSE] L0262
       PRINT           "block waving hands rule"
       RTRUE           
L0262: JE              L00,#4d80 [FALSE] L0263
       PRINT           "block buying rule"
       RTRUE           
L0263: JE              L00,#4d8b [FALSE] L0264
       PRINT           "block singing rule"
       RTRUE           
L0264: JE              L00,#4d96 [FALSE] L0265
       PRINT           "block climbing rule"
       RTRUE           
L0265: JE              L00,#4da1 [FALSE] L0266
       PRINT           "block sleeping rule"
       RTRUE           
L0266: JE              L00,#7241 [FALSE] L0267
       PRINT           "little-used do nothing rule"
       RTRUE           
L0267: JE              L00,#32db [FALSE] L0268
       PRINT           "virtual machine startup rule"
       RTRUE           
L0268: JE              L00,#32e6 [FALSE] L0269
       PRINT           "initialise memory rule"
       RTRUE           
L0269: JE              L00,#32f1 [FALSE] L0270
       PRINT_PADDR     S848
       RTRUE           
L0270: JE              L00,#727a [FALSE] L0271
       PRINT_PADDR     S849
       RTRUE           
L0271: JE              L00,#32f8 [FALSE] L0272
       PRINT_PADDR     S850
       RTRUE           
L0272: JE              L00,#2283 [FALSE] L0273
       PRINT           "adjust light rule"
       RTRUE           
L0273: JE              L00,#339b [FALSE] L0274
       PRINT           "advance time rule"
       RTRUE           
L0274: JE              L00,#3322 [FALSE] L0275
       PRINT           "generate action rule"
       RTRUE           
L0275: JE              L00,#33a5 [FALSE] L0276
       PRINT           "note object acquisitions rule"
       RTRUE           
L0276: JE              L00,#3310 [FALSE] L0277
       PRINT           "parse command rule"
       RTRUE           
L0277: JE              L00,#3364 [FALSE] L0278
       PRINT           "timed events rule"
       RTRUE           
L0278: JE              L00,#33c6 [FALSE] L0279
       PRINT           "resurrect player if asked rule"
       RTRUE           
L0279: JE              L00,#33cb [FALSE] L0280
       PRINT           "ask the final question rule"
       RTRUE           
L0280: JE              L00,#5188 [FALSE] L0281
       PRINT           "scene change machinery rule"
       RTRUE           
L0281: JE              L00,#5322 [FALSE] L0282
       PRINT           "basic accessibility rule"
       RTRUE           
L0282: JE              L00,#5311 [FALSE] L0283
       PRINT           "basic visibility rule"
       RTRUE           
L0283: JE              L00,#5352 [FALSE] L0284
       PRINT           "carrying requirements rule"
       RTRUE           
L0284: JE              L00,#5379 [FALSE] L0285
       PRINT_PADDR     S851
       RTRUE           
L0285: JE              L00,#5386 [FALSE] L0286
       PRINT           "carry out requested actions rule"
       RTRUE           
L0286: JE              L00,#17f9 [FALSE] L0287
       PRINT_PADDR     S852
       RTRUE           
L0287: JE              L00,#53a7 [FALSE] L0288
       PRINT_PADDR     S853
       RTRUE           
L0288: JE              L00,#22df [FALSE] L0289
       PRINT           "access through barriers rule"
       RTRUE           
L0289: JE              L00,#2323 [FALSE] L0290
       PRINT_PADDR     S854
       RTRUE           
L0290: JE              L00,#232f [FALSE] L0291
       PRINT           "can't reach inside rooms rule"
       RTRUE           
L0291: JE              L00,#2329 [FALSE] L0292
       PRINT_PADDR     S855
       RTRUE           
L0292: JE              L00,"sweep" [FALSE] L0293
       PRINT           "standard name printing rule"
       RTRUE           
L0293: JE              L00,#242c [FALSE] L0294
       PRINT           "standard contents listing rule"
       RTRUE           
L0294: JE              L00,#1689 [FALSE] L0295
       PRINT           "enable Glulx acceleration rule"
       RTRUE           
L0295: JE              L00,#33df [FALSE] L0296
       PRINT           "print obituary headline rule"
       RTRUE           
L0296: JE              L00,#33fd [FALSE] L0297
       PRINT           "print final score rule"
       RTRUE           
L0297: JE              L00,#33ff [FALSE] L0298
       PRINT           "display final status line rule"
       RTRUE           
L0298: JE              L00,#33d7 [FALSE] L0299
       PRINT           "immediately restart the VM rule"
       RTRUE           
L0299: JE              L00,#33d8 [FALSE] L0300
       PRINT_PADDR     S856
       RTRUE           
L0300: JE              L00,#33da [FALSE] L0301
       PRINT           "immediately quit rule"
       RTRUE           
L0301: JE              L00,#33db [FALSE] L0302
       PRINT           "immediately undo rule"
       RTRUE           
L0302: JE              L00,#33d0 [FALSE] L0303
       PRINT           "read the final answer rule"
       RTRUE           
L0303: JE              L00,#1782 [FALSE] L0304
       PRINT           "quit the game rule"
       RTRUE           
L0304: JE              L00,#1795 [FALSE] L0305
       PRINT           "save the game rule"
       RTRUE           
L0305: JE              L00,#178e [FALSE] L0306
       PRINT           "restore the game rule"
       RTRUE           
L0306: JE              L00,#1787 [FALSE] L0307
       PRINT           "restart the game rule"
       RTRUE           
L0307: JE              L00,#17a2 [FALSE] L0308
       PRINT           "verify the story file rule"
       RTRUE           
L0308: JE              L00,#17a9 [FALSE] L0309
       PRINT_PADDR     S857
       RTRUE           
L0309: JE              L00,#17b8 [FALSE] L0310
       PRINT_PADDR     S858
       RTRUE           
L0310: JE              L00,#17c7 [FALSE] L0311
       PRINT_PADDR     S859
       RTRUE           
L0311: JE              L00,#55a7 [FALSE] L0312
       PRINT           "announce the score rule"
       RTRUE           
L0312: JE              L00,#55c5 [FALSE] L0313
       PRINT_PADDR     S860
       RTRUE           
L0313: JE              L00,#55c8 [FALSE] L0314
       PRINT_PADDR     S861
       RTRUE           
L0314: JE              L00,#55be [FALSE] L0315
       PRINT_PADDR     S862
       RTRUE           
L0315: JE              L00,"shed" [FALSE] L0316
       PRINT_PADDR     S863
       RTRUE           
L0316: JE              L00,#55b7 [FALSE] L0317
       PRINT_PADDR     S864
       RTRUE           
L0317: JE              L00,#55ba [FALSE] L0318
       PRINT_PADDR     S865
       RTRUE           
L0318: JE              L00,#55ab [FALSE] L0319
       PRINT_PADDR     S866
       RTRUE           
L0319: JE              L00,#55ae [FALSE] L0320
       PRINT_PADDR     S867
       RTRUE           
L0320: JE              L00,#55b1 [FALSE] L0321
       PRINT_PADDR     S868
       RTRUE           
L0321: JE              L00,#55b4 [FALSE] L0322
       PRINT_PADDR     S869
       RTRUE           
L0322: JE              L00,#55cc [FALSE] L0323
       PRINT_PADDR     S870
       RTRUE           
L0323: JE              L00,#3a7c [FALSE] L0324
       PRINT           "A first turn sequence rule"
       RTRUE           
L0324: JE              L00,#3a80 [FALSE] L0325
       PRINT           "A last turn sequence rule"
       RTRUE           
L0325: JE              L00,#3b6a [FALSE] L0326
       PRINT_PADDR     S871
       RTRUE           
L0326: JE              L00,#3b11 [FALSE] L0327
       PRINT_PADDR     S872
       RTRUE           
L0327: JE              L00,#3c85 [FALSE] L0328
       PRINT_PADDR     S873
       RTRUE           
L0328: JE              L00,#3b85 [FALSE] L0329
       PRINT_PADDR     S874
       RTRUE           
L0329: JE              L00,#3b9c [FALSE] L0330
       PRINT_PADDR     S875
       RTRUE           
L0330: JE              L00,#4dac [FALSE] L0331
       PRINT           "Check talking to"
       RTRUE           
L0331: JE              L00,#3a89 [FALSE] L0332
       PRINT           "When play begins"
       RTRUE           
L0332: JE              L00,#3a8d [FALSE] L0333
       PRINT           "When play ends"
       RTRUE           
L0333: JE              L00,#3c2a [FALSE] L0334
       PRINT_PADDR     S876
       RTRUE           
L0334: JE              L00,#3c3a [FALSE] L0335
       PRINT           "Instead of opening your locker"
       RTRUE           
L0335: JE              L00,#3c4c [FALSE] L0336
       PRINT           "Instead of using the hand mirror"
       RTRUE           
L0336: JE              L00,#3bb2 [FALSE] L0337
       PRINT_PADDR     S877
       RTRUE           
L0337: JE              L00,#3c6d [FALSE] L0338
       PRINT_PADDR     S878
       RTRUE           
L0338: JE              L00,#3c5d [FALSE] L0339
       PRINT           "Instead of talking to Quin"
       RTRUE           
L0339: JE              L00,#3bde [FALSE] L0340
       PRINT_PADDR     S879
       RTRUE           
L0340: JE              L00,#3bf1 [FALSE] L0341
       PRINT_PADDR     S880
       RTRUE           
L0341: JE              L00,#3c04 [FALSE] L0342
       PRINT_PADDR     S881
       RTRUE           
L0342: JE              L00,#3c17 [FALSE] L0343
       PRINT_PADDR     S882
       RTRUE           
L0343: JE              L00,#3bce [FALSE] L0344
       PRINT_PADDR     S883
       RTRUE           
L0344: JE              L00,#3a70 [FALSE] L0345
       PRINT           "start in the correct scenes rule"
       RTRUE           
L0345: JE              L00,#32f8 [FALSE] L0346
       PRINT_PADDR     S884
       RTRUE           
L0346: JE              L00,#727a [FALSE] L0347
       PRINT_PADDR     S885
       RTRUE           
L0347: JE              L00,#32f1 [FALSE] L0348
       PRINT_PADDR     S886
       RTRUE           
L0348: JE              L00,#32db [FALSE] L0349
       PRINT           "virtual machine startup rule"
       RTRUE           
L0349: JE              L00,#32e6 [FALSE] L0350
       PRINT           "initialise memory rule"
       RTRUE           
L0350: JE              L00,#3a72 [FALSE] L0351
       PRINT           "when play begins stage rule"
       RTRUE           
L0351: JE              L00,#3a74 [FALSE] L0352
       PRINT           "fix baseline scoring rule"
       RTRUE           
L0352: JE              L00,#3a76 [FALSE] L0353
       PRINT           "display banner rule"
       RTRUE           
L0353: JE              L00,#3a79 [FALSE] L0354
       PRINT           "initial room description rule"
       RTRUE           
L0354: JE              L00,#3322 [FALSE] L0355
       PRINT           "generate action rule"
       RTRUE           
L0355: JE              L00,#3310 [FALSE] L0356
       PRINT           "parse command rule"
       RTRUE           
L0356: JE              L00,#3364 [FALSE] L0357
       PRINT           "timed events rule"
       RTRUE           
L0357: JE              L00,#339b [FALSE] L0358
       PRINT           "advance time rule"
       RTRUE           
L0358: JE              L00,#727a [FALSE] L0359
       PRINT_PADDR     S887
       RTRUE           
L0359: JE              L00,#2283 [FALSE] L0360
       PRINT           "adjust light rule"
       RTRUE           
L0360: JE              L00,#33a5 [FALSE] L0361
       PRINT           "note object acquisitions rule"
       RTRUE           
L0361: JE              L00,#3a82 [FALSE] L0362
       PRINT           "notify score changes rule"
       RTRUE           
L0362: JE              L00,#3a85 [FALSE] L0363
       PRINT           "when play ends stage rule"
       RTRUE           
L0363: JE              L00,#33c6 [FALSE] L0364
       PRINT           "resurrect player if asked rule"
       RTRUE           
L0364: JE              L00,#3a87 [FALSE] L0365
       PRINT           "print player's obituary rule"
       RTRUE           
L0365: JE              L00,#33cb [FALSE] L0366
       PRINT           "ask the final question rule"
       RTRUE           
L0366: JE              L00,#5188 [FALSE] L0367
       PRINT           "scene change machinery rule"
       RTRUE           
L0367: JE              L00,#3ab6 [FALSE] L0368
       PRINT           "before stage rule"
       RTRUE           
L0368: JE              L00,#3ab3 [FALSE] L0369
       PRINT_PADDR     S888
       RTRUE           
L0369: JE              L00,#3aab [FALSE] L0370
       PRINT_PADDR     S889
       RTRUE           
L0370: JE              L00,#5311 [FALSE] L0371
       PRINT           "basic visibility rule"
       RTRUE           
L0371: JE              L00,#5322 [FALSE] L0372
       PRINT           "basic accessibility rule"
       RTRUE           
L0372: JE              L00,#5352 [FALSE] L0373
       PRINT           "carrying requirements rule"
       RTRUE           
L0373: JE              L00,#3ab9 [FALSE] L0374
       PRINT           "instead stage rule"
       RTRUE           
L0374: JE              L00,#5379 [FALSE] L0375
       PRINT_PADDR     S890
       RTRUE           
L0375: JE              L00,#5386 [FALSE] L0376
       PRINT           "carry out requested actions rule"
       RTRUE           
L0376: JE              L00,#17f9 [FALSE] L0377
       PRINT_PADDR     S891
       RTRUE           
L0377: JE              L00,#3abc [FALSE] L0378
       PRINT_PADDR     S892
       RTRUE           
L0378: JE              L00,#53a7 [FALSE] L0379
       PRINT_PADDR     S893
       RTRUE           
L0379: JE              L00,#22df [FALSE] L0380
       PRINT           "access through barriers rule"
       RTRUE           
L0380: JE              L00,#232f [FALSE] L0381
       PRINT           "can't reach inside rooms rule"
       RTRUE           
L0381: JE              L00,#2323 [FALSE] L0382
       PRINT_PADDR     S894
       RTRUE           
L0382: JE              L00,#2329 [FALSE] L0383
       PRINT_PADDR     S895
       RTRUE           
L0383: JE              L00,#3b82 [FALSE] L0384
       PRINT           "can't act in the dark rule"
       RTRUE           
L0384: JE              L00,"sweep" [FALSE] L0385
       PRINT           "standard name printing rule"
       RTRUE           
L0385: JE              L00,#3cb9 [FALSE] L0386
       PRINT_PADDR     S896
       RTRUE           
L0386: JE              L00,#3cd0 [FALSE] L0387
       PRINT_PADDR     S897
       RTRUE           
L0387: JE              L00,#242c [FALSE] L0388
       PRINT           "standard contents listing rule"
       RTRUE           
L0388: JE              L00,#3ce7 [FALSE] L0389
       PRINT_PADDR     S898
       RTRUE           
L0389: JE              L00,#1689 [FALSE] L0390
       PRINT           "enable Glulx acceleration rule"
       RTRUE           
L0390: JE              L00,#33df [FALSE] L0391
       PRINT           "print obituary headline rule"
       RTRUE           
L0391: JE              L00,#33fd [FALSE] L0392
       PRINT           "print final score rule"
       RTRUE           
L0392: JE              L00,#33ff [FALSE] L0393
       PRINT           "display final status line rule"
       RTRUE           
L0393: JE              L00,#3d43 [FALSE] L0394
       PRINT           "print the final question rule"
       RTRUE           
L0394: JE              L00,#3da6 [FALSE] L0395
       PRINT           "print the final prompt rule"
       RTRUE           
L0395: JE              L00,#33d0 [FALSE] L0396
       PRINT           "read the final answer rule"
       RTRUE           
L0396: JE              L00,#3dab [FALSE] L0397
       PRINT_PADDR     S899
       RTRUE           
L0397: JE              L00,#3ff0 [FALSE] L0398
       PRINT           "can't take component parts rule"
       RTRUE           
L0398: JE              L00,#3d34 [FALSE] L0399
       PRINT           "find what to enter rule"
       RTRUE           
L0399: JE              L00,#1782 [FALSE] L0400
       PRINT           "quit the game rule"
       RTRUE           
L0400: JE              L00,#1795 [FALSE] L0401
       PRINT           "save the game rule"
       RTRUE           
L0401: JE              L00,#178e [FALSE] L0402
       PRINT           "restore the game rule"
       RTRUE           
L0402: JE              L00,#1787 [FALSE] L0403
       PRINT           "restart the game rule"
       RTRUE           
L0403: JE              L00,#17a2 [FALSE] L0404
       PRINT           "verify the story file rule"
       RTRUE           
L0404: JE              L00,#17a9 [FALSE] L0405
       PRINT_PADDR     S900
       RTRUE           
L0405: JE              L00,#17b8 [FALSE] L0406
       PRINT_PADDR     S901
       RTRUE           
L0406: JE              L00,#17c7 [FALSE] L0407
       PRINT_PADDR     S902
       RTRUE           
L0407: JE              L00,#55a7 [FALSE] L0408
       PRINT           "announce the score rule"
       RTRUE           
L0408: JE              L00,#55c5 [FALSE] L0409
       PRINT_PADDR     S903
       RTRUE           
L0409: JE              L00,#55c8 [FALSE] L0410
       PRINT_PADDR     S904
       RTRUE           
L0410: JE              L00,#55be [FALSE] L0411
       PRINT_PADDR     S905
       RTRUE           
L0411: JE              L00,"shed" [FALSE] L0412
       PRINT_PADDR     S906
       RTRUE           
L0412: JE              L00,#55b7 [FALSE] L0413
       PRINT_PADDR     S907
       RTRUE           
L0413: JE              L00,#55ba [FALSE] L0414
       PRINT_PADDR     S908
       RTRUE           
L0414: JE              L00,#55ab [FALSE] L0415
       PRINT_PADDR     S909
       RTRUE           
L0415: JE              L00,#55ae [FALSE] L0416
       PRINT_PADDR     S910
       RTRUE           
L0416: JE              L00,#55b1 [FALSE] L0417
       PRINT_PADDR     S911
       RTRUE           
L0417: JE              L00,#55b4 [FALSE] L0418
       PRINT_PADDR     S912
       RTRUE           
L0418: JE              L00,#55cc [FALSE] L0419
       PRINT_PADDR     S913
       RTRUE           
L0419: PRINT           "(nameless rule at address "
       PRINT_NUM       L00
       PRINT           ")"
L0420: RTRUE           

Routine R1060, 3 locals

       MUL             #02,Gc7 -> -(SP)
       PULL            Gef
       JL              Gef,#01 [TRUE] L0002
L0001: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0001
L0002: PRINT           "["
       CALL_2N         R1059 (L00)
       JZ              L01 [TRUE] L0003
       PRINT           " / on O"
       PRINT_NUM       L01
L0003: PRINT           "]
"
       RTRUE           

Routine R1061, 3 locals

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: PRINT           "[Rule ""
       CALL_2N         R1059 (L00)
       PRINT           "" "
       JZ              L02 [FALSE] L0002
       PRINT_RET       "applies.]"
L0002: PRINT_RET       "does not apply.]"

Routine R1062, 2 locals

       STORE           Gcd,L00
       STORE           Gce,L01
       RTRUE           

Routine R1063, 6 locals

       STORE           Gca,L00
       STORE           Gcb,L01
       STORE           Gcc,L02
       CALL_VN         R1064 (#00,L03,L05)
       RTRUE           

Routine R1064, 3 locals

       SUB             L01,L00 -> -(SP)
       JL              (SP)+,#02 [FALSE] L0001
       RTRUE           
L0001: JZ              L02 [TRUE] L0002
       CALL_VN         L02 (L00,L01)
       JUMP            L0003
L0002: CALL_VN         R1069 (L00,L01)
L0003: RTRUE           

Routine R1065, 2 locals

       ADD             L01,#01 -> -(SP)
       ADD             L00,#01 -> -(SP)
       CALL_VS2        Gce (Gca,Gcb,(SP)+,(SP)+,Gcc) -> -(SP)
       MUL             Gcc,(SP)+ -> -(SP)
       RET_POPPED      

Routine R1066, 2 locals

       ADD             L01,#01 -> -(SP)
       ADD             L00,#01 -> -(SP)
       CALL_VS         Gcd (Gca,(SP)+,(SP)+) -> -(SP)
       RET_POPPED      

Routine R1067, 5 locals

       SUB             L01,L00 -> -(SP)
       JL              (SP)+,#02 [FALSE] L0001
       RTRUE           
L0001: STORE           L02,#01
L0002: JZ              L02 [TRUE] L0008
       STORE           L02,#00
       STORE           L03,L00
L0003: JL              L03,L01 [FALSE] L0007
       ADD             L03,#01 -> L04
L0004: JL              L04,L01 [FALSE] L0006
       CALL_VS         R1065 (L03,L04) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0005
       CALL_VN         R1066 (L03,L04)
       STORE           L02,#01
       JUMP            L0006
L0005: INC             L04
       JUMP            L0004
L0006: INC             L03
       JUMP            L0003
L0007: JUMP            L0002
L0008: RTRUE           

Routine R1068, 4 locals

       ADD             L00,#01 -> -(SP)
       JG              L01,(SP)+ [FALSE] L0006
       ADD             L00,#01 -> L02
L0001: JL              L02,L01 [FALSE] L0006
       STORE           L03,L02
L0002: JG              L03,L00 [FALSE] L0005
       SUB             L03,#01 -> -(SP)
       CALL_VS         R1065 (L03,(SP)+) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0003
       SUB             L03,#01 -> -(SP)
       CALL_VN         R1066 (L03,(SP)+)
       JUMP            L0004
L0003: JUMP            L0005
L0004: DEC             L03
       JUMP            L0002
L0005: INC             L02
       JUMP            L0001
L0006: RTRUE           

Routine R1069, 3 locals

       SUB             L01,L00 -> -(SP)
       JL              (SP)+,#0c [FALSE] L0002
       SUB             L01,L00 -> -(SP)
       JL              (SP)+,#02 [FALSE] L0001
       RTRUE           
L0001: CALL_VN         R1068 (L00,L01)
       RTRUE           
L0002: ADD             L00,L01 -> -(SP)
       DIV             (SP)+,#02 -> L02
       CALL_VN         R1069 (L00,L02)
       CALL_VN         R1069 (L02,L01)
       SUB             L01,L02 -> -(SP)
       SUB             L02,L00 -> -(SP)
       CALL_VN2        R1074 (L00,L02,L01,(SP)+,(SP)+)
       RTRUE           

Routine R1070, 6 locals

       SUB             L01,L00 -> L03
L0001: JG              L03,#00 [FALSE] L0004
       DIV             L03,#02 -> L04
       ADD             L00,L04 -> L05
       CALL_VS         R1065 (L05,L02) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0002
       ADD             L05,#01 -> L00
       SUB             L03,L04 -> -(SP)
       SUB             (SP)+,#01 -> L03
       JUMP            L0003
L0002: STORE           L03,L04
L0003: JUMP            L0001
L0004: RET             L00

Routine R1071, 6 locals

       SUB             L01,L00 -> L03
L0001: JG              L03,#00 [FALSE] L0004
       DIV             L03,#02 -> L04
       ADD             L00,L04 -> L05
       CALL_VS         R1065 (L02,L05) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0002
       STORE           L03,L04
       JUMP            L0003
L0002: ADD             L05,#01 -> L00
       SUB             L03,L04 -> -(SP)
       SUB             (SP)+,#01 -> L03
L0003: JUMP            L0001
L0004: RET             L00

Routine R1072, 2 locals

L0001: JL              L00,L01 [FALSE] L0002
       PUSH            L01
       DEC             L01
       PUSH            L00
       INC             L00
       CALL_VN         R1066 ((SP)+,(SP)+)
       JUMP            L0001
L0002: RTRUE           

Routine R1073, 8 locals

       JE              L00,L01 [TRUE] L0001
       JE              L01,L02 [FALSE] L0002
L0001: RTRUE           
L0002: SUB             L01,#01 -> -(SP)
       CALL_VN         R1072 (L00,(SP)+)
       SUB             L02,#01 -> -(SP)
       CALL_VN         R1072 (L01,(SP)+)
       SUB             L02,#01 -> -(SP)
       CALL_VN         R1072 (L00,(SP)+)
       RTRUE           

Routine R1074, 10 locals

       JZ              L03 [TRUE] L0001
       JZ              L04 [FALSE] L0002
L0001: RTRUE           
L0002: ADD             L03,L04 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0004
       CALL_VS         R1065 (L01,L00) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0003
       CALL_VN         R1066 (L01,L00)
L0003: RTRUE           
L0004: JG              L03,L04 [FALSE] L0005
       DIV             L03,#02 -> L07
       ADD             L00,L07 -> L05
       CALL_VS         R1070 (L01,L02,L05) -> L06
       SUB             L06,L01 -> L08
       JUMP            L0006
L0005: DIV             L04,#02 -> L08
       ADD             L01,L08 -> L06
       CALL_VS         R1071 (L00,L01,L06) -> L05
       SUB             L05,L00 -> L07
L0006: CALL_VN         R1073 (L05,L01,L06)
       ADD             L05,L08 -> L09
       CALL_VN2        R1074 (L00,L05,L09,L07,L08)
       SUB             L04,L08 -> -(SP)
       SUB             L03,L07 -> -(SP)
       CALL_VN2        R1074 (L09,L06,L02,(SP)+,(SP)+)
       RTRUE           

Routine R1075, 6 locals

       LOADW           L00,#00 -> L04
       STORE           L03,#01
L0001: JG              L03,L04 [TRUE] L0003
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#01ff -> -(SP)
       JE              L01,(SP)+ [FALSE] L0002
       RET             L03
L0002: INC             L03
       JUMP            L0001
L0003: JZ              L02 [TRUE] L0004
       CALL_VN         R1025 (#14,L00)
       RFALSE          
L0004: RFALSE          

Routine R1076, 2 locals

       LOADW           L00,#01 -> L01
       JZ              L01 [FALSE] L0001
       RFALSE          
L0001: LOADW           L01,#00 -> -(SP)
       SUB             (SP)+,#02 -> -(SP)
       RET_POPPED      

Routine R1077, 5 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01) -> L01
L0001: JZ              L01 [TRUE] RTRUE
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> -(SP)
       JE              (SP)+,#7fe3 [TRUE] L0002
       PRINT           "*** CTEIB on nonblank value "
       PRINT_NUM       L00
       PRINT           " "
       PRINT_NUM       L01
       PRINT           " "
       PRINT_NUM       L02
       PRINT           " ***
"
L0002: LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#0800 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       DEC             L02
       DIV             L02,#08 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L04
       MOD             L02,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       AND             (SP)+,(SP)+ -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          

Routine R1078, 7 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01) -> L01
L0001: JZ              L01 [TRUE] RTRUE
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> L06
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L05
       AND             L06,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       JE              L05,#00,#7fe3 [TRUE] L0002
       CALL_2N         R1247 (L05)
L0002: ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       STOREW          (SP)+,(SP)+,#7fe3
       AND             L06,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       RTRUE           
L0003: DEC             L02
       DIV             L02,#08 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L04
       MOD             L02,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       OR              (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L04,(SP)+
       RTRUE           

Routine R1079, 9 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01) -> L01
L0001: JZ              L01 [TRUE] RTRUE
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> L06
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L05
       AND             L06,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JE              L05,#00,#7fe3 [FALSE] L0005
       STORE           L08,#01
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#01ff -> L07
       CALL_2S         R0250 (L07) -> L08
       JE              L08,#01 [TRUE] L0005
       STORE           L03,L08
       CALL_2S         R0106 (L03) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       CALL_2S         R0105 (L03) -> L03
       JUMP            L0004
L0003: STORE           L03,#00
L0004: CALL_VS         R1251 (L08,#00,L03) -> -(SP)
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       STOREW          (SP)+,(SP)+,(SP)+
L0005: DEC             L02
       DIV             L02,#08 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L04
       MOD             L02,#08 -> -(SP)
       LOADB           #474b,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       AND             (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L04,(SP)+
       RTRUE           

Routine R1080, 8 locals

       JL              L03,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L03) -> L03
L0001: JZ              L03 [TRUE] RTRUE
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: DEC             L01
       DIV             L01,#08 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L04
       DEC             L02
       DIV             L02,#08 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L05
       MOD             L01,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       AND             (SP)+,(SP)+ -> L06
       MOD             L02,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L05 -> -(SP)
       AND             (SP)+,(SP)+ -> L07
       JZ              L06 [TRUE] L0003
       STORE           L06,#01
L0003: JZ              L07 [TRUE] L0004
       STORE           L07,#01
L0004: JE              L06,L07 [FALSE] L0005
       RTRUE           
L0005: JZ              L06 [TRUE] L0006
       MOD             L01,#08 -> -(SP)
       LOADB           #474b,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       AND             (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L04,(SP)+
       MOD             L02,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L05 -> -(SP)
       OR              (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L05,(SP)+
       JUMP            L0007
L0006: MOD             L01,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       OR              (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L04,(SP)+
       MOD             L02,#08 -> -(SP)
       LOADB           #474b,(SP)+ -> -(SP)
       LOADB           #2efe,L05 -> -(SP)
       AND             (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L05,(SP)+
L0007: RTRUE           

Routine R1081, 8 locals

       JL              L03,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L03) -> L03
L0001: JZ              L03 [TRUE] RTRUE
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: DEC             L01
       DEC             L02
       DIV             L01,#08 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L04
       MOD             L01,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       AND             (SP)+,(SP)+ -> L06
       JZ              L06 [TRUE] L0003
       STORE           L06,#01
L0003: STORE           L07,L01
L0004: JL              L07,L02 [FALSE] L0007
       ADD             L07,#01 -> -(SP)
       DIV             (SP)+,#08 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L05
       DIV             L07,#08 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L04
       ADD             L07,#01 -> -(SP)
       MOD             (SP)+,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L05 -> -(SP)
       AND             (SP)+,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       MOD             L07,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       OR              (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L04,(SP)+
       JUMP            L0006
L0005: MOD             L07,#08 -> -(SP)
       LOADB           #474b,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       AND             (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L04,(SP)+
L0006: INC             L07
       JUMP            L0004
L0007: DIV             L02,#08 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> L04
       JZ              L06 [TRUE] L0008
       MOD             L02,#08 -> -(SP)
       LOADB           #4743,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       OR              (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L04,(SP)+
       JUMP            L0009
L0008: MOD             L02,#08 -> -(SP)
       LOADB           #474b,(SP)+ -> -(SP)
       LOADB           #2efe,L04 -> -(SP)
       AND             (SP)+,(SP)+ -> -(SP)
       STOREB          #2efe,L04,(SP)+
L0009: RTRUE           

Routine R1082, 7 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01,#01) -> L01
L0001: LOADW           L00,L01 -> L03
       LOADW           L03,#00 -> -(SP)
       SUB             (SP)+,#02 -> L05
       STORE           L06,#00
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           L06,#01
L0002: STORE           L04,#01
L0003: JG              L04,L05 [TRUE] L0008
       JE              L02,#7fe3 [FALSE] L0004
       CALL_VS         R1077 (L00,L01,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JUMP            L0007
L0004: JZ              L06 [TRUE] L0006
       ADD             L04,#02 -> -(SP)
       LOADW           L03,(SP)+ -> -(SP)
       CALL_VS         R1254 ((SP)+,L02) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       RET             L04
L0005: JUMP            L0007
L0006: ADD             L04,#02 -> -(SP)
       LOADW           L03,(SP)+ -> -(SP)
       JE              (SP)+,L02 [FALSE] L0007
       RET             L04
L0007: INC             L04
       JUMP            L0003
L0008: CALL_VS         R1025 (#15,L00) -> -(SP)
       RET_POPPED      

Routine R1083, 8 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01) -> L01
L0001: JZ              L01 [TRUE] RFALSE
       STORE           L06,#00
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           L06,#01
       JUMP            L0003
L0002: LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L06,#02
L0003: CALL_2S         R1076 (L00) -> L04
       STORE           L03,#01
L0004: JG              L03,L04 [TRUE] L0011
       ADD             L03,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L05
       JE              L05,#7fe3 [FALSE] L0005
       CALL_VS         R1077 (L00,L01,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JUMP            L0010
L0005: STORE           Gef,L06
       JE              Gef,#01 [FALSE] L0007
       MOD             L02,#64 -> -(SP)
       DIV             L02,#64 -> -(SP)
       CALL_VS         L05 ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0006
       RET             L03
L0006: JUMP            L0010
L0007: JE              Gef,#02 [FALSE] L0009
       CALL_VS         R1254 (L05,L02) -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       RET             L03
L0008: JUMP            L0010
L0009: JE              L05,L02 [FALSE] L0010
       RET             L03
L0010: INC             L03
       JUMP            L0004
L0011: RFALSE          

Routine R1084, 12 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01,#01) -> L01
L0001: JL              L02,#64 [TRUE] L0002
       CALL_VS         R1075 (L00,L02,#01) -> L02
L0002: LOADW           L00,L01 -> L06
       LOADW           L00,L02 -> L07
       LOADW           L07,#00 -> L09
       STORE           L0b,#00
       LOADW           L00,L02 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L0b,#01
L0003: LOADW           L00,L02 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           L0b,#02
L0004: STORE           L08,#03
L0005: JG              L08,L09 [TRUE] L0018
       LOADW           L07,L08 -> L0a
       JE              L0a,#7fe3 [FALSE] L0006
       SUB             L08,#02 -> -(SP)
       CALL_VS         R1077 (L00,L02,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       JUMP            L0017
L0006: JE              L0b,#01 [FALSE] L0008
       CALL_VS         R1254 (L0a,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JUMP            L0017
L0007: JUMP            L0011
L0008: JE              L0b,#02 [FALSE] L0010
       MOD             L03,#64 -> -(SP)
       DIV             L03,#64 -> -(SP)
       CALL_VS         L0a ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0009
       JUMP            L0017
L0009: JUMP            L0011
L0010: JE              L0a,L03 [TRUE] L0011
       JUMP            L0017
L0011: JZ              L04 [TRUE] L0015
       SUB             L08,#02 -> -(SP)
       CALL_VN         R1079 (L00,L01,(SP)+)
       STORE           Gef,L04
       JE              Gef,#02 [FALSE] L0012
       LOADW           L06,L08 -> -(SP)
       ADD             (SP)+,L05 -> -(SP)
       STOREW          L06,L08,(SP)+
       JUMP            L0014
L0012: JE              Gef,#03 [FALSE] L0013
       LOADW           L06,L08 -> -(SP)
       SUB             (SP)+,L05 -> -(SP)
       STOREW          L06,L08,(SP)+
       JUMP            L0014
L0013: STOREW          L06,L08,L05
L0014: RFALSE          
L0015: LOADW           L06,L08 -> L0a
       JE              L0a,#7fe3 [FALSE] L0016
       SUB             L08,#02 -> -(SP)
       CALL_VS         R1077 (L00,L01,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       JUMP            L0017
L0016: RET             L0a
L0017: INC             L08
       JUMP            L0005
L0018: CALL_VS         R1025 (#15,L00) -> -(SP)
       RET_POPPED      

Routine R1085, 9 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01,#00) -> L01
L0001: JL              L02,#64 [TRUE] L0002
       CALL_VS         R1075 (L00,L02,#00) -> L02
L0002: MUL             L01,L02 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       LOADW           L00,L01 -> L04
       LOADW           L00,L02 -> L05
       LOADW           L05,#00 -> L07
       STORE           L08,#00
       LOADW           L00,L02 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L08,#01
L0003: LOADW           L00,L02 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#2000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           L08,#02
L0004: STORE           L06,#03
L0005: JG              L06,L07 [TRUE] L0013
       JE              L08,#01 [FALSE] L0007
       LOADW           L05,L06 -> -(SP)
       CALL_VS         R1254 ((SP)+,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       JUMP            L0012
L0006: JUMP            L0010
L0007: JE              L08,#02 [FALSE] L0009
       MOD             L03,#64 -> -(SP)
       DIV             L03,#64 -> -(SP)
       LOADW           L05,L06 -> -(SP)
       CALL_VS         (SP)+ ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0008
       JUMP            L0012
L0008: JUMP            L0010
L0009: LOADW           L05,L06 -> -(SP)
       JE              (SP)+,L03 [TRUE] L0010
       JUMP            L0012
L0010: LOADW           L04,L06 -> -(SP)
       JE              (SP)+,#7fe3 [FALSE] L0011
       SUB             L06,#02 -> -(SP)
       CALL_VS         R1077 (L00,L01,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       JUMP            L0012
L0011: RTRUE           
L0012: INC             L06
       JUMP            L0005
L0013: RFALSE          

Routine R1086, 6 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01,#01) -> L01
L0001: JL              L02,#01 [TRUE] L0002
       CALL_2S         R1076 (L00) -> -(SP)
       JG              L02,(SP)+ [FALSE] L0003
L0002: CALL_VS         R1025 (#16,L00,L02) -> -(SP)
       RET_POPPED      
L0003: JZ              L03 [TRUE] L0009
       STORE           Gef,L03
       JE              Gef,#01 [FALSE] L0004
       CALL_VN         R1079 (L00,L01,L02)
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       STOREW          (SP)+,(SP)+,L04
       JUMP            L0008
L0004: JE              Gef,#02 [FALSE] L0005
       CALL_VN         R1079 (L00,L01,L02)
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> -(SP)
       ADD             (SP)+,L04 -> -(SP)
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       STOREW          (SP)+,(SP)+,(SP)+
       JUMP            L0008
L0005: JE              Gef,#03 [FALSE] L0006
       CALL_VN         R1079 (L00,L01,L02)
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> -(SP)
       SUB             (SP)+,L04 -> -(SP)
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       STOREW          (SP)+,(SP)+,(SP)+
       JUMP            L0008
L0006: JE              Gef,#04 [FALSE] L0007
       CALL_VN         R1078 (L00,L01,L02)
       JUMP            L0008
L0007: JE              Gef,#05 [FALSE] L0008
       CALL_VN         R1079 (L00,L01,L02)
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> -(SP)
       RET_POPPED      
L0008: RFALSE          
L0009: ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L05
       JE              L05,#7fe3 [FALSE] L0010
       CALL_VS         R1077 (L00,L01,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       CALL_VS2        R1025 (#17,L00,L01,L02) -> -(SP)
       RET_POPPED      
L0010: RET             L05

Routine R1087, 4 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01) -> L01
L0001: JZ              L01 [TRUE] RFALSE
       JL              L02,#01 [TRUE] RFALSE
       CALL_2S         R1076 (L00) -> -(SP)
       JG              L02,(SP)+ [TRUE] RFALSE
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L03
       JE              L03,#7fe3 [FALSE] L0002
       CALL_VS         R1077 (L00,L01,L02) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0002: RTRUE           

Routine R1088, 3 locals

       STORE           L02,#01
L0001: LOADW           L00,#00 -> -(SP)
       JG              L02,(SP)+ [TRUE] L0002
       ADD             L01,#02 -> -(SP)
       LOADW           L00,L02 -> -(SP)
       LOADW           (SP)+,(SP)+ -> -(SP)
       JE              (SP)+,#7fe3 [FALSE] RFALSE
       CALL_VS         R1077 (L00,L02,L01) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       INC             L02
       JUMP            L0001
L0002: RTRUE           

Routine R1089, 3 locals

       JZ              L00 [FALSE] L0001
       CALL_VS         R1025 (#18,L00) -> -(SP)
       RET_POPPED      
L0001: STORE           L02,#01
L0002: LOADW           L00,#00 -> -(SP)
       JG              L02,(SP)+ [TRUE] L0003
       CALL_VN         R1078 (L00,L02,L01)
       INC             L02
       JUMP            L0002
L0003: RTRUE           

Routine R1090, 4 locals

       JZ              L00 [FALSE] L0001
       CALL_VS         R1025 (#18,L00) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R1076 (L00) -> L02
       STORE           L03,#01
L0002: JG              L03,L02 [TRUE] L0003
       CALL_VN         R1078 (L00,L01,L03)
       INC             L03
       JUMP            L0002
L0003: RTRUE           

Routine R1091, 3 locals

       JZ              L00 [FALSE] L0001
       CALL_VS         R1025 (#18,L00) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R1076 (L00) -> L01
       STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0003
       CALL_VN         R1089 (L00,L02)
       INC             L02
       JUMP            L0002
L0003: RTRUE           

Routine R1092, 4 locals

       CALL_2S         R1076 (L00) -> L01
       STORE           L02,#01
L0001: JG              L02,L01 [TRUE] L0003
       CALL_VS         R1088 (L00,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L03
L0002: INC             L02
       JUMP            L0001
L0003: RET             L03

Routine R1093, 1 local

       CALL_2S         R1092 (L00) -> -(SP)
       CALL_2S         R1076 (L00) -> -(SP)
       SUB             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R1094, 3 locals

       CALL_2S         R1076 (L00) -> L01
       STORE           L02,#01
L0001: JG              L02,L01 [TRUE] L0003
       CALL_VS         R1088 (L00,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RET             L02
L0002: INC             L02
       JUMP            L0001
L0003: CALL_VN         R1025 (#19,L00)
       RET             L01

Routine R1095, 4 locals

       CALL_2S         R1076 (L00) -> L01
       CALL_2S         R1093 (L00) -> L02
       JZ              L02 [FALSE] L0001
       CALL_VS         R1025 (#1a,L00) -> -(SP)
       RET_POPPED      
L0001: JG              L02,#01 [FALSE] L0002
       RANDOM          L02 -> L02
L0002: STORE           L03,#01
L0003: JG              L03,L01 [TRUE] L0006
       CALL_VS         R1088 (L00,L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       DEC             L02
L0004: JZ              L02 [FALSE] L0005
       RET             L03
L0005: INC             L03
       JUMP            L0003
L0006: RTRUE           

Routine R1096, 7 locals

       JE              L01,L02 [FALSE] L0001
       RTRUE           
L0001: LOADW           L00,#00 -> L04
       STORE           L03,#01
L0002: JG              L03,L04 [TRUE] L0005
       ADD             L01,#02 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L05
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L06
       ADD             L01,#02 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       STOREW          (SP)+,(SP)+,L06
       ADD             L02,#02 -> -(SP)
       LOADW           L00,L03 -> -(SP)
       STOREW          (SP)+,(SP)+,L05
       JE              L05,#7fe3 [TRUE] L0003
       JE              L06,#7fe3 [FALSE] L0004
L0003: CALL_VN2        R1080 (L00,L01,L02,L03)
L0004: INC             L03
       JUMP            L0002
L0005: RTRUE           

Routine R1097, 10 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01,#00) -> L01
L0001: ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L05
       ADD             L03,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L06
       JE              L05,#7fe3 [FALSE] L0002
       CALL_VS         R1077 (L00,L01,L02) -> L07
L0002: JE              L06,#7fe3 [FALSE] L0003
       CALL_VS         R1077 (L00,L01,L03) -> L08
L0003: JE              L05,L06 [FALSE] L0009
       JE              L07,L08 [FALSE] L0009
       JE              L05,#7fe3 [TRUE] L0004
       RFALSE          
L0004: JZ              L07 [FALSE] L0005
       RFALSE          
L0005: CALL_VS         R1088 (L00,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R1088 (L00,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       RFALSE          
L0006: MUL             #ffff,L04 -> -(SP)
       RET_POPPED      
L0007: CALL_VS         R1088 (L00,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       RET             L04
L0008: RFALSE          
L0009: JZ              L07 [TRUE] L0010
       RET             L04
L0010: JZ              L08 [TRUE] L0011
       MUL             #ffff,L04 -> -(SP)
       RET_POPPED      
L0011: LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> L09
       AND             L09,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       CALL_VS         R1254 (L06,L05) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0012
       RTRUE           
L0012: RET             #ffff
L0013: AND             L09,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       JG              L05,L06 [FALSE] L0014
       RTRUE           
L0014: RET             #ffff
L0015: CALL_VS         R0118 (L05,L06) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0016
       RTRUE           
L0016: RET             #ffff

Routine R1098, 9 locals

       JE              L01,L02 [FALSE] L0001
       RTRUE           
L0001: LOADW           L00,#00 -> L05
       STORE           L04,#01
L0002: JG              L04,L05 [TRUE] L0008
       STORE           L08,#00
       ADD             L01,#02 -> -(SP)
       LOADW           L00,L04 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L06
       JE              L06,#7fe3 [FALSE] L0003
       STORE           L08,#01
L0003: STORE           L03,L01
L0004: JL              L03,L02 [FALSE] L0006
       ADD             L03,#02 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADW           L00,L04 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L07
       ADD             L03,#02 -> -(SP)
       LOADW           L00,L04 -> -(SP)
       STOREW          (SP)+,(SP)+,L07
       JE              L07,#7fe3 [FALSE] L0005
       STORE           L08,#01
L0005: INC             L03
       JUMP            L0004
L0006: ADD             L02,#02 -> -(SP)
       LOADW           L00,L04 -> -(SP)
       STOREW          (SP)+,(SP)+,L06
       JZ              L08 [TRUE] L0007
       CALL_VN2        R1081 (L00,L01,L02,L04)
L0007: INC             L04
       JUMP            L0002
L0008: RTRUE           

Routine R1099, 3 locals

       CALL_2S         R1076 (L00) -> -(SP)
       CALL_VN         R1101 (L00,#01,(SP)+)
       CALL_2S         R1093 (L00) -> L02
       STORE           L01,#02
L0001: JG              L01,L02 [TRUE] L0002
       RANDOM          L01 -> -(SP)
       CALL_VN         R1096 (L00,L01,(SP)+)
       INC             L01
       JUMP            L0001
L0002: RTRUE           

Routine R1100, 13 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01,#00) -> L01
L0001: LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,#01 -> L0c
       AND             L0c,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R1025 (#3a,L00)
L0002: AND             L0c,#4000 -> L0b
       JZ              L02 [FALSE] L0008
       JZ              L0b [TRUE] L0005
       JE              L03,#01 [FALSE] L0003
       STORE           L06,#8000
       JUMP            L0004
L0003: STORE           L06,#7fff
L0004: JUMP            L0007
L0005: JE              L03,#01 [FALSE] L0006
       STORE           L06,#00
       JUMP            L0007
L0006: STORE           L06,#ffff
L0007: JUMP            L0009
L0008: ADD             L02,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L06
L0009: JZ              L0b [TRUE] L0010
       STORE           L09,#7fff
       JUMP            L0011
L0010: STORE           L09,#ffff
L0011: CALL_2S         R1076 (L00) -> L05
       JE              L03,#01 [FALSE] L0024
       STORE           L04,#01
L0012: JG              L04,L05 [TRUE] L0023
       ADD             L04,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L07
       JE              L07,#7fe3 [FALSE] L0013
       CALL_VS         R1077 (L00,L01,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       JUMP            L0022
L0013: MUL             L03,L07 -> L08
       JZ              L0b [TRUE] L0017
       MUL             L03,L06 -> -(SP)
       JG              L08,(SP)+ [TRUE] L0014
       JE              L07,L06 [FALSE] L0015
       JG              L04,L02 [FALSE] L0015
L0014: JL              L08,L09 [FALSE] L0015
       PUSH            #01
       JUMP            L0016
L0015: PUSH            #00
L0016: PULL            L0c
       JUMP            L0021
L0017: MUL             L03,L06 -> -(SP)
       CALL_VS         R0118 (L08,(SP)+) -> -(SP)
       JG              (SP)+,#00 [TRUE] L0018
       JE              L07,L06 [FALSE] L0019
       JG              L04,L02 [FALSE] L0019
L0018: CALL_VS         R0118 (L08,L09) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0019
       PUSH            #01
       JUMP            L0020
L0019: PUSH            #00
L0020: PULL            L0c
L0021: JZ              L0c [TRUE] L0022
       STORE           L09,L08
       STORE           L0a,L04
L0022: INC             L04
       JUMP            L0012
L0023: JUMP            L0036
L0024: STORE           L04,L05
L0025: JL              L04,#01 [TRUE] L0036
       ADD             L04,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L07
       JE              L07,#7fe3 [FALSE] L0026
       CALL_VS         R1077 (L00,L01,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       JUMP            L0035
L0026: MUL             L03,L07 -> L08
       JZ              L0b [TRUE] L0030
       MUL             L03,L06 -> -(SP)
       JG              L08,(SP)+ [TRUE] L0027
       JE              L07,L06 [FALSE] L0028
       JL              L04,L02 [FALSE] L0028
L0027: JL              L08,L09 [FALSE] L0028
       PUSH            #01
       JUMP            L0029
L0028: PUSH            #00
L0029: PULL            L0c
       JUMP            L0034
L0030: MUL             L03,L06 -> -(SP)
       CALL_VS         R0118 (L08,(SP)+) -> -(SP)
       JG              (SP)+,#00 [TRUE] L0031
       JE              L07,L06 [FALSE] L0032
       JL              L04,L02 [FALSE] L0032
L0031: CALL_VS         R0118 (L08,L09) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0032
       PUSH            #01
       JUMP            L0033
L0032: PUSH            #00
L0033: PULL            L0c
L0034: JZ              L0c [TRUE] L0035
       STORE           L09,L08
       STORE           L0a,L04
L0035: DEC             L04
       JUMP            L0025
L0036: RET             L0a

Routine R1101, 7 locals

       JL              L02,L01 [FALSE] L0001
       RTRUE           
L0001: STORE           L04,#00
       STORE           L05,#00
       STORE           L03,L01
L0002: JG              L03,L02 [TRUE] L0006
       CALL_VS         R1088 (L00,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JZ              L04 [FALSE] L0003
       STORE           L04,L03
L0003: INC             L06
       JUMP            L0005
L0004: STORE           L05,L03
L0005: INC             L03
       JUMP            L0002
L0006: JG              L04,#00 [FALSE] L0007
       JG              L05,#00 [FALSE] L0007
       JL              L04,L05 [FALSE] L0007
       CALL_VN         R1098 (L00,L04,L05)
       SUB             L05,#01 -> -(SP)
       CALL_VN         R1101 (L00,L04,(SP)+)
L0007: SUB             L02,L06 -> -(SP)
       RET_POPPED      

Routine R1102, 9 locals

       STORE           L05,#01
L0001: LOADW           L00,#00 -> -(SP)
       JG              L05,(SP)+ [TRUE] L0003
       LOADW           L00,L05 -> L06
       LOADW           L06,#01 -> -(SP)
       AND             (SP)+,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1025 (#1b,L00) -> -(SP)
       RET_POPPED      
L0002: INC             L05
       JUMP            L0001
L0003: JL              L01,#64 [TRUE] L0004
       CALL_VS         R1075 (L00,L01,#00) -> L01
L0004: CALL_2S         R1076 (L00) -> L07
       CALL_VS         R1101 (L00,#01,L07) -> L07
       JZ              L03 [TRUE] L0005
       PRINT           "After moving blanks to back:
"
       CALL_VN         R1106 (L00,L01)
L0005: CALL_VN         R1062 (#6c8b,#6ca3)
       CALL_VN2        R1063 (L00,L01,L02,L07,L03,L04)
       JZ              L03 [TRUE] L0006
       PRINT           "Final state:
"
       CALL_VN         R1106 (L00,L01)
L0006: RTRUE           

Routine R1103, 1 local

       STORE           Gef,L00
       JE              Gef,#1b34 [FALSE] L0001
       PRINT           "(the empty table)"
       RTRUE           
L0001: JE              Gef,#2e64 [FALSE] L0002
       PRINT           "Table of Final Question Options"
       RTRUE           
L0002: JE              Gef,#2ec0 [FALSE] L0003
       PRINT           "Table of Locale Priorities"
       RTRUE           
L0003: PRINT           "** No such table **"
       RTRUE           

Routine R1104, 9 locals

       STORE           L01,#01
L0001: LOADW           L00,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0002
       LOADW           L00,L01 -> L02
       LOADW           L02,#01 -> -(SP)
       AND             (SP)+,#0400 -> -(SP)
       JZ              (SP)+ [TRUE] RTRUE
       INC             L01
       JUMP            L0001
L0002: CALL_2S         R1076 (L00) -> L03
       CALL_VS         R1101 (L00,#01,L03) -> L03
       PRINT           "! "
       CALL_2N         R1103 (L00)
       PRINT           " ("
       PRINT_NUM       L03
       PRINT           ")
"
       STORE           L04,#01
L0003: JG              L04,L03 [TRUE] L0010
       STORE           L05,#01
L0004: LOADW           L00,#00 -> -(SP)
       JG              L05,(SP)+ [TRUE] L0009
       LOADW           L00,L05 -> -(SP)
       LOADW           (SP)+,#01 -> -(SP)
       AND             (SP)+,#01ff -> L07
       CALL_2S         R0250 (L07) -> -(SP)
       CALL_2S         R0105 ((SP)+) -> L08
       JE              L08,#01 [FALSE] L0005
       STORE           L08,#0a
L0005: ADD             L04,#02 -> -(SP)
       LOADW           L00,L05 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L06
       JE              L06,#7fe3 [FALSE] L0006
       CALL_VS         R1077 (L00,L05,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       PRINT           "-- "
       JUMP            L0008
L0006: CALL_VS         R1250 (L06,L08) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT_NUM       L06
L0007: PRINT           " "
L0008: INC             L05
       JUMP            L0004
L0009: PRINT           "
"
       INC             L04
       JUMP            L0003
L0010: RFALSE          

Routine R1105, 3 locals

       PRINT_RET       "."

Routine R1106, 5 locals

       JL              L01,#64 [TRUE] L0001
       CALL_VS         R1075 (L00,L01,#00) -> L01
L0001: CALL_2S         R1076 (L00) -> L02
       PRINT           "Table col "
       PRINT_NUM       L01
       PRINT           ": "
       STORE           L03,#01
L0002: JG              L03,L02 [TRUE] L0005
       ADD             L03,#02 -> -(SP)
       LOADW           L00,L01 -> -(SP)
       LOADW           (SP)+,(SP)+ -> L04
       JE              L04,#7fe3 [FALSE] L0003
       CALL_VS         R1077 (L00,L01,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       PRINT           "BLANK "
       JUMP            L0004
L0003: PRINT_NUM       L04
       PRINT           " "
L0004: INC             L03
       JUMP            L0002
L0005: PRINT           "*
"
       RTRUE           

Routine R1107, 1 local

       LOADW           #270b,#04 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       RET             #07
L0001: JZ              L00 [TRUE] L0002
       GET_PROP        L00,#08 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0002
       GET_PROP        L00,#08 -> Gef
       PUSH            Gef
       RET_POPPED      
L0002: JZ              L00 [TRUE] L0003
       GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       GET_PARENT      L00 -> -(SP)
       RET_POPPED      
L0003: RFALSE          

Routine R1108, 1 local

       JZ              L00 [TRUE] L0001
       GET_PARENT      L00 -> L00
L0001: RET             L00

Routine R1109, 1 local

L0001: JZ              L00 [TRUE] L0002
       CALL_VS         R1284 (L00,#08) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PROP        L00,#08 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0002
       GET_PROP        L00,#08 -> Gef
       STORE           L00,Gef
       JUMP            L0001
L0002: RET             L00

Routine R1110, 1 local

L0001: JZ              L00 [TRUE] L0002
       CALL_VS         R1284 (L00,#08) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PROP        L00,#08 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0002
       GET_PROP        L00,#08 -> Gef
       STORE           L00,Gef
       JUMP            L0001
L0002: JZ              L00 [TRUE] L0003
       GET_PARENT      L00 -> L00
L0003: JZ              L00 [TRUE] L0004
       CALL_VS         R1284 (L00,#08) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       GET_PROP        L00,#08 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0004
       GET_PROP        L00,#08 -> Gef
       STORE           L00,Gef
       JUMP            L0003
L0004: RET             L00

Routine R1111, 1 local

       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       RFALSE          
L0001: CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R1140 (L00) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0051 (L00,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       RFALSE          
L0003: JZ              L00 [TRUE] L0005
       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       RET             L00
L0004: CALL_2S         R1110 (L00) -> L00
       JUMP            L0003
L0005: RFALSE          

Routine R1112, 4 locals

       CALL_2S         R1109 (L00) -> L00
       CALL_2S         R1109 (L01) -> L01
       STORE           L02,L00
       JUMP            L0002
L0001: CALL_2S         R1110 (L02) -> L02
L0002: JZ              L02 [TRUE] L0007
       STORE           L03,L01
       JUMP            L0004
L0003: CALL_2S         R1110 (L03) -> L03
L0004: JZ              L03 [TRUE] L0006
       JE              L03,L02 [FALSE] L0005
       RET             L03
L0005: JUMP            L0003
L0006: JUMP            L0001
L0007: RFALSE          

Routine R1113, 2 locals

       JZ              L00 [TRUE] RFALSE
       JZ              L01 [TRUE] RFALSE
       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0051 (L01,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_2S         R1140 (L01) -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       CALL_2S         R1141 (L01) -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       RFALSE          
L0001: CALL_VS         R0051 (L01,#19) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_2S         R1107 (L01) -> L01
       JUMP            L0003
L0002: CALL_2S         R1107 (L01) -> L01
L0003: JZ              L01 [TRUE] L0004
       JE              L01,#07 [TRUE] L0004
       JE              L01,L00 [TRUE] RTRUE
       JUMP            L0002
L0004: RFALSE          

Routine R1114, 1 local

       TEST_ATTR       L00,#07 [FALSE] L0001
       CALL_VS         R1113 (L00,G22) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          
L0001: CALL_VS         R0051 (L00,#1b) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1139 (G23,L00) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              L00,G23 [TRUE] RTRUE
       RFALSE          
L0003: CALL_VN         R1025 (#1c,L00)
       RFALSE          

Routine R1115, 2 locals

       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       GET_PROP        L00,#10 -> Gef
       PUSH            Gef
       RET_POPPED      
L0001: GET_PARENT      L00 -> L01
       JZ              L01 [FALSE] L0002
       RFALSE          
L0002: CALL_VS         R0051 (L01,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       RET             L01
L0003: CALL_VS         R0051 (L01,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       RET             L01
L0004: CALL_VS         R0051 (L01,#1b) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RET             L01
L0005: RFALSE          

Routine R1116, 3 locals

       CALL_VS         R0051 (L00,#1b) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           L02,#01
L0001: CALL_VS         R0051 (L02,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PROP        L02,#10 -> Gef
       PUSH            Gef
       JE              (SP)+,L00 [FALSE] L0002
       JG              L02,L01 [FALSE] L0002
       RET             L02
L0002: INC             L02
       JG              L02,#0043 [TRUE] L0003
       JUMP            L0001
L0003: RFALSE          
L0004: CALL_VS         R0051 (L00,#16) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
L0005: JZ              L01 [FALSE] L0007
       GET_CHILD       L00 -> -(SP) [FALSE] L0006
L0006: RET_POPPED      
L0007: GET_SIBLING     L01 -> -(SP) [FALSE] L0008
L0008: RET_POPPED      
L0009: RFALSE          

Routine R1117, 2 locals

       GET_PARENT      L00 -> L01
       JZ              L01 [FALSE] L0001
       RFALSE          
L0001: CALL_VS         R0051 (L01,#10) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RET             L01
L0002: RFALSE          

Routine R1118, 2 locals

       GET_PARENT      L00 -> L01
       JZ              L01 [TRUE] L0001
       CALL_VS         R0051 (L01,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       TEST_ATTR       L00,#16 [TRUE] L0001
       RET             L01
L0001: RFALSE          

Routine R1119, 2 locals

       GET_PARENT      L00 -> L01
       JZ              L01 [TRUE] L0001
       CALL_VS         R0051 (L01,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       TEST_ATTR       L00,#16 [FALSE] L0001
       RET             L01
L0001: RFALSE          

Routine R1120, 2 locals

       GET_PARENT      L00 -> L01
       JZ              L01 [TRUE] L0001
       CALL_VS         R0051 (L01,#11) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RET             L01
L0001: RFALSE          

Routine R1121, 3 locals

       GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       REMOVE_OBJ      L00
L0001: CLEAR_ATTR      L00,#16
       JZ              L01 [FALSE] L0002
       CALL_2N         R1122 (L00)
       RTRUE           
L0002: GET_PROP        L00,#08 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0003
       CALL_2N         R1122 (L00)
L0003: PUT_PROP        L00,#08,L01
       GET_PROP        L01,#07 -> Gef
       STORE           L02,Gef
       PUT_PROP        L01,#07,L00
       PUT_PROP        L00,#09,L02
       RTRUE           

Routine R1122, 4 locals

       GET_PROP        L00,#08 -> Gef
       STORE           L02,Gef
       PUT_PROP        L00,#08,#00
       JZ              L02 [FALSE] L0001
       PUT_PROP        L00,#09,#00
       RTRUE           
L0001: GET_PROP        L02,#07 -> Gef
       PUSH            Gef
       JE              (SP)+,L00 [FALSE] L0002
       GET_PROP        L00,#09 -> Gef
       PUSH            Gef
       PUT_PROP        L02,#07,(SP)+
       PUT_PROP        L00,#09,#00
       RTRUE           
L0002: GET_PROP        L02,#07 -> Gef
       STORE           L03,Gef
       JUMP            L0004
L0003: GET_PROP        L03,#09 -> Gef
       STORE           L03,Gef
L0004: JZ              L03 [TRUE] L0006
       GET_PROP        L03,#09 -> Gef
       PUSH            Gef
       JE              (SP)+,L00 [FALSE] L0005
       GET_PROP        L00,#09 -> Gef
       PUSH            Gef
       PUT_PROP        L03,#09,(SP)+
       PUT_PROP        L00,#09,#00
       RTRUE           
L0005: JUMP            L0003
L0006: RTRUE           

Routine R1123, 5 locals

       JZ              L00 [FALSE] L0001
       CALL_2S         R1025 (#0f) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0051 (L00,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       CALL_VS         R0051 (L01,#1b) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CLEAR_ATTR      L00,#00
       GET_PROP        L01,#13 -> Gef
       PUSH            Gef
       PUT_PROP        L00,#0d,(SP)+
       CALL_2S         R1111 (G22) -> -(SP)
       CALL_VS         R1139 ((SP)+,L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2S         R1111 (G22) -> -(SP)
       INSERT_OBJ      L00,(SP)+
       JUMP            L0003
L0002: REMOVE_OBJ      L00
L0003: RTRUE           
L0004: CALL_VS         R1025 (#01,L00,L01) -> -(SP)
       RET_POPPED      
L0005: CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       CALL_VS         R1025 (#36,L00,L01) -> -(SP)
       RET_POPPED      
L0006: CALL_VS         R0051 (L01,#1b) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R1025 (#13,L00,L01) -> -(SP)
       RET_POPPED      
L0007: TEST_ATTR       L00,#16 [FALSE] L0008
       CLEAR_ATTR      L00,#16
       JIN             L00,L01 [FALSE] L0008
       RTRUE           
L0008: CALL_2N         R1122 (L00)
       JZ              L03 [FALSE] L0010
       JE              L00,G22 [FALSE] L0009
       CALL_VN         R1126 (L01,L02)
       RTRUE           
L0009: CALL_VS         R1113 (L00,G22) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       CALL_2S         R1111 (L01) -> -(SP)
       CALL_2S         R1111 (G22) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0010
       GET_PARENT      G22 -> L04
       INSERT_OBJ      G22,G23
       INSERT_OBJ      L00,L01
       CALL_VN         R1126 (L04,#01)
       RTRUE           
L0010: INSERT_OBJ      L00,L01
       RTRUE           

Routine R1124, 1 local

       JZ              L00 [FALSE] L0001
       CALL_2S         R1025 (#10) -> -(SP)
       RET_POPPED      
L0001: JE              L00,G22 [FALSE] L0002
       CALL_2S         R1025 (#2b) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R1025 (#2c) -> -(SP)
       RET_POPPED      
L0003: CLEAR_ATTR      L00,#16
       CALL_2N         R1122 (L00)
       CALL_VS         R0051 (L00,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       SET_ATTR        L00,#00
L0004: REMOVE_OBJ      L00
       RTRUE           

Routine R1125, 3 locals

       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       JL              L01,#00 [FALSE] L0005
L0001: CALL_VS         R1288 (L00) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0005
       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VS         R0051 (L00,#1b) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VS         R0051 (L00,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       TEST_ATTR       L00,#00 [TRUE] RFALSE
       RTRUE           
L0002: GET_PROP        L00,#08 -> Gef
       STORE           L02,Gef
       JZ              L02 [TRUE] L0003
       STORE           L00,L02
       JUMP            L0001
L0003: GET_PARENT      L00 -> L02
       JZ              L02 [TRUE] L0004
       STORE           L00,L02
       JUMP            L0001
L0004: RFALSE          
       JUMP            L0001
L0005: CALL_VS         R1125 (L00,#ffff) -> L02
       JZ              L02 [TRUE] L0006
       JZ              L01 [FALSE] L0006
       CALL_2N         R1124 (L00)
L0006: JZ              L02 [FALSE] L0007
       JZ              L01 [TRUE] L0007
       CALL_VN         R1123 (L00,G23)
L0007: RFALSE          

Routine R1126, 2 locals

       PUSH            G28
       STORE           G28,G22
       INSERT_OBJ      G22,L00
       CALL_2S         R1111 (L00) -> G02
       STORE           G23,G02
       CALL_1N         R1130
       CALL_1N         R0077
       CALL_1N         R0946
       JZ              L01 [FALSE] L0001
       CALL_2N         R0874 (#23)
L0001: JE              L01,#01 [FALSE] L0002
       SET_ATTR        G02,#15
L0002: JE              L01,#02 [FALSE] L0003
       CALL_1N         R0879
L0003: PULL            G28
       RTRUE           

Routine R1127, 2 locals

       CALL_VN2        R1123 (L00,L01,#00,#01)
       JE              G28,G22 [FALSE] L0001
       CALL_2S         R1111 (G22) -> G02
       STORE           G23,G02
L0001: RTRUE           

Routine R1128, 0 locals

       RTRUE           

Routine R1129, 3 locals

       CALL_VS         R0051 (L00,#11) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R1025 (#04,L00) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R1125 (L00,#ffff) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R1025 (#2d,L00) -> -(SP)
       RET_POPPED      
L0002: JE              L00,G22 [FALSE] L0003
       RTRUE           
L0003: CLEAR_ATTR      G22,#03
       TEST_ATTR       G22,#1c [FALSE] L0004
       CLEAR_ATTR      G22,#1b
L0004: JE              G22,#29 [FALSE] L0005
       GET_PROP        G22,#15 -> Gef
       PUSH            Gef
       CALL_VN         R1279 (G22,#4f,(SP)+)
       PUT_PROP        G22,#15,G7f
L0005: STORE           G22,L00
       JE              G22,#29 [FALSE] L0006
       CALL_VS         R1280 (G22,#4f) -> -(SP)
       PUT_PROP        G22,#15,(SP)+
L0006: TEST_ATTR       G22,#1b [TRUE] L0007
       SET_ATTR        G22,#1c
L0007: SET_ATTR        G22,#03
       SET_ATTR        G22,#1b
       CALL_2S         R1111 (G22) -> G02
       STORE           G23,G02
       CALL_1N         R1130
       CALL_1N         R0077
       RTRUE           

Routine R1130, 6 locals

       JZ              G23 [FALSE] L0001
       RTRUE           
L0001: STORE           L00,#01
L0002: GET_PROP_ADDR   L00,#0d -> Gef
       STORE           L04,Gef
       JZ              L04 [TRUE] L0014
       TEST_ATTR       L00,#00 [TRUE] L0014
       LOADW           L04,#00 -> -(SP)
       CALL_2S         R0119 ((SP)+) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0006
       LOADW           L04,#00 -> L03
L0003: CALL_VS         R1281 (L03,#45,G23) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       INSERT_OBJ      L00,G23
       JUMP            L0005
L0004: REMOVE_OBJ      L00
L0005: JUMP            L0014
L0006: GET_PROP_ADDR   L00,#0d -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: STORE           L01,Gef
       STORE           L02,#00
L0008: DIV             L01,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0013
       LOADW           L04,L02 -> L03
       CALL_2S         R0119 (L03) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0009
       JUMP            L0003
L0009: JE              L03,G23 [TRUE] L0010
       JIN             L03,G23 [FALSE] L0012
L0010: JIN             L00,G23 [TRUE] L0011
       INSERT_OBJ      L00,G23
L0011: STORE           L05,#01
L0012: INC             L02
       JUMP            L0008
L0013: JZ              L05 [FALSE] L0014
       GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       REMOVE_OBJ      L00
L0014: INC             L00
       JG              L00,#0043 [TRUE] L0015
       JUMP            L0002
L0015: RTRUE           

Routine R1131, 4 locals

       CALL_VS         R0051 (L00,#19) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R1025 (#35,L00) -> -(SP)
       RET_POPPED      
L0001: GET_PROP_ADDR   L00,#0d -> Gef
       JZ              Gef [TRUE] L0002
       GET_PROP_LEN    Gef -> Gef
L0002: PUSH            Gef
       JG              (SP)+,#02 [FALSE] L0003
       GET_PROP_ADDR   L00,#0d -> Gef
       STORE           L03,Gef
       STOREW          L03,#00,L01
       JUMP            L0004
L0003: PUT_PROP        L00,#0d,L01
L0004: CLEAR_ATTR      L00,#00
       CALL_1N         R1130
       RTRUE           

Routine R1132, 3 locals

       JZ              L00 [TRUE] RFALSE
       JIN             L00,L01 [TRUE] L0001
       CALL_VN         R1123 (L00,L01,L02)
L0001: SET_ATTR        L00,#16
       RTRUE           

Routine R1133, 4 locals

       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0051 (L01,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1280 (L01,#4d) -> -(SP)
       GET_PROP        L00,#19 -> Gef
       PUSH            Gef
       MUL             (SP)+,#10 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADW           #2c4a,(SP)+ -> L02
       CALL_VS         R0051 (L02,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RET             L02
L0001: CALL_VS         R0051 (L02,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       PUSH            G02
       STORE           G02,L00
       CALL_VS         R1281 (L02,#0c) -> L03
       PULL            G02
       CALL_VS         R0051 (L03,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RET             L03
L0002: RFALSE          

Routine R1134, 3 locals

       CALL_VS         R1135 (L00,L01) -> L02
       CALL_VS         R0051 (L02,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RET             L02
L0001: RFALSE          

Routine R1135, 6 locals

       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0051 (L01,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R1280 (L01,#4d) -> -(SP)
       GET_PROP        L00,#19 -> Gef
       PUSH            Gef
       MUL             (SP)+,#10 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADW           #2c4a,(SP)+ -> L03
       CALL_VS         R0051 (L03,#0e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0051 (L03,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: RET             L03
L0002: RFALSE          

Routine R1136, 4 locals

       CALL_1N         R1014
       CALL_VS         R1280 (L01,#4d) -> -(SP)
       GET_PROP        L00,#19 -> Gef
       PUSH            Gef
       MUL             (SP)+,#10 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADW           #2c4a,(SP)+ -> L03
       JZ              L03 [TRUE] L0001
       CALL_VS         R0051 (L03,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: CALL_VS         R1280 (L01,#4d) -> -(SP)
       GET_PROP        L00,#19 -> Gef
       PUSH            Gef
       MUL             (SP)+,#10 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       STOREW          #2c4a,(SP)+,L02
       RTRUE           
L0002: CALL_VS         R0051 (L03,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R1025 (#02,L00,L01)
       RTRUE           
L0003: CALL_VN         R1025 (#03,L00,L01)
       RTRUE           

Routine R1137, 4 locals

       CALL_1N         R1014
       CALL_VS         R1280 (L01,#4d) -> -(SP)
       GET_PROP        L00,#19 -> Gef
       PUSH            Gef
       MUL             (SP)+,#10 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       LOADW           #2c4a,(SP)+ -> L03
       CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R1025 (#02,L00,L01)
       RTRUE           
L0001: JE              L03,L02 [FALSE] L0002
       CALL_VS         R1280 (L01,#4d) -> -(SP)
       GET_PROP        L00,#19 -> Gef
       PUSH            Gef
       MUL             (SP)+,#10 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       STOREW          #2c4a,(SP)+,#00
L0002: RTRUE           

Routine R1138, 4 locals

       GET_PROP        L00,#19 -> Gef
       PUSH            Gef
       MUL             (SP)+,#10 -> L03
       STORE           L02,#00
       JUMP            L0002
L0001: INC             L02
       INC             L03
L0002: JL              L02,#10 [FALSE] L0003
       LOADW           #2c4a,L03 -> -(SP)
       JE              (SP)+,L01 [TRUE] RTRUE
       JUMP            L0001
L0003: RFALSE          

Routine R1139, 3 locals

       JZ              L00 [TRUE] RFALSE
       JZ              L01 [TRUE] RFALSE
       CALL_VS         R0051 (L00,#0e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R1111 (L00) -> L00
L0001: JZ              L00 [TRUE] RFALSE
       GET_PROP        L00,#10 -> Gef
       STORE           L02,Gef
L0002: JZ              L02 [TRUE] L0003
       JE              L02,L01 [TRUE] RTRUE
       GET_PARENT      L02 -> L02
       JUMP            L0002
L0003: RFALSE          

Routine R1140, 1 local

       CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R1284 (L00,#0d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       GET_PROP_ADDR   L00,#0d -> Gef
       PUSH            Gef
       LOADW           (SP)+,#00 -> -(SP)
       RET_POPPED      
L0001: GET_PARENT      L00 -> -(SP)
       RET_POPPED      

Routine R1141, 1 local

       CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R1284 (L00,#0d) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       GET_PROP_ADDR   L00,#0d -> Gef
       PUSH            Gef
       LOADW           (SP)+,#01 -> -(SP)
       RET_POPPED      
L0001: RFALSE          

Routine R1142, 3 locals

       CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            G02
       CALL_2S         R1111 (L01) -> G02
       CALL_VS         R1281 (L00,#0c) -> L02
       PULL            G02
L0001: RET             L02

Routine R1143, 4 locals

       CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            G02
       CALL_2S         R1111 (L01) -> G02
       CALL_VS         R1281 (L00,#0b) -> L02
       PULL            G02
L0001: RET             L02

Routine R1144, 2 locals

       CALL_2S         R1109 (L00) -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       CALL_2S         R0072 ((SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       JZ              G0f [FALSE] RTRUE
       CALL_VS         R0166 (L01,L00) -> -(SP)
       RET_POPPED      

Routine R1145, 2 locals

       CALL_VS         R0166 (L01,L00) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS2        R0082 (L01,#01,#00,L00) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       RTRUE           

Routine R1146, 2 locals

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           G47,L01
       CALL_VS         R0904 (#11,L00) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: RFALSE          

Routine R1147, 0 locals

       CALL_2S         R0740 (G23) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RFALSE          
L0001: RET             #ffff

Routine R1148, 0 locals

       CALL_2S         R0740 (G23) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RFALSE          
L0001: RET             #ffff

Routine R1149, 0 locals

       CALL_2S         R0740 (G23) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RFALSE          
L0001: RET             #ffff

Routine R1150, 0 locals

       CALL_2S         R0740 (G23) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RFALSE          
L0001: RET             #ffff

Routine R1151, 12 locals

       STORE           L00,G4e
       STORE           L0a,G4e
       STORE           L0b,G4e
       STORE           G4e,L00
       CALL_VS         R0140 (#01,#08) -> L02
       JE              L02,#01 [FALSE] L0001
       JE              G3d,#2710 [TRUE] L0001
       RET             L02
L0001: STORE           G4e,L00
       CALL_2S         R0123 (G4e) -> L04
       CALL_2S         R0124 (G4e) -> L05
       STORE           L06,#01
       STORE           L07,#0a
       STORE           L09,#00
       LOADB           L04,#00 -> -(SP)
       PULL            Gef
       JE              Gef,#2d,#24,#30 [TRUE] L0002
       JE              Gef,#31,#32,#33 [TRUE] L0002
       JE              Gef,#34,#35,#36 [TRUE] L0002
       JE              Gef,#37,#38,#39 [TRUE] L0002
       RET             #ffff
L0002: LOADB           L04,#00 -> -(SP)
       JE              (SP)+,#2d [FALSE] L0003
       STORE           L06,#ffff
       DEC             L05
       INC             L04
L0003: JZ              L05 [FALSE] L0004
       RET             #ffff
L0004: STORE           L03,#00
L0005: JG              L05,#00 [FALSE] L0018
       LOADB           L04,#00 -> -(SP)
       JL              (SP)+,#61 [TRUE] L0006
       LOADB           L04,#00 -> -(SP)
       SUB             (SP)+,#61 -> -(SP)
       ADD             (SP)+,#0a -> L08
       JUMP            L0007
L0006: LOADB           L04,#00 -> -(SP)
       SUB             (SP)+,#30 -> L08
L0007: INC             L09
       STORE           Gef,L07
       JE              Gef,#02 [FALSE] L0009
       JE              L09,#11 [FALSE] L0008
       RET             #ffff
L0008: JUMP            L0015
L0009: JE              Gef,#0a [FALSE] L0014
       JE              L09,#06 [FALSE] L0010
       RET             #ffff
L0010: JE              L09,#05 [FALSE] L0013
       JG              L03,#0ccc [FALSE] L0011
       RET             #ffff
L0011: JE              L03,#0ccc [FALSE] L0013
       JE              L06,#01 [FALSE] L0012
       JG              L08,#07 [FALSE] L0012
       RET             #ffff
L0012: JE              L06,#ffff [FALSE] L0013
       JG              L08,#08 [FALSE] L0013
       RET             #ffff
L0013: JUMP            L0015
L0014: JE              Gef,#10 [FALSE] L0015
       JE              L09,#05 [FALSE] L0015
       RET             #ffff
L0015: JL              L08,#00 [TRUE] L0016
       JL              L08,L07 [FALSE] L0016
       MUL             L07,L03 -> -(SP)
       ADD             (SP)+,L08 -> L03
       JUMP            L0017
L0016: RET             #ffff
L0017: DEC             L05
       INC             L04
       JUMP            L0005
L0018: MUL             L03,L06 -> G3d
       INC             G4e
       RTRUE           

Routine R1152, 2 locals

       STORE           L00,G4e
       STORE           G4e,L00
       CALL_1S         R0128 -> L01
       JE              L01,"true" [FALSE] L0001
       STORE           G3d,#01
       RTRUE           
L0001: JE              L01,"false" [FALSE] L0002
       STORE           G3d,#00
       RTRUE           
L0002: STORE           G4e,L00
       RET             #ffff

Routine R1153, 2 locals

       DIV             L01,#02 -> -(SP)
       ADD             L00,(SP)+ -> -(SP)
       DIV             (SP)+,L01 -> -(SP)
       MUL             (SP)+,L01 -> -(SP)
       RET_POPPED      

Routine R1154, 4 locals

       STORE           L01,L00
       JL              L00,#00 [FALSE] L0001
       CALL_2N         R1025 (#39)
       RTRUE           
L0001: STORE           L03,#4000
       JUMP            L0003
L0002: DIV             L03,#04 -> L03
L0003: JG              L03,L01 [FALSE] L0004
       JUMP            L0002
L0004: JZ              L03 [TRUE] L0006
       ADD             L02,L03 -> -(SP)
       JL              L01,(SP)+ [TRUE] L0005
       SUB             L01,L02 -> -(SP)
       SUB             (SP)+,L03 -> L01
       MUL             L03,#02 -> -(SP)
       ADD             L02,(SP)+ -> L02
L0005: DIV             L02,#02 -> L02
       DIV             L03,#04 -> L03
       JUMP            L0004
L0006: RET             L02

Routine R1155, 4 locals

       JL              L00,#00 [FALSE] L0001
       SUB             #00,L00 -> -(SP)
       CALL_2S         R1154 ((SP)+) -> -(SP)
       SUB             #00,(SP)+ -> L01
       JUMP            L0002
L0001: CALL_2S         R1154 (L00) -> L01
L0002: STORE           L03,#00
       JUMP            L0004
L0003: STORE           L02,L01
       DIV             L00,L01 -> -(SP)
       DIV             (SP)+,L01 -> -(SP)
       MUL             #02,L01 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       DIV             (SP)+,#03 -> L01
L0004: JE              L02,L01 [TRUE] L0005
       PUSH            L03
       INC             L03
       JL              (SP)+,#64 [FALSE] L0005
       JUMP            L0003
L0005: RET             L01

Routine R1156, 3 locals

       JL              L00,#00 [FALSE] L0001
       PRINT           "<no time>"
       RTRUE           
L0001: JL              L00,#02d0 [TRUE] L0002
       STORE           L02,S914
       SUB             L00,#02d0 -> L00
       JUMP            L0003
L0002: STORE           L02,S915
L0003: DIV             L00,#3c -> L01
       JZ              L01 [FALSE] L0004
       STORE           L01,#0c
L0004: PRINT_NUM       L01
       PRINT           ":"
       MOD             L00,#3c -> -(SP)
       JL              (SP)+,#0a [FALSE] L0005
       PRINT           "0"
L0005: MOD             L00,#3c -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " "
       PRINT_PADDR     L02
       RTRUE           

Routine R1157, 5 locals

       DIV             L00,#3c -> -(SP)
       MOD             (SP)+,#0c -> L01
       MOD             L00,#3c -> L02
       JZ              L01 [FALSE] L0001
       STORE           L01,#0c
L0001: JZ              L02 [FALSE] L0002
       CALL_2N         R0964 (L01)
       PRINT           " o'clock"
       RTRUE           
L0002: STORE           L03,S916
       JG              L02,#1e [FALSE] L0004
       SUB             #3c,L02 -> L02
       ADD             L01,#01 -> -(SP)
       MOD             (SP)+,#0c -> L01
       JZ              L01 [FALSE] L0003
       STORE           L01,#0c
L0003: STORE           L03,S917
L0004: STORE           Gef,L02
       JE              Gef,#0f [FALSE] L0005
       PRINT           "quarter"
       JUMP            L0008
L0005: JE              Gef,#1e [FALSE] L0006
       PRINT           "half"
       JUMP            L0008
L0006: CALL_2N         R0964 (L02)
       MOD             L02,#05 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JE              L02,#01 [FALSE] L0007
       PRINT           " minute"
       JUMP            L0008
L0007: PRINT           " minutes"
L0008: PRINT           " "
       PRINT_PADDR     L03
       PRINT           " "
       CALL_2N         R0964 (L01)
       RTRUE           

Routine R1158, 11 locals

       STORE           L0a,G4e
       STORE           G4e,L0a
       CALL_1S         R0128 -> L00
       STORE           Gef,L00
       JE              Gef,"midnight" [FALSE] L0001
       STORE           G3d,#00
       RTRUE           
L0001: JE              Gef,"midday","noon" [FALSE] L0002
       STORE           G3d,#02d0
       RTRUE           
L0002: SUB             G4e,#01 -> -(SP)
       CALL_2S         R0123 ((SP)+) -> L02
       SUB             G4e,#01 -> -(SP)
       CALL_2S         R0124 ((SP)+) -> L03
       STORE           L09,#00
L0003: JL              L09,L03 [FALSE] L0010
       LOADB           L02,L09 -> -(SP)
       PULL            Gef
       JE              Gef,#3a [FALSE] L0006
       JZ              L04 [FALSE] L0004
       JG              L09,#00 [FALSE] L0004
       SUB             L03,#01 -> -(SP)
       JL              L09,(SP)+ [FALSE] L0004
       STORE           L04,#01
       JUMP            L0005
L0004: STORE           L05,#01
L0005: JUMP            L0009
L0006: JE              Gef,#30,#31,#32 [TRUE] L0007
       JE              Gef,#33,#34,#35 [TRUE] L0007
       JE              Gef,#36,#37,#38 [TRUE] L0007
       JE              Gef,#39 [FALSE] L0008
L0007: JUMP            L0009
L0008: STORE           L05,#01
L0009: INC             L09
       JUMP            L0003
L0010: JL              L03,#03 [TRUE] L0011
       JG              L03,#05 [TRUE] L0011
       JZ              L05 [TRUE] L0012
L0011: STORE           L04,#00
L0012: JZ              L04 [TRUE] L0021
       STORE           L09,#00
       JUMP            L0014
L0013: INC             L09
       MUL             L07,#0a -> L07
L0014: LOADB           L02,L09 -> -(SP)
       JE              (SP)+,#3a [TRUE] L0015
       LOADB           L02,L09 -> -(SP)
       ADD             L07,(SP)+ -> -(SP)
       SUB             (SP)+,#30 -> L07
       JUMP            L0013
L0015: DIV             L07,#0a -> L07
       INC             L09
       JUMP            L0017
L0016: INC             L09
       MUL             L08,#0a -> L08
L0017: JL              L09,L03 [FALSE] L0018
       LOADB           L02,L09 -> -(SP)
       ADD             L08,(SP)+ -> -(SP)
       SUB             (SP)+,#30 -> L08
       JUMP            L0016
L0018: DIV             L08,#0a -> L08
       CALL_1S         R0128 -> L01
       CALL_VS         R1159 (L07,L08,L01) -> G3d
       JE              G3d,#ffff [FALSE] L0019
       RET             #ffff
L0019: JE              L01,"pm","am" [TRUE] L0020
       DEC             G4e
L0020: RTRUE           
L0021: STORE           L06,#ffff
       JE              L00,"half" [FALSE] L0022
       STORE           L06,#1e
L0022: JE              L00,"quarter" [FALSE] L0023
       STORE           L06,#0f
L0023: JL              L06,#00 [FALSE] L0024
       SUB             G4e,#01 -> -(SP)
       CALL_2S         R0177 ((SP)+) -> L06
L0024: JL              L06,#00 [TRUE] L0025
       JL              L06,#3c [TRUE] L0026
L0025: RET             #ffff
L0026: CALL_1S         R0128 -> L01
       STORE           Gef,L01
       JE              Gef,"o'clock","am","pm" [TRUE] L0027
       JE              Gef,#ffff [FALSE] L0029
L0027: STORE           L07,L06
       JG              L07,#0c [FALSE] L0028
       RET             #ffff
L0028: JUMP            L0038
L0029: JE              Gef,"to","past" [FALSE] L0035
       STORE           L08,L06
       CALL_2S         R0177 (G4e) -> L07
       JG              L07,#00 [TRUE] L0032
       CALL_1S         R0128 -> -(SP)
       PULL            Gef
       JE              Gef,"noon","midday" [FALSE] L0030
       STORE           L07,#0c
       JUMP            L0032
L0030: JE              Gef,"midnight" [FALSE] L0031
       STORE           L07,#00
       JUMP            L0032
L0031: RET             #ffff
L0032: JL              L07,#0d [TRUE] L0033
       RET             #ffff
L0033: JE              L01,"to" [FALSE] L0034
       SUB             #3c,L08 -> L08
       DEC             L07
       JL              L07,#00 [FALSE] L0034
       STORE           L07,#17
L0034: INC             G4e
       CALL_1S         R0128 -> L01
       JUMP            L0038
L0035: STORE           L07,L06
       DEC             G4e
       PUSH            G4e
       CALL_2S         R0177 ((SP)+) -> L08
       JL              L08,#00 [TRUE] L0036
       JL              L08,#3c [TRUE] L0037
L0036: RET             #ffff
L0037: INC             G4e
       CALL_1S         R0128 -> L01
L0038: CALL_VS         R1159 (L07,L08,L01) -> G3d
       JL              G3d,#00 [FALSE] L0039
       RET             #ffff
L0039: JE              L01,"pm","am","o'clock" [TRUE] L0040
       DEC             G4e
L0040: RTRUE           

Routine R1159, 4 locals

       JL              L00,#18 [TRUE] L0001
       RET             #ffff
L0001: JL              L01,#3c [TRUE] L0002
       RET             #ffff
L0002: MUL             L00,#3c -> -(SP)
       ADD             (SP)+,L01 -> L03
       JL              L00,#0d [TRUE] L0003
       RET             L03
L0003: MOD             L03,#02d0 -> L03
       JE              L02,"pm" [FALSE] L0004
       ADD             L03,#02d0 -> L03
L0004: JE              L02,"am","pm" [TRUE] L0005
       JE              L00,#0c [FALSE] L0005
       ADD             L03,#02d0 -> L03
L0005: RET             L03

Routine R1160, 6 locals

       STORE           L05,G4e
       STORE           G4e,L05
       CALL_1S         R0128 -> L00
       DEC             G4e
       JE              L00,"an","a" [FALSE] L0001
       STORE           L04,#01
       JUMP            L0002
L0001: CALL_2S         R0177 (G4e) -> L04
L0002: JE              L04,#fc18 [FALSE] L0008
       CALL_1S         R0128 -> L00
       JE              L00,"half" [FALSE] L0003
       STORE           L02,#1e
L0003: JE              L00,"quarter" [FALSE] L0004
       STORE           L02,#0f
L0004: JG              L02,#00 [FALSE] L0007
       CALL_1S         R0128 -> L01
       JE              L01,"of" [FALSE] L0005
       CALL_1S         R0128 -> L01
L0005: JE              L01,"an" [FALSE] L0006
       CALL_1S         R0128 -> L01
L0006: JE              L01,"hour" [FALSE] L0007
       STORE           G3d,L02
       RTRUE           
L0007: RET             #ffff
L0008: INC             G4e
       CALL_1S         R0128 -> L00
       STORE           Gef,L00
       JE              Gef,"minutes","minute" [FALSE] L0009
       STORE           L03,#01
       JUMP            L0011
L0009: JE              Gef,"hours","hour" [FALSE] L0010
       STORE           L03,#3c
       JUMP            L0011
L0010: RET             #ffff
L0011: MUL             L04,L03 -> G3d
       JE              L03,#3c [FALSE] L0013
       CALL_2S         R0177 (G4e) -> L04
       JE              L04,#fc18 [TRUE] L0013
       INC             G4e
       CALL_1S         R0128 -> L00
       JE              L00,"minutes","minute" [FALSE] L0012
       ADD             G3d,L04 -> G3d
       JUMP            L0013
L0012: SUB             G4e,#02 -> G4e
L0013: RTRUE           

Routine R1161, 2 locals

       STORE           L01,#00
L0001: JL              L01,#01 [FALSE] L0003
       LOADW           #1d48,L01 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       ADD             L01,#01 -> -(SP)
       CALL_2S         L00 ((SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: INC             L01
       JUMP            L0001
L0003: RFALSE          

Routine R1162, 2 locals

       JG              L00,#00 [TRUE] L0001
       RFALSE          
L0001: JE              L01,#01,#02 [FALSE] L0003
       SUB             L00,#01 -> -(SP)
       LOADW           #1d4e,(SP)+ -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R1025 (#37,L00) -> -(SP)
       RET_POPPED      
L0002: JUMP            L0004
L0003: SUB             L00,#01 -> -(SP)
       LOADW           #1d4e,(SP)+ -> -(SP)
       JG              (SP)+,#01 [TRUE] L0004
       CALL_VS         R1025 (#38,L00) -> -(SP)
       RET_POPPED      
L0004: STORE           Gef,L01
       JE              Gef,#01 [FALSE] L0005
       SUB             L00,#01 -> -(SP)
       LOADW           #1d3c,(SP)+ -> -(SP)
       SUB             G1b,(SP)+ -> -(SP)
       MOD             (SP)+,#05a0 -> -(SP)
       RET_POPPED      
L0005: JE              Gef,#02 [FALSE] L0006
       SUB             L00,#01 -> -(SP)
       LOADW           #1d3c,(SP)+ -> -(SP)
       RET_POPPED      
L0006: JE              Gef,#03 [FALSE] L0007
       SUB             L00,#01 -> -(SP)
       LOADW           #1d42,(SP)+ -> -(SP)
       SUB             G1b,(SP)+ -> -(SP)
       MOD             (SP)+,#05a0 -> -(SP)
       RET_POPPED      
L0007: JE              Gef,#04 [FALSE] L0008
       SUB             L00,#01 -> -(SP)
       LOADW           #1d42,(SP)+ -> -(SP)
       RET_POPPED      
L0008: RTRUE           

Routine R1163, 1 local
    Parsing routine for:
        "go noun = [parse $7212]"

       STORE           L00,G32
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R1164, 1 local
    Parsing routine for:
        "clear noun noun = [parse $7218]"

       STORE           L00,G32
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R1165, 1 local
    Parsing routine for:
        "clear noun to noun = [parse $721e]"

       STORE           L00,G32
       CALL_VS         R0051 (G32,#1c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: RET_POPPED      

Routine R1166, 1 local
    Parsing routine for:
        "switch noun = [parse $7224]"

       STORE           L00,G32
       CALL_VS         R0051 (G32,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_2S         R0736 (G32) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PUSH            #01
       JUMP            L0002
L0001: PUSH            #00
L0002: RET_POPPED      

Routine R1167, 4 locals

       STORE           L01,G2d
       STORE           L02,G2e
       STORE           G2d,G32
       STORE           G2e,G33
       CALL_2S         R1038 (#1a) -> L03
       STORE           G2d,L01
       STORE           G2e,L02
       JZ              L03 [TRUE] L0005
       CALL_1S         R1050 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       CALL_1S         R1051 -> L00
       JE              L00,S228 [FALSE] L0001
       RET             #04
L0001: JE              L00,S229 [FALSE] L0002
       RET             #03
L0002: JE              L00,S230 [FALSE] L0003
       RET             #02
L0003: JE              L00,S231 [FALSE] L0004
       RTRUE           
L0004: JE              L00,S232 [FALSE] L0005
       RFALSE          
L0005: RET             #02

Routine R1168, 0 locals

       RFALSE          

Routine R1169, 0 locals

       RFALSE          

Routine R1170, 0 locals

       RFALSE          

Routine R1171, 0 locals

       RFALSE          

Routine R1172, 4 locals

       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JG              L01,#00 [TRUE] L0001
       CALL_2N         R0780 (L00)
L0001: CALL_VS2        R1085 (#2ec0,#69,#69,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           L02,#2ec0
       CALL_VS         R1082 (L02,#69,L00) -> L03
       JG              L01,#00 [TRUE] L0002
       CALL_VN         R1089 (L02,L03)
       JUMP            L0003
L0002: CALL_VN2        R1086 (L02,#6a,L03,#01,L01)
L0003: JUMP            L0005
L0004: JG              L01,#00 [FALSE] L0005
       STORE           L02,#2ec0
       CALL_2S         R1094 (L02) -> L03
       CALL_VN2        R1086 (L02,#69,L03,#01,L00)
       CALL_VN2        R1086 (L02,#6a,L03,#01,L01)
L0005: RFALSE          

Routine R1173, 1 local

       CALL_VN         R0904 (#1d,L00)
       RFALSE          

Routine R1174, 0 locals

       RFALSE          

Routine R1175, 1 local

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: CALL_VN         R0094 ((SP)+,#08)
       RFALSE          

Routine R1176, 1 local

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: CALL_VN         R0094 ((SP)+,#0108)
       RFALSE          

Routine R1177, 0 locals

       STORE           G05,#01
       CALL_1N         R0947
       CALL_2N         R0965 (S945)
       CALL_1N         R0947
       PRINT           "'"
       CALL_1N         R0947
       CALL_2N         R0965 (S984)
       RTRUE           

Routine R1178, 1 local

       STORE           L00,#00
L0001: JL              L00,#0000 [FALSE] L0002
       LOADW           #4760,L00 -> -(SP)
       STOREW          #475e,L00,(SP)+
       INC             L00
       JUMP            L0001
L0002: RTRUE           

Routine R1179, 1 local

       STORE           L00,#00
L0001: JL              L00,#0000 [FALSE] L0002
       CALL_VN2        R1180 (#00,L00,#01,#ffff)
       INC             L00
       JUMP            L0001
L0002: CALL_1N         R1178
       RFALSE          

Routine R1180, 11 locals

       JZ              L00 [TRUE] L0001
       LOADW           #475e,L01 -> -(SP)
       AND             (SP)+,#01 -> L05
       LOADW           #475e,L01 -> -(SP)
       AND             (SP)+,#fe -> -(SP)
       DIV             (SP)+,#02 -> L06
       LOADW           #475e,L01 -> -(SP)
       AND             (SP)+,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L07
       JUMP            L0005
L0001: LOADW           #4760,L01 -> -(SP)
       AND             (SP)+,#01 -> L04
       LOADW           #4760,L01 -> -(SP)
       AND             (SP)+,#fe -> -(SP)
       DIV             (SP)+,#02 -> L06
       LOADW           #4760,L01 -> -(SP)
       AND             (SP)+,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L07
       STORE           L0a,G12
       ADD             G12,#10 -> G12
       STORE           Gef,L01
       PRINT_PADDR     S918
       STORE           L05,#00
       SUB             G12,#10 -> G12
       JZ              L05 [FALSE] L0002
       STORE           L07,#00
       JUMP            L0004
L0002: JZ              L04 [FALSE] L0003
       INC             L06
       JG              L06,#7f [FALSE] L0003
       STORE           L06,#7f
L0003: JZ              L02 [TRUE] L0004
       INC             L07
       JG              L07,#7f [FALSE] L0004
       STORE           L07,#7f
L0004: MUL             #0100,L07 -> -(SP)
       MUL             #02,L06 -> -(SP)
       ADD             L05,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       STOREW          #4760,L01,(SP)+
L0005: STORE           Gef,L03
       JE              Gef,#00 [FALSE] L0007
       JZ              L05 [TRUE] L0006
       RET             L05
L0006: JUMP            L0014
L0007: JE              Gef,#01 [FALSE] L0009
       JZ              L05 [TRUE] L0008
       RET             L06
L0008: JUMP            L0014
L0009: JE              Gef,#02 [FALSE] L0011
       JZ              L05 [TRUE] L0010
       ADD             L07,#01 -> -(SP)
       RET_POPPED      
L0010: JUMP            L0014
L0011: JE              Gef,#04 [FALSE] L0012
       RET             L05
L0012: JE              Gef,#05 [FALSE] L0013
       RET             L06
L0013: JE              Gef,#06 [FALSE] L0014
       RET             L07
L0014: RFALSE          

Routine R1181, 5 locals

       STORE           L04,#00
L0001: LOADW           #4753,L04 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       LOADW           #4753,L04 -> -(SP)
       CALL_VS         R1281 ((SP)+,#45) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JZ              L00 [TRUE] L0002
       JUMP            L0006
L0002: STORE           Gef,#4757
       STORE           Gee,L04
       LOADW           Gef,Gee -> Ged
       INC             Ged
       STOREW          Gef,Gee,Ged
       ADD             G1a,#05 -> -(SP)
       LOADW           #475b,L04 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0003
       ADD             G1a,#05 -> -(SP)
       STOREW          #475b,L04,(SP)+
       STOREB          #475d,L04,#01
       JZ              G34 [FALSE] L0003
       STORE           Gef,#4759
       STORE           Gee,L04
       LOADW           Gef,Gee -> Ged
       INC             Ged
       STOREW          Gef,Gee,Ged
L0003: JUMP            L0006
L0004: JZ              L01 [FALSE] L0006
       JZ              G34 [FALSE] L0005
       STOREW          #4759,L04,#00
L0005: ADD             G1a,#05 -> -(SP)
       LOADW           #475b,L04 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0006
       STOREB          #475d,L04,#00
L0006: INC             L04
       JUMP            L0001
L0007: RTRUE           

Routine R1182, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1183, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1184, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1185, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1186, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1187, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1188, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1189, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1190, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1191, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1192, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1193, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0018
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0012
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: JUMP            L0012
       JUMP            L0004
L0012: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       INC             L03
       JUMP            L0012
L0013: JZ              L04 [FALSE] L0014
       JG              L03,#00 [FALSE] L0015
L0014: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0015: JE              L0a,#01 [FALSE] L0016
       STORE           L0b,L03
L0016: JE              L0a,#02 [FALSE] L0017
       STORE           L0c,L03
L0017: INC             L0a
       JUMP            L0003
L0018: JL              G40,#03 [TRUE] L0019
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0019: JG              L0b,L03 [FALSE] L0020
       STORE           L03,L0b
L0020: JG              L0c,L03 [FALSE] L0021
       STORE           L03,L0c
L0021: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0022
       RET             #ffff
L0022: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1194, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0021
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0015
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: CALL_1S         R1147 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0012
       JUMP            L0014
L0012: CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"s" [TRUE] L0013
       JUMP            L0014
L0013: STORE           L02,G4e
       STORE           L04,#01
       JUMP            L0004
L0014: STORE           G4e,L02
       JUMP            L0015
       JUMP            L0004
L0015: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       INC             L03
       JUMP            L0015
L0016: JZ              L04 [FALSE] L0017
       JG              L03,#00 [FALSE] L0018
L0017: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0018: JE              L0a,#01 [FALSE] L0019
       STORE           L0b,L03
L0019: JE              L0a,#02 [FALSE] L0020
       STORE           L0c,L03
L0020: INC             L0a
       JUMP            L0003
L0021: JL              G40,#03 [TRUE] L0022
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0022: JG              L0b,L03 [FALSE] L0023
       STORE           L03,L0b
L0023: JG              L0c,L03 [FALSE] L0024
       STORE           L03,L0c
L0024: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0025
       RET             #ffff
L0025: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1195, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0021
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0015
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: CALL_1S         R1148 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0012
       JUMP            L0014
L0012: CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"p" [TRUE] L0013
       JUMP            L0014
L0013: STORE           L02,G4e
       STORE           L04,#01
       JUMP            L0004
L0014: STORE           G4e,L02
       JUMP            L0015
       JUMP            L0004
L0015: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       INC             L03
       JUMP            L0015
L0016: JZ              L04 [FALSE] L0017
       JG              L03,#00 [FALSE] L0018
L0017: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0018: JE              L0a,#01 [FALSE] L0019
       STORE           L0b,L03
L0019: JE              L0a,#02 [FALSE] L0020
       STORE           L0c,L03
L0020: INC             L0a
       JUMP            L0003
L0021: JL              G40,#03 [TRUE] L0022
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0022: JG              L0b,L03 [FALSE] L0023
       STORE           L03,L0b
L0023: JG              L0c,L03 [FALSE] L0024
       STORE           L03,L0c
L0024: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0025
       RET             #ffff
L0025: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1196, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0021
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0015
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: CALL_1S         R1149 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0012
       JUMP            L0014
L0012: CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"f" [TRUE] L0013
       JUMP            L0014
L0013: STORE           L02,G4e
       STORE           L04,#01
       JUMP            L0004
L0014: STORE           G4e,L02
       JUMP            L0015
       JUMP            L0004
L0015: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       INC             L03
       JUMP            L0015
L0016: JZ              L04 [FALSE] L0017
       JG              L03,#00 [FALSE] L0018
L0017: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0018: JE              L0a,#01 [FALSE] L0019
       STORE           L0b,L03
L0019: JE              L0a,#02 [FALSE] L0020
       STORE           L0c,L03
L0020: INC             L0a
       JUMP            L0003
L0021: JL              G40,#03 [TRUE] L0022
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0022: JG              L0b,L03 [FALSE] L0023
       STORE           L03,L0b
L0023: JG              L0c,L03 [FALSE] L0024
       STORE           L03,L0c
L0024: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0025
       RET             #ffff
L0025: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1197, 13 locals

       JL              G40,#03 [TRUE] L0001
       PRINT           "Parse_name called
"
L0001: JE              G48,#1003 [FALSE] L0002
       RFALSE          
L0002: STORE           L00,G4e
       STORE           L0a,#01
L0003: JG              L0a,#03 [TRUE] L0021
       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L04,#00
       STORE           L03,#00
L0004: JZ              #01 [TRUE] L0015
       JE              G48,#1003 [TRUE] L0007
       JE              L0a,#01 [FALSE] L0007
L0005: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           L04,#01
       JUMP            L0005
L0006: DEC             G4e
       STORE           L02,G4e
L0007: JE              L0a,#01,#02 [FALSE] L0008
L0008: JE              G48,#1003 [TRUE] L0011
       JE              L0a,#01 [FALSE] L0011
L0009: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L04,#01
       JUMP            L0009
L0010: DEC             G4e
       STORE           L02,G4e
L0011: CALL_1S         R1150 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0012
       JUMP            L0014
L0012: CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"a" [TRUE] L0013
       JUMP            L0014
L0013: STORE           L02,G4e
       STORE           L04,#01
       JUMP            L0004
L0014: STORE           G4e,L02
       JUMP            L0015
       JUMP            L0004
L0015: CALL_1S         R0128 -> -(SP)
       CALL_VS         R0175 ((SP)+,Geb,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       INC             L03
       JUMP            L0015
L0016: JZ              L04 [FALSE] L0017
       JG              L03,#00 [FALSE] L0018
L0017: ADD             L03,L02 -> -(SP)
       SUB             (SP)+,L00 -> L03
L0018: JE              L0a,#01 [FALSE] L0019
       STORE           L0b,L03
L0019: JE              L0a,#02 [FALSE] L0020
       STORE           L0c,L03
L0020: INC             L0a
       JUMP            L0003
L0021: JL              G40,#03 [TRUE] L0022
       PRINT           "Pass 1: "
       PRINT_NUM       L0b
       PRINT           " Pass 2: "
       PRINT_NUM       L0c
       PRINT           " Pass 3: "
       PRINT_NUM       L03
       PRINT           "
"
L0022: JG              L0b,L03 [FALSE] L0023
       STORE           L03,L0b
L0023: JG              L0c,L03 [FALSE] L0024
       STORE           L03,L0c
L0024: ADD             L00,L03 -> G4e
       JZ              L03 [FALSE] L0025
       RET             #ffff
L0025: CALL_VN         R0181 (L00,L03)
       RET             L03

Routine R1198, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"restart" [TRUE] L0001
       JUMP            L0003
L0001: JZ              L01 [TRUE] L0002
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0003
L0002: RET             L05
L0003: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1199, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"restore" [TRUE] L0001
       JUMP            L0003
L0001: JZ              L01 [TRUE] L0002
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0003
L0002: RET             L05
L0003: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1200, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"amusing" [TRUE] L0001
       JUMP            L0003
L0001: JZ              L01 [TRUE] L0002
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0003
L0002: RET             L05
L0003: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1201, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"quit" [TRUE] L0001
       JUMP            L0003
L0001: JZ              L01 [TRUE] L0002
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0003
L0002: RET             L05
L0003: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1202, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"undo" [TRUE] L0001
       JUMP            L0003
L0001: JZ              L01 [TRUE] L0002
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0003
L0002: RET             L05
L0003: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1203, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"her" [TRUE] L0001
       JUMP            L0004
L0001: CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"headphone" [TRUE] L0002
       JUMP            L0004
L0002: JZ              L01 [TRUE] L0003
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0004
L0003: RET             L05
L0004: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1204, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"her" [TRUE] L0001
       JUMP            L0004
L0001: CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"role" [TRUE] L0002
       JUMP            L0004
L0002: JZ              L01 [TRUE] L0003
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0004
L0003: RET             L05
L0004: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1205, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"your" [TRUE] L0001
       JUMP            L0004
L0001: CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"mirror" [TRUE] L0002
       JUMP            L0004
L0002: JZ              L01 [TRUE] L0003
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0004
L0003: RET             L05
L0004: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1206, 6 locals

       STORE           G4e,L00
       STORE           L02,G4e
       STORE           L05,#00
       CALL_1S         R0128 -> -(SP)
       JE              (SP)+,"you" [TRUE] L0001
       JUMP            L0003
L0001: JZ              L01 [TRUE] L0002
       SUB             G4e,L00 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0003
L0002: RET             L05
L0003: STORE           L05,#00
       STORE           G4e,L02
       RET             #ffff

Routine R1207, 0 locals

       RFALSE          

Routine R1208, 1 local

       RFALSE          

Routine R1209, 8 locals

       STORE           Gef,L01
       JE              Gef,#0800 [FALSE] L0001
       GET_PROP        L03,#0c -> Gef
       PUSH            Gef
       JE              L02,(SP)+ [TRUE] RTRUE
       RFALSE          
L0001: JE              Gef,#08 [FALSE] L0011
       JE              L03,#0001,#0003 [FALSE] L0006
       STORE           L04,#002e
       JUMP            L0003
L0002: GET_PROP        L04,#1f -> Gef
       STORE           L04,Gef
L0003: JZ              L04 [TRUE] L0005
       CALL_VS2        R1209 (L00,#0800,L02,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JE              L03,#0003,#0004 [TRUE] RTRUE
       RET             L04
L0004: JUMP            L0002
L0005: JE              L03,#0003,#0004 [TRUE] RFALSE
       CALL_2S         R0241 (#09) -> -(SP)
       RET_POPPED      
L0006: STORE           L04,#003b
       JUMP            L0008
L0007: CALL_VS         R1280 (L04,#53) -> L04
L0008: JZ              L04 [TRUE] L0010
       CALL_VS2        R1209 (L00,#0800,L04,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       JE              L03,#0003,#0004 [TRUE] RTRUE
       RET             L04
L0009: JUMP            L0007
L0010: JE              L03,#0003,#0004 [TRUE] RFALSE
       CALL_2S         R0241 (#09) -> -(SP)
       RET_POPPED      
       JUMP            L0042
L0011: JE              Gef,#04,#02 [FALSE] L0021
       CALL_VN         R1268 (L03,#00)
       JE              L01,#04 [FALSE] L0016
       STORE           L04,#002e
       JUMP            L0013
L0012: GET_PROP        L04,#1f -> Gef
       STORE           L04,Gef
L0013: JZ              L04 [TRUE] L0015
       CALL_VS2        R1209 (L00,#0800,L02,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       CALL_VN         R1269 (L03,L04)
L0014: JUMP            L0012
L0015: JUMP            L0020
L0016: STORE           L04,#003b
       JUMP            L0018
L0017: CALL_VS         R1280 (L04,#53) -> L04
L0018: JZ              L04 [TRUE] L0020
       CALL_VS2        R1209 (L00,#0800,L04,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       CALL_VN         R1269 (L03,L04)
L0019: JUMP            L0017
L0020: RET             L03
L0021: JE              Gef,#01 [FALSE] L0037
       CALL_VN         R1268 (L02,#00)
       JE              L03,#0001 [FALSE] L0029
       STORE           L04,#002e
       JUMP            L0023
L0022: GET_PROP        L04,#1f -> Gef
       STORE           L04,Gef
L0023: JZ              L04 [TRUE] L0028
       STORE           L06,#003b
       JUMP            L0025
L0024: CALL_VS         R1280 (L06,#53) -> L06
L0025: JZ              L06 [TRUE] L0027
       CALL_VS2        R1209 (L00,#0800,L04,L06) -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       CALL_VN2        R1269 (L02,L04,#00,#00,#01)
L0026: JUMP            L0024
L0027: JUMP            L0022
L0028: JUMP            L0036
L0029: JE              L03,#0002 [FALSE] L0036
       STORE           L04,#002e
       JUMP            L0031
L0030: GET_PROP        L04,#1f -> Gef
       STORE           L04,Gef
L0031: JZ              L04 [TRUE] L0036
       STORE           L06,#003b
       JUMP            L0033
L0032: CALL_VS         R1280 (L06,#53) -> L06
L0033: JZ              L06 [TRUE] L0035
       CALL_VS2        R1209 (L00,#0800,L04,L06) -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       CALL_VN2        R1269 (L02,L06,#00,#00,#01)
L0034: JUMP            L0032
L0035: JUMP            L0030
L0036: RET             L02
L0037: JE              Gef,#0400 [FALSE] L0038
       PUT_PROP        L03,#0c,L02
       RTRUE           
L0038: JE              Gef,#0200 [FALSE] L0039
       CALL_VN         R0994 (L03,#0c,L02)
       RTRUE           
L0039: JE              Gef,#0100 [FALSE] L0040
       CALL_VN         R1010 (L00,#00)
       RTRUE           
L0040: JE              Gef,#80 [FALSE] L0041
       LOADW           L00,#06 -> -(SP)
       CALL_VS         R1020 ((SP)+,L02,L03) -> -(SP)
       RET_POPPED      
L0041: JE              Gef,#40 [FALSE] L0042
       LOADW           L00,#06 -> -(SP)
       CALL_VS         R1020 ((SP)+,L02,L03) -> -(SP)
       CALL_VS         R1019 ((SP)+,L02,L03) -> -(SP)
       RET_POPPED      
L0042: RFALSE          

Routine R1210, 8 locals

       STORE           Gef,L01
       JE              Gef,#0800 [FALSE] L0001
       GET_PROP        L03,#17 -> Gef
       PUSH            Gef
       JE              L02,(SP)+ [TRUE] RTRUE
       RFALSE          
L0001: JE              Gef,#08 [FALSE] L0011
       JE              L03,#0001,#0003 [FALSE] L0006
       STORE           L04,#0029
       JUMP            L0003
L0002: GET_PROP        L04,#20 -> Gef
       STORE           L04,Gef
L0003: JZ              L04 [TRUE] L0005
       CALL_VS2        R1210 (L00,#0800,L02,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JE              L03,#0003,#0004 [TRUE] RTRUE
       RET             L04
L0004: JUMP            L0002
L0005: JE              L03,#0003,#0004 [TRUE] RFALSE
       CALL_2S         R0241 (#09) -> -(SP)
       RET_POPPED      
L0006: STORE           L04,#0029
       JUMP            L0008
L0007: GET_PROP        L04,#20 -> Gef
       STORE           L04,Gef
L0008: JZ              L04 [TRUE] L0010
       CALL_VS2        R1210 (L00,#0800,L04,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       JE              L03,#0003,#0004 [TRUE] RTRUE
       RET             L04
L0009: JUMP            L0007
L0010: JE              L03,#0003,#0004 [TRUE] RFALSE
       CALL_2S         R0241 (#09) -> -(SP)
       RET_POPPED      
       JUMP            L0042
L0011: JE              Gef,#04,#02 [FALSE] L0021
       CALL_VN         R1268 (L03,#00)
       JE              L01,#04 [FALSE] L0016
       STORE           L04,#0029
       JUMP            L0013
L0012: GET_PROP        L04,#20 -> Gef
       STORE           L04,Gef
L0013: JZ              L04 [TRUE] L0015
       CALL_VS2        R1210 (L00,#0800,L02,L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       CALL_VN         R1269 (L03,L04)
L0014: JUMP            L0012
L0015: JUMP            L0020
L0016: STORE           L04,#0029
       JUMP            L0018
L0017: GET_PROP        L04,#20 -> Gef
       STORE           L04,Gef
L0018: JZ              L04 [TRUE] L0020
       CALL_VS2        R1210 (L00,#0800,L04,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       CALL_VN         R1269 (L03,L04)
L0019: JUMP            L0017
L0020: RET             L03
L0021: JE              Gef,#01 [FALSE] L0037
       CALL_VN         R1268 (L02,#00)
       JE              L03,#0001 [FALSE] L0029
       STORE           L04,#0029
       JUMP            L0023
L0022: GET_PROP        L04,#20 -> Gef
       STORE           L04,Gef
L0023: JZ              L04 [TRUE] L0028
       STORE           L06,#0029
       JUMP            L0025
L0024: GET_PROP        L06,#20 -> Gef
       STORE           L06,Gef
L0025: JZ              L06 [TRUE] L0027
       CALL_VS2        R1210 (L00,#0800,L04,L06) -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       CALL_VN2        R1269 (L02,L04,#00,#00,#01)
L0026: JUMP            L0024
L0027: JUMP            L0022
L0028: JUMP            L0036
L0029: JE              L03,#0002 [FALSE] L0036
       STORE           L04,#0029
       JUMP            L0031
L0030: GET_PROP        L04,#20 -> Gef
       STORE           L04,Gef
L0031: JZ              L04 [TRUE] L0036
       STORE           L06,#0029
       JUMP            L0033
L0032: GET_PROP        L06,#20 -> Gef
       STORE           L06,Gef
L0033: JZ              L06 [TRUE] L0035
       CALL_VS2        R1210 (L00,#0800,L04,L06) -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       CALL_VN2        R1269 (L02,L06,#00,#00,#01)
L0034: JUMP            L0032
L0035: JUMP            L0030
L0036: RET             L02
L0037: JE              Gef,#0400 [FALSE] L0038
       PUT_PROP        L03,#17,L02
       RTRUE           
L0038: JE              Gef,#0200 [FALSE] L0039
       CALL_VN         R0994 (L03,#17,L02)
       RTRUE           
L0039: JE              Gef,#0100 [FALSE] L0040
       CALL_VN         R1010 (L00,#00)
       RTRUE           
L0040: JE              Gef,#80 [FALSE] L0041
       LOADW           L00,#06 -> -(SP)
       CALL_VS         R1020 ((SP)+,L02,L03) -> -(SP)
       RET_POPPED      
L0041: JE              Gef,#40 [FALSE] L0042
       LOADW           L00,#06 -> -(SP)
       CALL_VS         R1020 ((SP)+,L02,L03) -> -(SP)
       CALL_VS         R1019 ((SP)+,L02,L03) -> -(SP)
       RET_POPPED      
L0042: RFALSE          

Routine R1211, 2 locals

       RTRUE           

Routine R1212, 2 locals

       CALL_2S         R1116 (G23) -> L00
       JUMP            L0002
L0001: CALL_VS         R1116 (G23,L00) -> L00
L0002: JZ              L00 [TRUE] L0004
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0723 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STOREW          #1b3c,#00,L00
       RTRUE           
L0003: JUMP            L0001
L0004: RFALSE          

Routine R1213, 2 locals

       JG              L01,#00 [FALSE] L0001
       DEC             L01
       JUMP            L0005
L0001: JZ              L00 [TRUE] L0002
       JUMP            L0005
L0002: STORE           L00,#0029
       JUMP            L0004
L0003: GET_PROP        L00,#20 -> Gef
       STORE           L00,Gef
L0004: JZ              L00 [TRUE] L0006
       RET             L00
L0005: JUMP            L0003
L0006: RFALSE          

Routine R1214, 2 locals

       JG              L01,#00 [FALSE] L0001
       DEC             L01
       JUMP            L0005
L0001: JZ              L00 [TRUE] L0002
       JUMP            L0005
L0002: STORE           L00,#0029
       JUMP            L0004
L0003: GET_PROP        L00,#20 -> Gef
       STORE           L00,Gef
L0004: JZ              L00 [TRUE] L0006
       RET             L00
L0005: JUMP            L0003
L0006: RFALSE          

Routine R1215, 2 locals

       JG              L01,#00 [FALSE] L0001
       DEC             L01
       JUMP            L0005
L0001: JZ              L00 [TRUE] L0002
       JUMP            L0005
L0002: STORE           L00,#0029
       JUMP            L0004
L0003: GET_PROP        L00,#20 -> Gef
       STORE           L00,Gef
L0004: JZ              L00 [TRUE] L0006
       RET             L00
L0005: JUMP            L0003
L0006: RFALSE          

Routine R1216, 3 locals

       STORE           L00,#0029
       JUMP            L0002
L0001: GET_PROP        L00,#20 -> Gef
       STORE           L00,Gef
L0002: JZ              L00 [TRUE] L0004
       CALL_2S         R0719 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L02
       JUMP            L0003
L0003: JUMP            L0001
L0004: RET             L02

Routine R1217, 2 locals

       JG              L01,#00 [FALSE] L0001
       DEC             L01
       JUMP            L0005
L0001: JZ              L00 [TRUE] L0002
       JUMP            L0005
L0002: STORE           L00,#0029
       JUMP            L0004
L0003: GET_PROP        L00,#20 -> Gef
       STORE           L00,Gef
L0004: JZ              L00 [TRUE] L0006
       CALL_2S         R0719 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RET             L00
L0005: JUMP            L0003
L0006: RFALSE          

Routine R1218, 8 locals

       JL              L00,#00 [TRUE] L0001
       STORE           L01,L00
       STORE           L00,#ffff
L0001: STORE           Gef,L00
       JE              Gef,#fffa [FALSE] L0010
       JG              G0e,#00 [FALSE] L0002
       STORE           L06,#8000
       JUMP            L0003
L0002: STORE           L06,#7fff
L0003: STORE           L01,#0029
       JUMP            L0005
L0004: GET_PROP        L01,#20 -> Gef
       STORE           L01,Gef
L0005: JZ              L01 [TRUE] L0009
       CALL_2S         R0722 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JG              G0e,#00 [FALSE] L0007
       CALL_VS         R1280 (L01,G0d) -> -(SP)
       JL              (SP)+,L06 [TRUE] L0006
       CALL_VS         R1280 (L01,G0d) -> L06
       STORE           L07,L01
L0006: JUMP            L0008
L0007: CALL_VS         R1280 (L01,G0d) -> -(SP)
       JG              (SP)+,L06 [TRUE] L0008
       CALL_VS         R1280 (L01,G0d) -> L06
       STORE           L07,L01
L0008: JUMP            L0004
L0009: RET             L07
L0010: JE              Gef,#fffb [FALSE] L0015
       STORE           L01,#0029
       JUMP            L0012
L0011: GET_PROP        L01,#20 -> Gef
       STORE           L01,Gef
L0012: JZ              L01 [TRUE] L0014
       CALL_2S         R0722 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       CALL_VS         R1280 (L01,G0d) -> -(SP)
       ADD             L03,(SP)+ -> L03
       JUMP            L0013
L0013: JUMP            L0011
L0014: RET             L03
L0015: JE              Gef,#fffc [FALSE] L0025
       STORE           L05,#ffff
L0016: JZ              #01 [TRUE] L0024
       STORE           L04,#00
       STORE           L01,#0029
       JUMP            L0018
L0017: GET_PROP        L01,#20 -> Gef
       STORE           L01,Gef
L0018: JZ              L01 [TRUE] L0021
       CALL_2S         R0722 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       INC             L04
       JE              L04,L05 [FALSE] L0019
       RET             L01
L0019: JUMP            L0020
L0020: JUMP            L0017
L0021: JZ              L04 [TRUE] L0022
       JL              L05,#00 [TRUE] L0023
L0022: RFALSE          
L0023: RANDOM          L04 -> L05
       JUMP            L0016
L0024: JUMP            L0039
L0025: JE              Gef,#fffd [FALSE] L0030
       STORE           L01,#0029
       JUMP            L0027
L0026: GET_PROP        L01,#20 -> Gef
       STORE           L01,Gef
L0027: JZ              L01 [TRUE] L0029
       CALL_2S         R0722 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       INC             L04
       JUMP            L0028
L0028: JUMP            L0026
L0029: RET             L04
L0030: JE              Gef,#fffe [FALSE] L0037
       JG              L02,#00 [FALSE] L0031
       DEC             L02
       JUMP            L0035
L0031: JZ              L01 [TRUE] L0032
       JUMP            L0035
L0032: STORE           L01,#0029
       JUMP            L0034
L0033: GET_PROP        L01,#20 -> Gef
       STORE           L01,Gef
L0034: JZ              L01 [TRUE] L0036
       CALL_2S         R0722 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0035
       RET             L01
L0035: JUMP            L0033
L0036: RFALSE          
L0037: JE              Gef,#ffff [FALSE] L0039
       CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0038
       CALL_2S         R0722 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0038
       RTRUE           
L0038: RFALSE          
L0039: RTRUE           

Routine R1219, 3 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L01
       JZ              L01 [TRUE] L0004
L0002: GET_PARENT      L01 -> -(SP)
       CALL_2S         R1117 (L01) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0696 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       RTRUE           
L0003: GET_SIBLING     L01 -> L01 [TRUE] L0002
L0004: RFALSE          

Routine R1220, 3 locals

       JG              L02,#00 [FALSE] L0001
       DEC             L02
       JUMP            L0005
L0001: JZ              L01 [TRUE] L0002
       JUMP            L0005
L0002: GET_CHILD       L00 -> -(SP) [FALSE] L0003
L0003: PULL            L01
       JZ              L01 [TRUE] L0006
L0004: GET_PARENT      L01 -> -(SP)
       CALL_2S         R1117 (L01) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0005
       CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RET             L01
L0005: GET_SIBLING     L01 -> L01 [TRUE] L0004
L0006: RFALSE          

Routine R1221, 3 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L01
       JZ              L01 [TRUE] L0004
L0002: GET_PARENT      L01 -> -(SP)
       CALL_2S         R1117 (L01) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0696 (L01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       RTRUE           
L0003: GET_SIBLING     L01 -> L01 [TRUE] L0002
L0004: RFALSE          

Routine R1222, 3 locals

       JG              L02,#00 [FALSE] L0001
       DEC             L02
       JUMP            L0005
L0001: JZ              L01 [TRUE] L0002
       JUMP            L0005
L0002: GET_CHILD       L00 -> -(SP) [FALSE] L0003
L0003: PULL            L01
       JZ              L01 [TRUE] L0006
L0004: GET_PARENT      L01 -> -(SP)
       CALL_2S         R1117 (L01) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0005
       CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RET             L01
L0005: GET_SIBLING     L01 -> L01 [TRUE] L0004
L0006: RFALSE          

Routine R1223, 3 locals

       GET_CHILD       G28 -> -(SP) [FALSE] L0001
L0001: PULL            L00
       JZ              L00 [TRUE] L0004
L0002: GET_PARENT      L00 -> -(SP)
       CALL_2S         R1118 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L02
       JUMP            L0003
L0003: GET_SIBLING     L00 -> L00 [TRUE] L0002
L0004: RET             L02

Routine R1224, 2 locals

       STORE           L00,#00
L0001: JZ              #00 [TRUE] L0003
       CALL_2S         R1107 (L00) -> -(SP)
       JE              G28,(SP)+ [FALSE] L0002
       STOREW          #1b3c,#00,L00
       RTRUE           
L0002: JUMP            L0001
L0003: RFALSE          

Routine R1225, 2 locals

       JG              L01,#00 [FALSE] L0001
       DEC             L01
       JUMP            L0005
L0001: JZ              L00 [TRUE] L0002
       JUMP            L0005
L0002: GET_CHILD       G28 -> -(SP) [FALSE] L0003
L0003: PULL            L00
       JZ              L00 [TRUE] L0006
L0004: GET_PARENT      L00 -> -(SP)
       CALL_2S         R1118 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0005
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RET             L00
L0005: GET_SIBLING     L00 -> L00 [TRUE] L0004
L0006: RFALSE          

Routine R1226, 3 locals

       GET_CHILD       G28 -> -(SP) [FALSE] L0001
L0001: PULL            L00
       JZ              L00 [TRUE] L0004
L0002: GET_PARENT      L00 -> -(SP)
       CALL_2S         R1118 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L02
       JUMP            L0003
L0003: GET_SIBLING     L00 -> L00 [TRUE] L0002
L0004: RET             L02

Routine R1227, 4 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L01
       JZ              L01 [TRUE] L0004
L0002: GET_PARENT      L01 -> -(SP)
       CALL_2S         R1117 (L01) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L03
       JUMP            L0003
L0003: GET_SIBLING     L01 -> L01 [TRUE] L0002
L0004: RET             L03

Routine R1228, 4 locals

       CALL_2S         R1116 (L00) -> L01
       JUMP            L0002
L0001: CALL_VS         R1116 (L00,L01) -> L01
L0002: JZ              L01 [TRUE] L0004
       CALL_VS         R0051 (L01,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L03
       JUMP            L0003
L0003: JUMP            L0001
L0004: RET             L03

Routine R1229, 3 locals

       GET_CHILD       G33 -> -(SP) [FALSE] L0001
L0001: PULL            L00
       JZ              L00 [TRUE] L0004
L0002: GET_PARENT      L00 -> -(SP)
       CALL_2S         R1117 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L02
       JUMP            L0003
L0003: GET_SIBLING     L00 -> L00 [TRUE] L0002
L0004: RET             L02

Routine R1230, 3 locals

       CALL_2S         R1116 (G33) -> L00
       JUMP            L0002
L0001: CALL_VS         R1116 (G33,L00) -> L00
L0002: JZ              L00 [TRUE] L0004
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L02
       JUMP            L0003
L0003: JUMP            L0001
L0004: RET             L02

Routine R1231, 2 locals

       CALL_2S         R1116 (G32) -> L00
       JUMP            L0002
L0001: CALL_VS         R1116 (G32,L00) -> L00
L0002: JZ              L00 [TRUE] L0004
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0717 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0713 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       RTRUE           
L0003: JUMP            L0001
L0004: RFALSE          

Routine R1232, 2 locals

       CALL_2S         R1116 (G32) -> L00
       JUMP            L0002
L0001: CALL_VS         R1116 (G32,L00) -> L00
L0002: JZ              L00 [TRUE] L0004
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              L00,G22 [TRUE] L0003
       RTRUE           
L0003: JUMP            L0001
L0004: RFALSE          

Routine R1233, 2 locals

       GET_CHILD       G32 -> -(SP) [FALSE] L0001
L0001: PULL            L00
       JZ              L00 [TRUE] L0004
L0002: GET_PARENT      L00 -> -(SP)
       CALL_2S         R1117 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0717 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0713 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       RTRUE           
L0003: GET_SIBLING     L00 -> L00 [TRUE] L0002
L0004: RFALSE          

Routine R1234, 2 locals

       GET_CHILD       G32 -> -(SP) [FALSE] L0001
L0001: PULL            L00
       JZ              L00 [TRUE] L0004
L0002: GET_PARENT      L00 -> -(SP)
       CALL_2S         R1117 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              L00,G22 [TRUE] L0003
       RTRUE           
L0003: GET_SIBLING     L00 -> L00 [TRUE] L0002
L0004: RFALSE          

Routine R1235, 2 locals

       CALL_2S         R1116 (G32) -> L00
       JUMP            L0002
L0001: CALL_VS         R1116 (G32,L00) -> L00
L0002: JZ              L00 [TRUE] L0004
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0717 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0713 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       RTRUE           
L0003: JUMP            L0001
L0004: RFALSE          

Routine R1236, 2 locals

       GET_CHILD       G32 -> -(SP) [FALSE] L0001
L0001: PULL            L00
       JZ              L00 [TRUE] L0004
L0002: GET_PARENT      L00 -> -(SP)
       CALL_2S         R1117 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       CALL_VS         R0051 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0717 (L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_2S         R0713 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       RTRUE           
L0003: GET_SIBLING     L00 -> L00 [TRUE] L0002
L0004: RFALSE          

Routine R1237, 4 locals

       CALL_VS         R0051 (L00,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1135 (L01,L00) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R1027 (L02,L03)
       RFALSE          

Routine R1238, 4 locals

       CALL_VS         R0051 (L00,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1142 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R1027 (L02,L03)
       RFALSE          

Routine R1239, 4 locals

       CALL_VS         R0051 (L00,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0051 (L01,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1133 (L01,L00) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R1027 (L02,L03)
       RFALSE          

Routine R1240, 4 locals

       CALL_VS         R0051 (L00,#1c) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1133 (L01,L00) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R1027 (L02,L03)
       RFALSE          

Routine R1241, 4 locals

       CALL_VS         R0051 (L01,#0e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R1135 (L01,L00) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R1027 (L02,L03)
       RFALSE          

Routine R1242, 2 locals

       RTRUE           

Routine R1243, 2 locals

       RTRUE           

Routine R1244, 8 locals

       RFALSE          

Routine R1245, 1 local

       JE              L00,#4790 [FALSE] L0001
       RET             #4796
L0001: RFALSE          

Routine R1246, 0 locals

       RTRUE           

Routine R1247, 0 locals

       RTRUE           

Routine R1248, 0 locals

       PRINT_PADDR     S989
       NEW_LINE        
       RTRUE           

Routine R1249, 0 locals

       RFALSE          

Routine R1250, 0 locals

       RFALSE          

Routine R1251, 3 locals

       RTRUE           

Routine R1252, 1 local

       RTRUE           

Routine R1253, 2 locals

       RTRUE           

Routine R1254, 2 locals

       RTRUE           

Routine R1255, 4 locals

       RFALSE          

Routine R1256, 1 local

       RTRUE           

Routine R1257, 1 local

       RTRUE           

Routine R1258, 0 locals

       RTRUE           

Routine R1259, 3 locals

       RTRUE           

Routine R1260, 1 local

       RFALSE          

Routine R1261, 1 local

       RTRUE           

Routine R1262, 6 locals

       RFALSE          

Routine R1263, 4 locals

       RFALSE          

Routine R1264, 4 locals

       RFALSE          

Routine R1265, 1 local

       RTRUE           

Routine R1266, 2 locals

       RFALSE          

Routine R1267, 1 local

       RFALSE          

Routine R1268, 2 locals

       RFALSE          

Routine R1269, 5 locals

       RFALSE          

Routine R1270, 4 locals

       RFALSE          

Routine R1271, 1 local

       RTRUE           

Routine R1272, 5 locals

       LOADW           L00,#08 -> L04
       CALL_VS2        L04 (L00,L01,L02,L03) -> -(SP)
       RET_POPPED      

Routine R1273, 4 locals

       JE              L01,#03 [TRUE] RTRUE
       RFALSE          

Routine R1274, 4 locals

       RFALSE          

Routine R1275, 1 local

       RTRUE           

Routine R1276, 2 locals

       RTRUE           

Routine R1277, 3 locals

       LOADW           L00,#08 -> L02
       CALL_VS         L02 (L00,#03,L01) -> -(SP)
       RET_POPPED      

Routine R1278, 0 locals

       RTRUE           

Routine R1279, 4 locals

       CALL_VS         R1282 (L00,L01) -> L03
       JZ              L03 [FALSE] L0001
       CALL_VN         R1286 (S990,L00,L01)
       RTRUE           
L0001: STOREW          L03,#00,L02
       RTRUE           

Routine R1280, 3 locals

       CALL_VS         R1282 (L00,L01) -> L02
       JZ              L02 [FALSE] L0003
       JL              L01,#01 [TRUE] L0002
       JL              L01,#40 [FALSE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       JG              (SP)+,#02 [TRUE] L0002
       GET_PROP        L00,L01 -> Gef
       PUSH            Gef
       RET_POPPED      
L0002: CALL_VN         R1286 (S991,L00,L01)
       RTRUE           
L0003: CALL_VS         R1283 (L00,L01) -> -(SP)
       JG              (SP)+,#02 [FALSE] L0004
       CALL_VN2        R1286 (S992,L00,L01,#02)
L0004: LOADW           L02,#00 -> -(SP)
       RET_POPPED      

Routine R1281, 15 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #0142,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0007
L0001: CALL_2S         R1287 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0003
       JE              L01,#45 [FALSE] L0002
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           Ge9,G2b
       CALL_VS2        L00 (L02,L03,L04,L05,L06,L07) -> L08
       STORE           Geb,Gea
       STORE           Gea,L0b
       RET             L08
L0002: JUMP            L0021
L0003: JE              Gef,#03 [FALSE] L0006
       JE              L01,#46 [FALSE] L0004
       PRINT_PADDR     L00
       RTRUE           
L0004: JE              L01,#47 [FALSE] L0005
       OUTPUT_STREAM   REDIRECT_ENABLE,L02
       PRINT_PADDR     L00
       OUTPUT_STREAM   #fffd
       LOADW           L02,#00 -> -(SP)
       RET_POPPED      
L0005: JUMP            L0021
L0006: JUMP            L0021
L0007: CHECK_ARG_COUNT #03 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #04 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #05 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #06 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #07 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #08 [FALSE] L0008
       INC             L09
L0008: JE              L0d,#01 [FALSE] L0015
       PRINT           "[ ""
       CALL_2N         R0977 (L00)
       PRINT           ""."
       CALL_2N         R1292 (L01)
       PRINT           "("
       STORE           Gef,L09
       JE              Gef,#01 [FALSE] L0009
       PRINT_NUM       L02
       JUMP            L0014
L0009: JE              Gef,#02 [FALSE] L0010
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       JUMP            L0014
L0010: JE              Gef,#03 [FALSE] L0011
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       JUMP            L0014
L0011: JE              Gef,#04 [FALSE] L0012
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       JUMP            L0014
L0012: JE              Gef,#05 [FALSE] L0013
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       PRINT           ","
       PRINT_NUM       L06
       JUMP            L0014
L0013: JE              Gef,#06 [FALSE] L0014
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       PRINT           ","
       PRINT_NUM       L06
       PRINT           ","
       PRINT_NUM       L07
L0014: PRINT           ") ]
"
L0015: JG              L01,#00 [FALSE] L0019
       JL              L01,#40 [FALSE] L0019
       GET_PROP_ADDR   L00,L01 -> Gef
       STORE           L08,Gef
       JZ              L08 [FALSE] L0016
       SUB             L01,#01 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       LOADW           #0a,#00 -> -(SP)
       ADD             (SP)+,(SP)+ -> L08
       STORE           L0d,#02
       JUMP            L0018
L0016: GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0017
       GET_PROP_LEN    Gef -> Gef
L0017: STORE           L0d,Gef
L0018: JUMP            L0025
L0019: JL              L01,#40 [TRUE] L0020
       JL              L01,#45 [FALSE] L0020
       JIN             L00,"Class" [FALSE] L0020
       CALL_VS2        R1290 (L00,L01,L09,L02,L03,L04,L05) -> -(SP)
       RET_POPPED      
L0020: CALL_VS         R1282 (L00,L01) -> L08
       JZ              L08 [FALSE] L0022
L0021: CALL_VN         R1286 (S993,L00,L01)
       RTRUE           
L0022: SUB             L08,#01 -> -(SP)
       LOADB           #00,(SP)+ -> L0d
       AND             L01,#c000 -> -(SP)
       JE              (SP)+,#4000 [FALSE] L0025
       AND             L0d,#c0 -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0023
       STORE           L0d,#01
       JUMP            L0025
L0023: JE              Gef,#40 [FALSE] L0024
       STORE           L0d,#02
       JUMP            L0025
L0024: JE              Gef,#80 [FALSE] L0025
       AND             L0d,#3f -> L0d
L0025: MUL             #02,L0e -> -(SP)
       JL              (SP)+,L0d [FALSE] L0039
       LOADW           L08,L0e -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       LOADW           L08,L0e -> -(SP)
       CALL_2S         R1287 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0036
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           L0c,Ge9
       JE              L01,#ffff [FALSE] L0026
       STORE           Ge9,G57
       JUMP            L0027
L0026: STORE           Ge9,G2b
L0027: STORE           Gef,L09
       JE              Gef,#00 [FALSE] L0028
       LOADW           L08,L0e -> -(SP)
       CALL_1S         (SP)+ -> L0a
       JUMP            L0034
L0028: JE              Gef,#01 [FALSE] L0029
       LOADW           L08,L0e -> -(SP)
       CALL_2S         (SP)+ (L02) -> L0a
       JUMP            L0034
L0029: JE              Gef,#02 [FALSE] L0030
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03) -> L0a
       JUMP            L0034
L0030: JE              Gef,#03 [FALSE] L0031
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03,L04) -> L0a
       JUMP            L0034
L0031: JE              Gef,#04 [FALSE] L0032
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05) -> L0a
       JUMP            L0034
L0032: JE              Gef,#05 [FALSE] L0033
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06) -> L0a
       JUMP            L0034
L0033: JE              Gef,#06 [FALSE] L0034
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06,L07) -> L0a
L0034: STORE           Geb,Gea
       STORE           Gea,L0b
       STORE           Ge9,L0c
       JZ              L0a [TRUE] L0035
       RET             L0a
L0035: JUMP            L0038
L0036: JE              Gef,#03 [FALSE] L0037
       LOADW           L08,L0e -> -(SP)
       PRINT_PADDR     (SP)+
       NEW_LINE        
       RTRUE           
L0037: LOADW           L08,L0e -> -(SP)
       RET_POPPED      
L0038: INC             L0e
       JUMP            L0025
L0039: RFALSE          

Routine R1282, 5 locals

       JZ              L00 [TRUE] RFALSE
       JL              L01,#40 [FALSE] L0001
       JG              L01,#00 [FALSE] L0001
       GET_PROP_ADDR   L00,L01 -> Gef
       PUSH            Gef
       RET_POPPED      
L0001: AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L01,#ff -> -(SP)
       LOADW           #1106,(SP)+ -> L04
       GET_PROP_ADDR   L04,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0051 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       AND             L01,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       GET_PROP        L04,#03 -> Gef
       STORE           L02,Gef
L0002: JG              L01,#00 [FALSE] L0003
       DEC             L01
       LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0002
L0003: ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0004: AND             L01,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       AND             L01,#ff -> -(SP)
       LOADW           #1106,(SP)+ -> L04
       AND             L01,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       CALL_VS         R0051 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       LOADW           #00,#05 -> L02
       JE              L04,#02 [FALSE] L0005
       MUL             #02,L01 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       SUB             (SP)+,#02 -> -(SP)
       RET_POPPED      
L0005: MUL             L04,#0e -> -(SP)
       ADD             L02,#7c -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       LOADW           #00,(SP)+ -> L02
       LOADB           #00,L02 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R1289 ((SP)+,#ffff) -> -(SP)
       ADD             (SP)+,#06 -> L02
       CALL_VS         R1289 (L02,L01) -> -(SP)
       RET_POPPED      
L0006: GET_PROP_ADDR   L00,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] RFALSE
       JIN             L00,"Class" [FALSE] L0007
       JL              L01,#40 [TRUE] RFALSE
       JL              L01,#48 [FALSE] RFALSE
L0007: JE              Geb,L00 [FALSE] L0008
       OR              L01,#8000 -> L03
L0008: GET_PROP        L00,#03 -> Gef
       STORE           L02,Gef
L0009: LOADW           L02,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       LOADW           L02,#00 -> -(SP)
       JE              (SP)+,L01,L03 [FALSE] L0010
       ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0010: LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0009
L0011: RFALSE          

Routine R1283, 3 locals

       JL              L01,#40 [FALSE] L0002
       JG              L01,#00 [FALSE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       RET_POPPED      
L0002: CALL_VS         R1282 (L00,L01) -> L02
       JZ              L02 [TRUE] RFALSE
       AND             L01,#c000 -> -(SP)
       JE              (SP)+,#4000 [FALSE] L0005
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#c0 -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0003
       RTRUE           
L0003: JE              Gef,#40 [FALSE] L0004
       RET             #02
L0004: JE              Gef,#80 [FALSE] L0005
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#3f -> -(SP)
       RET_POPPED      
L0005: SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       RET_POPPED      

Routine R1284, 2 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #0142,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0004
L0001: JE              L01,#46,#47,#45 [FALSE] RFALSE
       CALL_2S         R1287 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0002
       JE              L01,#45 [TRUE] RTRUE
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       JE              L01,#46,#47 [TRUE] RTRUE
L0003: RFALSE          
L0004: JL              L01,#40 [FALSE] L0005
       GET_PROP_ADDR   L00,L01 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          
L0005: CALL_VS         R1282 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JL              L01,#48 [FALSE] L0006
       JIN             L00,"Class" [TRUE] RTRUE
L0006: RFALSE          

Routine R1285, 9 locals

       STORE           L04,#00
L0001: JL              L04,#30 [FALSE] L0004
       TEST_ATTR       L01,L04 [FALSE] L0002
       SET_ATTR        L00,L04
       JUMP            L0003
L0002: CLEAR_ATTR      L00,L04
L0003: INC             L04
       JUMP            L0001
L0004: STORE           L04,#01
L0005: JL              L04,#40 [FALSE] L0010
       JE              L04,#02,#03 [TRUE] L0009
       GET_PROP_ADDR   L00,L04 -> Gef
       STORE           L02,Gef
       GET_PROP_ADDR   L01,L04 -> Gef
       STORE           L03,Gef
       GET_PROP_ADDR   L00,L04 -> Gef
       JZ              Gef [TRUE] L0006
       GET_PROP_LEN    Gef -> Gef
L0006: STORE           L07,Gef
       JZ              L02 [TRUE] L0009
       JZ              L03 [TRUE] L0009
       GET_PROP_ADDR   L01,L04 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: PUSH            Gef
       JE              L07,(SP)+ [FALSE] L0009
       STORE           L05,#00
L0008: JL              L05,L07 [FALSE] L0009
       LOADB           L03,L05 -> -(SP)
       STOREB          L02,L05,(SP)+
       INC             L05
       JUMP            L0008
L0009: INC             L04
       JUMP            L0005
L0010: GET_PROP_ADDR   L00,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0011
       GET_PROP_ADDR   L01,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0012
L0011: RTRUE           
L0012: GET_PROP        L01,#03 -> Gef
       STORE           L04,Gef
       JUMP            L0014
L0013: ADD             L04,L07 -> -(SP)
       ADD             (SP)+,#03 -> L04
L0014: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       LOADW           L04,#00 -> L08
       LOADB           L04,#02 -> L07
       GET_PROP        L00,#03 -> Gef
       STORE           L05,Gef
       JUMP            L0016
L0015: LOADB           L05,#02 -> -(SP)
       ADD             L05,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L05
L0016: LOADW           L05,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       LOADW           L05,#00 -> -(SP)
       AND             (SP)+,#7fff -> -(SP)
       AND             L08,#7fff -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0018
       LOADB           L05,#02 -> -(SP)
       JE              L07,(SP)+ [FALSE] L0018
       STORE           L06,#03
L0017: ADD             L07,#03 -> -(SP)
       JL              L06,(SP)+ [FALSE] L0018
       LOADB           L04,L06 -> -(SP)
       STOREB          L05,L06,(SP)+
       INC             L06
       JUMP            L0017
L0018: JUMP            L0015
L0019: JUMP            L0013
L0020: RTRUE           

Routine R1286, 6 locals

       PRINT           "
[** Programming error: "
       JL              L00,#00 [FALSE] L0001
       JUMP            L0049
L0001: JE              L00,#01 [FALSE] L0002
       PRINT           "class "
       PRINT_OBJ       L01
       PRINT_PADDR     S994
       NEW_LINE        
       RTRUE           
L0002: JE              L00,#20 [FALSE] L0003
       PRINT_PADDR     S995
       CALL_2N         R0977 (L01)
       PRINT_PADDR     S996
       NEW_LINE        
       RTRUE           
L0003: JE              L00,#21 [FALSE] L0004
       PRINT           "tried to print (char) "
       PRINT_NUM       L01
       PRINT_PADDR     S997
       NEW_LINE        
       RTRUE           
L0004: JE              L00,#22 [FALSE] L0005
       PRINT_PADDR     S998
       PRINT_RET       "byte address of a string **]"
L0005: JE              L00,#23 [FALSE] L0006
       PRINT_PADDR     S999
       PRINT_RET       "string **]"
L0006: JE              L00,#24 [FALSE] L0007
       PRINT_PADDR     S1000
       PRINT_RET       "object or class **]"
L0007: JL              L00,#20 [FALSE] L0049
       PRINT           "tried to "
       JL              L00,#1c [TRUE] L0017
       JE              L00,#1c,#1d [FALSE] L0008
       PRINT           "read from "
       JUMP            L0009
L0008: PRINT           "write to "
L0009: JE              L00,#1d,#1f [FALSE] L0010
       PRINT           "-"
L0010: PRINT           "->"
       PRINT_NUM       L01
       PRINT           " in the"
       AND             L03,#07 -> -(SP)
       PULL            Gef
       JE              Gef,#00,#01 [FALSE] L0011
       STORE           L05,#00
       JUMP            L0014
L0011: JE              Gef,#02 [FALSE] L0012
       PRINT           " string"
       STORE           L05,#01
       JUMP            L0014
L0012: JE              Gef,#03 [FALSE] L0013
       PRINT           " table"
       STORE           L05,#01
       JUMP            L0014
L0013: JE              Gef,#04 [FALSE] L0014
       PRINT           " buffer"
       STORE           L05,#02
L0014: AND             L03,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       PRINT           " (->)"
L0015: AND             L03,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       PRINT           " (-->)"
L0016: PRINT           " array ""
       LOADW           #12e8,L04 -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           "", which has entries "
       PRINT_NUM       L05
       PRINT           " up to "
       PRINT_NUM       L02
       PRINT_RET       " **]"
L0017: JL              L00,#18 [TRUE] L0021
       JG              L00,#1b [TRUE] L0021
       JG              L00,#19 [TRUE] L0018
       PRINT           "read"
       JUMP            L0019
L0018: PRINT           "write"
L0019: PRINT           " outside memory using "
       STORE           Gef,L00
       JE              Gef,#18,#1a [FALSE] L0020
       PRINT_RET       "-> **]"
L0020: JE              Gef,#19,#1b [FALSE] L0021
       PRINT_RET       "--> **]"
L0021: JL              L00,#04 [FALSE] L0022
       PRINT           "test "
       JUMP            L0025
L0022: JL              L00,#0c [TRUE] L0023
       JG              L00,#14 [FALSE] L0024
L0023: PRINT           "find the "
       JUMP            L0025
L0024: JL              L00,#0e [FALSE] L0025
       PRINT           "use "
L0025: JE              L00,#14 [FALSE] L0026
       PRINT_RET       "divide by zero **]"
L0026: PRINT           """
       STORE           Gef,L00
       JE              Gef,#02 [FALSE] L0027
       PRINT           "in" or "notin"
       JUMP            L0048
L0027: JE              Gef,#03 [FALSE] L0028
       PRINT           "has" or "hasnt"
       JUMP            L0048
L0028: JE              Gef,#04 [FALSE] L0029
       PRINT           "parent"
       JUMP            L0048
L0029: JE              Gef,#05 [FALSE] L0030
       PRINT           "eldest"
       JUMP            L0048
L0030: JE              Gef,#06 [FALSE] L0031
       PRINT           "child"
       JUMP            L0048
L0031: JE              Gef,#07 [FALSE] L0032
       PRINT           "younger"
       JUMP            L0048
L0032: JE              Gef,#08 [FALSE] L0033
       PRINT           "sibling"
       JUMP            L0048
L0033: JE              Gef,#09 [FALSE] L0034
       PRINT           "children"
       JUMP            L0048
L0034: JE              Gef,#0a [FALSE] L0035
       PRINT           "youngest"
       JUMP            L0048
L0035: JE              Gef,#0b [FALSE] L0036
       PRINT           "elder"
       JUMP            L0048
L0036: JE              Gef,#0c [FALSE] L0037
       PRINT           "objectloop"
       JUMP            L0048
L0037: JE              Gef,#0d [FALSE] L0038
       PRINT           "}" at end of "objectloop"
       JUMP            L0048
L0038: JE              Gef,#0e [FALSE] L0039
       PRINT           "give" an attribute to "
       CALL_2N         R0977 (L01)
       PRINT_RET       " **]"
L0039: JE              Gef,#0f [FALSE] L0040
       PRINT           "remove" "
       CALL_2N         R0977 (L01)
       PRINT_RET       " **]"
L0040: JE              Gef,#10,#11,#12 [FALSE] L0044
       PRINT           "move" "
       CALL_2N         R0977 (L01)
       PRINT           " to "
       CALL_2N         R0977 (L02)
       JE              L00,#12 [FALSE] L0043
       PRINT           ", which would make a loop: "
       CALL_2N         R0977 (L01)
       STORE           L04,L02
       JE              L04,L01 [FALSE] L0041
       STORE           L04,L01
       JUMP            L0042
L0041: PRINT           " in "
       CALL_2N         R0977 (L04)
       GET_PARENT      L04 -> L04
       JE              L04,L01 [FALSE] L0041
L0042: PRINT           " in "
       CALL_2N         R0977 (L04)
       PRINT_RET       " **]"
L0043: PRINT_RET       " **]"
L0044: JE              Gef,#13 [FALSE] L0045
       PRINT_PADDR     S1001
       CALL_2N         R0977 (L01)
       PRINT_RET       " **]"
L0045: JE              Gef,#15 [FALSE] L0046
       PRINT           ".&"
       JUMP            L0048
L0046: JE              Gef,#16 [FALSE] L0047
       PRINT           ".#"
       JUMP            L0048
L0047: JE              Gef,#17 [FALSE] L0048
       PRINT           "."
L0048: PRINT           "" of "
       CALL_2N         R0977 (L01)
       PRINT_RET       " **]"
L0049: JL              L01,#00 [TRUE] L0053
       SUB             #0142,#ff -> -(SP)
       JG              L01,(SP)+ [TRUE] L0053
       JZ              L01 [TRUE] L0050
       JIN             L01,"Class" [FALSE] L0050
       PRINT           "class "
L0050: JZ              L01 [TRUE] L0051
       PRINT_OBJ       L01
       JUMP            L0052
L0051: PRINT           "nothing"
L0052: PRINT           " "
L0053: PRINT           "(object number "
       PRINT_NUM       L01
       PRINT           ") "
       JL              L02,#00 [FALSE] L0054
       PRINT           "is not of class "
       SUB             #00,L02 -> -(SP)
       CALL_2N         R0977 ((SP)+)
       JUMP            L0057
L0054: JZ              L03 [TRUE] L0055
       PRINT           "has a property "
       CALL_2N         R1292 (L02)
       PRINT_PADDR     S1002
       JUMP            L0057
L0055: PRINT           " has no property "
       CALL_2N         R1292 (L02)
       STORE           L04,#1132
       LOADW           L04,#00 -> L03
       JL              L02,#00 [TRUE] L0056
       JL              L02,L03 [TRUE] L0057
L0056: PRINT           " (and nor has any other object)"
L0057: PRINT           " to "
       PRINT_PADDR     L00
       PRINT           " **]
"
       RTRUE           

Routine R1287, 2 locals

       JE              L00,#00,#ffff [TRUE] RFALSE
       STORE           L01,L00
       LOADW           #1a,#00 -> -(SP)
       CALL_VS         R0052 (L01,(SP)+) -> -(SP)
       JL              (SP)+,#00 [FALSE] RFALSE
       JL              L00,#01 [TRUE] L0001
       SUB             #0142,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] RTRUE
L0001: CALL_VS         R0052 (L00,S001) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       RET             #03
L0002: CALL_VS         R0052 (L00,#166a) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       RET             #02
L0003: RFALSE          

Routine R1288, 1 local

       CALL_2S         R1287 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0001
       RET             #03
L0001: JE              Gef,#03 [FALSE] L0002
       RET             #04
L0002: JE              Gef,#01 [FALSE] L0005
       JIN             L00,"Class" [TRUE] L0003
       JG              L00,#04 [TRUE] L0004
L0003: RTRUE           
L0004: RET             #02
L0005: RFALSE          

Routine R1289, 4 locals

L0001: LOADB           #00,L00 -> L02
       JZ              L02 [TRUE] L0006
       AND             L02,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L00
       LOADB           #00,L00 -> -(SP)
       AND             (SP)+,#3f -> L03
       JUMP            L0004
L0002: AND             L02,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L03,#02
       JUMP            L0004
L0003: STORE           L03,#01
L0004: INC             L00
       AND             L02,#3f -> -(SP)
       JE              (SP)+,L01 [FALSE] L0005
       RET             L00
L0005: ADD             L00,L03 -> L00
       JUMP            L0001
L0006: JL              L01,#00 [FALSE] L0007
       ADD             L00,#01 -> -(SP)
       RET_POPPED      
L0007: RFALSE          

Routine R1290, 8 locals

       STORE           Gef,L01
       JE              Gef,#40 [FALSE] L0009
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JG              (SP)+,#01 [FALSE] RFALSE
       GET_CHILD       L00 -> L07 [FALSE] L0003
L0003: REMOVE_OBJ      L07
       CALL_VS         R1284 (L07,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              L02 [FALSE] L0004
       CALL_VN         R1281 (L07,#40)
L0004: JE              L02,#01 [FALSE] L0005
       CALL_VN         R1281 (L07,#40,L03)
L0005: JE              L02,#02 [FALSE] L0006
       CALL_VN2        R1281 (L07,#40,L03,L04)
L0006: JG              L02,#03 [FALSE] L0007
       CALL_VN         R1286 (#01,L00)
L0007: JL              L02,#03 [TRUE] L0008
       CALL_VN2        R1281 (L07,#40,L03,L04,L05)
L0008: RET             L07
L0009: JE              Gef,#41 [FALSE] L0017
       CALL_VS         R0051 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       SUB             #00,L00 -> -(SP)
       CALL_VN         R1286 (S1003,L03,(SP)+)
       RFALSE          
L0010: GET_CHILD       L00 -> -(SP) [FALSE] L0011
L0011: CALL_VN         R1285 (L03,(SP)+)
       CALL_VS         R1284 (L03,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       JE              L02,#01 [FALSE] L0012
       CALL_VN         R1281 (L03,#40)
L0012: JE              L02,#02 [FALSE] L0013
       CALL_VN         R1281 (L03,#40,L04)
L0013: JE              L02,#03 [FALSE] L0014
       CALL_VN2        R1281 (L03,#40,L04,L05)
L0014: JG              L02,#04 [FALSE] L0015
       CALL_VN         R1286 (#01,L00)
L0015: JL              L02,#04 [TRUE] L0016
       CALL_VN2        R1281 (L03,#40,L04,L05,L06)
L0016: RFALSE          
L0017: JE              Gef,#42 [FALSE] L0021
       CALL_VS         R0051 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0018
       SUB             #00,L00 -> -(SP)
       CALL_VN         R1286 (S1004,L03,(SP)+)
       RFALSE          
L0018: CALL_VS         R1284 (L03,#42) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       CALL_VN         R1281 (L03,#42)
L0019: GET_CHILD       L00 -> -(SP) [FALSE] L0020
L0020: CALL_VN         R1285 (L03,(SP)+)
       INSERT_OBJ      L03,L00
       RFALSE          
L0021: JE              Gef,#43 [FALSE] L0024
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0023
L0022: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0022
L0023: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,#01 -> -(SP)
       RET_POPPED      
L0024: JE              Gef,#44 [FALSE] L0027
       CALL_VS         R0051 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0025
       SUB             #00,L00 -> -(SP)
       CALL_VN         R1286 (S1005,L03,(SP)+)
       RFALSE          
L0025: CALL_VS         R0051 (L04,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0026
       SUB             #00,L00 -> -(SP)
       CALL_VN         R1286 (S1006,L04,(SP)+)
       RFALSE          
L0026: CALL_VN         R1285 (L03,L04)
       RFALSE          
L0027: RTRUE           

Routine R1291, 3 locals

       PRINT           "[Setting "
       CALL_2N         R0977 (L00)
       PRINT           "."
       CALL_2N         R1292 (L01)
       PRINT           " to "
       PRINT_NUM       L02
       PRINT           "]
"
       RTRUE           

Routine R1292, 5 locals

       AND             L00,#c000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L00,#ff -> -(SP)
       LOADW           #1106,(SP)+ -> L03
       CALL_2N         R0977 (L03)
       PRINT           "::"
       AND             L00,#8000 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       AND             L00,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       JUMP            L0004
L0001: AND             L00,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       GET_PROP        L03,#03 -> Gef
       STORE           L04,Gef
L0002: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JG              L00,#00 [FALSE] L0003
       LOADB           L04,#02 -> -(SP)
       ADD             L04,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L04
       DEC             L00
       JUMP            L0002
L0003: LOADW           L04,#00 -> -(SP)
       AND             (SP)+,#7fff -> L00
L0004: STORE           L01,#1132
       LOADW           L01,#00 -> L02
       JG              L00,#00 [FALSE] L0005
       JL              L00,L02 [FALSE] L0005
       LOADW           L01,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0005: PRINT           "<number "
       PRINT_NUM       L00
       PRINT           ">"
       JUMP            L0007
L0006: LOADW           L01,L00 -> -(SP)
       PRINT_PADDR     (SP)+
L0007: RTRUE           

Routine R1293, 2 locals

       RFALSE          

[End of code]

[Start of text]

S001: "6G60"
S002: "080126"
S003: "6/12N"
S004: "The Pelican"
S005: "An Interactive Fiction"
S006: "Standard Rules version 2/090402 by Graham Nelson
"
S007: "Standard Rules version 2/090402 by Graham Nelson
"
S008: ""
S009: "a"
S010: "Error: Overflow in VM_PrintToBuffer.
"
S011: "apply 'ofclass' for"
S012: "The "
S013: "the "
S014: "a "
S015: "The "
S016: "the "
S017: "an "
S018: "The "
S019: "the "
S020: "some "
S021: "The "
S022: "the "
S023: "some "
S024: "N = next subject"
S025: "P = previous"
S026: "  Q = resume game"
S027: "Q = previous menu"
S028: "RETURN = read subject"
S029: "Score: "
S030: "Moves: "
S031: "Time: "
S032: "You can't go that way."
S033: "your former self"
S034: "yourself"
S035: "You"
S036: "Darkness"
S037: "those things"
S038: "that"
S039: " or "
S040: "nothing"
S041: "Nothing"
S042: " is"
S043: " are"
S044: "is "
S045: "are "
S046: "is"
S047: "are"
S048: " and "
S049: " and "
S050: " and "
S051: "whom "
S052: "which "
S053: ", "
S054: "Violence isn't the answer to this one."
S055: "This dangerous act would achieve little."
S056: "I don't think much is to be achieved by that."
S057: "You discover nothing of interest in "
S058: "There's nothing suitable to drink here."
S059: "You can only get into something free-standing."
S060: "Darkness, noun.  An absence of light to see by."
S061: "You see nothing unexpected in that direction."
S062: "But you aren't in anything at the moment."
S063: " for a while, but don't achieve much."
S064: "You'll have to say which compass direction to go in."
S065: "You can't put something inside itself."
S066: "You jump on the spot, fruitlessly."
S067: " (closed, empty and providing light)"
S068: " is now in its "brief" printing mode, which gives long descriptions of
places never before visited and short descriptions otherwise."
S069: " is now in its "verbose" mode, which always gives long descriptions of
locations (even if you've been there before)."
S070: " is now in its "superbrief" mode, which always gives short descriptions
of locations (even if you haven't been there before)."
S071: "seem to be something you can lock."
S072: "You see nothing unexpected in that direction."
S073: "(considering the first sixteen objects only)
"
S074: "
Would you like to RESTART, RESTORE a saved game"
S075: "[Your interpreter does not provide "undo".  Sorry!]"
S076: ""Undo" failed.  [Not all interpreters provide it.]"
S077: "Please give one of the answers above."
S078: "[You can't "undo" what hasn't been done!]"
S079: "[Can't "undo" twice in succession. Sorry!]"
S080: ""Oops" can only correct a single word."
S081: "It is pitch dark, and you can't see a thing."
S082: "To repeat a command like "frog, jump", just say "again", not "frog,
again"."
S083: "You seem to want to talk to someone, but I can't see whom."
S084: "To talk to someone, try "someone, hello" or some such."
S085: "I didn't understand that sentence."
S086: "I only understood you as far as wanting to "
S087: "You seem to have said too little!"
S088: "You can't use multiple objects with that verb."
S089: "You can only use multiple objects once on a line."
S090: "You excepted something not included anyway!"
S091: "You can only do that to something animate."
S092: "That's not something you need to refer to in the course of this game."
S093: "I didn't understand the way that finished."
S094: "Sorry, you can only have one item here. Which exactly?"
S095: "(Since something dramatic has happened, your list of commands has been
cut short.)"
S096: "You may not name a second object."
S097: "You may not supply a second noun."
S098: "You must name something more substantial."
S099: "The use of UNDO is forbidden in this game."
S100: "That noun did not make sense in this context."
S101: "[That command asks to do something outside of play, so it can only make
sense from you to me. "
S102: "no pronouns are known to the game."
S103: "That would be less than courteous."
S104: " cannot be pushed from place to place.
"
S105: "You can't put something on top of itself."
S106: "Are you sure you want to restart? "
S107: "Attempt to end transcript failed."
S108: "Attempt to begin transcript failed."
S109: "You aren't feeling especially drowsy."
S110: "Real adventurers do not use such language."
S111: "There's nothing sensible to swing here."
S112: "You're carrying too many things already."
S113: "You lack the nerve when it comes to the crucial moment."
S114: "You would achieve nothing by this."
S115: "seem to be something you can unlock."
S116: "The game file has verified as intact."
S117: "The game file did not verify as intact, and may be corrupt."
S118: "The dreadful truth is, this is not a dream."
S119: "dynamic memory allocation option [8192]"
S120: "maximum indexed text length option [1024]"
S121: "maximum things understood at once option [100]"
S122: "full-length room descriptions option"
S123: "abbreviated room descriptions option"
S124: "SUPERBRIEF room descriptions option"
S125: "specification"
S126: "indefinite appearance text"
S127: "variable initial value"
S128: "printed name"
S129: "printed plural name"
S130: "indefinite article"
S131: "description"
S132: "map region"
S133: "initial appearance"
S134: "opposite"
S135: "other side"
S136: "carrying capacity"
S137: "matching key"
S138: "plural-named"
S139: "proper-named"
S140: "privately-named"
S141: "lighted"
S142: "visited"
S143: "lit"
S144: "edible"
S145: "fixed in place"
S146: "scenery"
S147: "wearable"
S148: "pushable between rooms"
S149: "handled"
S150: "undescribed"
S151: "marked for listing"
S152: "mentioned"
S153: "enterable"
S154: "transparent"
S155: "open"
S156: "openable"
S157: "lockable"
S158: "locked"
S159: "female"
S160: "neuter"
S161: "switched on"
S162: "recurring"
S163: "nautical"
S164: "<nameless>"
S165: "<nameless>"
S166: "<nameless>"
S167: "<nameless>"
S168: "<nameless>"
S169: "<nameless>"
S170: "<nameless>"
S171: "<nameless>"
S172: "<nameless>"
S173: "<nameless>"
S174: "<nameless>"
S175: "<nameless>"
S176: "<nameless>"
S177: "<nameless>"
S178: "<nameless>"
S179: "<nameless>"
S180: "<nameless>"
S181: "<nameless>"
S182: "<nameless>"
S183: "<nameless>"
S184: "<nameless>"
S185: "<nameless>"
S186: "<nameless>"
S187: "<nameless>"
S188: "<nameless>"
S189: "<nameless>"
S190: "<nameless>"
S191: "<nameless>"
S192: "<nameless>"
S193: "<nameless>"
S194: "<nameless>"
S195: "<nameless>"
S196: "<nameless>"
S197: "<nameless>"
S198: "<nameless>"
S199: "<nameless>"
S200: "<nameless>"
S201: "<nameless>"
S202: "<nameless>"
S203: "<nameless>"
S204: "<nameless>"
S205: "<nameless>"
S206: "<nameless>"
S207: "<nameless>"
S208: "<nameless>"
S209: "<nameless>"
S210: "<nameless>"
S211: "<nameless>"
S212: "<nameless>"
S213: "didn't understand that number error"
S214: "can only do that to something animate error"
S215: "can only use multiple objects error"
S216: "excepted something not included error"
S217: "not something you need to refer to error"
S218: "didn't understand the way that finished error"
S219: "not enough of those available error"
S220: "noun did not make sense in that context error"
S221: "referred to a determination of scope error"
S222: "allow access"
S223: "deny access"
S224: "there is sufficient light"
S225: "there is insufficient light"
S226: "persuasion succeeds"
S227: "persuasion fails"
S228: "it is very likely"
S229: "it is likely"
S230: "it is possible"
S231: "it is unlikely"
S232: "it is very unlikely"
S233: "it does not"
S234: "it does"
S235: "supporters"
S236: "people"
S237: "men"
S238: "women"
S239: "animals"
S240: "doors"
S241: "containers"
S242: "vehicles"
S243: "player's holdalls"
S244: "backdrops"
S245: "devices"
S246: "regions"
S247: "directions"
S248: "north"
S249: "northeast"
S250: "northwest"
S251: "south"
S252: "southeast"
S253: "southwest"
S254: "east"
S255: "west"
S256: "up"
S257: "down"
S258: "inside"
S259: "outside"
S260: "yourself"
S261: "yourself"
S262: "Yourself"
S263: "starboard"
S264: "port"
S265: "fore"
S266: "aft"
S267: "Bridge"
S268: "Quin"
S269: "Quin"
S270: "headphones"
S271: "Headphones"
S272: "Fore Corridor"
S273: "Cargo Hold"
S274: "Dormatory"
S275: "crew lockers"
S276: "your locker"
S277: "Your locker"
S278: "hand mirror"
S279: "tinted window"
S280: "Katrina"
S281: "Katrina"
S282: "Smugglers Hold"
S283: "sliding door"
S284: "Lounge"
S285: "Airlocks"
S286: "Escape Pod"
S287: "Shuttle"
S288: "Aft Corridor"
S289: "Utilities Room"
S290: "Showers"
S291: "Engine Room"
S292: "switching the story transcript on"
S293: "switching the story transcript off"
S294: "requesting the story file version"
S295: "preferring abbreviated room descriptions"
S296: "preferring unabbreviated room descriptions"
S297: "preferring sometimes abbreviated room descriptions"
S298: "I didn't understand that sentence."
S299: "source"
S300: "source"
S301: "source"
S302: "source"
S303: "source"
S304: "source"
S305: "source"
S306: ">--> The scene change machinery is stuck."
S307: "external files can only be used under Glulx"
S308: "Variable unavailable for this action, activity or rulebook: "
S309: "*** Can't change this to an equivalence relation ***"
S310: "*** Can't change this to a symmetric relation ***"
S311: "*** Can't change this to a one-to-one relation ***"
S312: "*** Can't change this to a one-to-various relation ***"
S313: "*** Can't change this to a various-to-one relation ***"
S314: "*** Can't change this to a various-to-various relation ***"
S315: ", but it didn't seem to have such an exit to change.
"
S316: ", but it led to a door, not a room.
"
S317: "Tried to access an inappropriate relation for "
S318: "Too many procedural rules acting all at once.
"
S319: "Too many rulebooks in simultaneous use.
"
S320: "Too many timed events are going on at once.
"
S321: "Tried to access non-existent property for "
S322: "", it is against the rules to try to use it.
"
S323: " is allowed to have the property ""
S324: "", no value was ever given, so it can't now be used.
"
S325: "Too many activities are going on at once.
"
S326: "Tried to abandon an activity which wasn't going on.
"
S327: "Tried to end an activity which wasn't going on.
"
S328: "You can't remove nothing from play.
"
S329: "Tried to access property for a value which didn't fit: "
S330: "if this were a number it would be "
S331: "Attempt to look up a non-existent column in the table '"
S332: "Attempt to look up a non-existent correspondence in the table '"
S333: "Attempt to look up a non-existent row in the table '"
S334: "Attempt to look up a non-existent entry at column "
S335: "Attempt to blank out a row from a non-existent table (value "
S336: "Attempt to choose a blank row in a table with none left: table '"
S337: "Attempt to choose a random row in an entirely blank table: table '"
S338: "Attempt to repeat through a table in a tricky column order: table '"
S339: "Attempt to sort a table whose ordering must remain fixed: table '"
S340: "Attempt to save a table to a file whose data is unstable: table '"
S341: "File being read has too many rows or columns to fit into table: table '"
S342: "File being read is not a previously saved table: table '"
S343: "Attempt to test if the current location is '"
S344: "', which is not a room or region.
"
S345: "Attempt to see if a snippet of text matches something which is not a
topic.
"
S346: "Attempt to find route or count steps through an implicit relation.
"
S347: "Attempt to use a property of the 'nothing' non-object: property "
S348: "Attempt to 'decide on V' where V is the wrong kind of object.
"
S349: "Attempt to ignore the turn sequence rules.
"
S350: "Attempt to say a snippet value which is currently invalid: words "
S351: "Attempt to splice a snippet value which is currently invalid: words "
S352: "Attempt to match a snippet value which is currently invalid: words "
S353: "The list-writer has run out of memory.
"
S354: "Attempt to remove the player from play.
"
S355: "Attempt to remove a door from play.
"
S356: "Attempt to change the player to a person off-stage.
"
S357: "Phrase applied to an incompatible kind of value.
"
S358: "Memory allocation proved impossible.
"
S359: "Attempt to use list item which does not exist.
"
S360: "Syntax error in regular expression.
"
S361: "This interpreter does not support Unicode.
"
S362: "Only backdrops can be moved to multiple places.
"
S363: ", but only things can move around.
"
S364: " hasn't started, so you can't ask when it did.
"
S365: " hasn't ended, so you can't ask when it did.
"
S366: "You can't take the square root of a negative number.
"
S367: "You can't implicitly repeat through the values of this kind: "
S368: "a problem arising from a description which started out here - ""
S369: "Attempt to set a variable to the wrong kind of object: "
S370: " - but that doesn't have the kind '"
S371: "

*** Fatal programming error: I7 arrays corrupted ***

"
S372: "Procedural rulebook"
S373: "Startup rulebook"
S374: "Turn sequence rulebook"
S375: "Shutdown rulebook"
S376: "Scene changing rulebook"
S377: "When play begins rulebook"
S378: "When play ends rulebook"
S379: "When scene begins rulebook"
S380: "When scene ends rulebook"
S381: "Every turn rulebook"
S382: "Action-processing rulebook"
S383: "Setting action variables rulebook"
S384: "specific action-processing rulebook"
S385: "player's action awareness rulebook"
S386: "Accessibility rulebook"
S387: "Reaching inside rulebook"
S388: "Reaching outside rulebook"
S389: "Visibility rulebook"
S390: "Persuasion rulebook"
S391: "Unsuccessful attempt by rulebook"
S392: "Before rulebook"
S393: "Instead rulebook"
S394: "Check rulebook"
S395: "Carry out rulebook"
S396: "After rulebook"
S397: "Report rulebook"
S398: "does the player mean rulebook"
S399: "when Entire Game begins rulebook"
S400: "when Entire Game ends rulebook"
S401: "before Printing the name rulebook"
S402: "for Printing the name rulebook"
S403: "after Printing the name rulebook"
S404: "before Printing the plural name rulebook"
S405: "for Printing the plural name rulebook"
S406: "after Printing the plural name rulebook"
S407: "before Printing a number rulebook"
S408: "for Printing a number rulebook"
S409: "after Printing a number rulebook"
S410: "before Printing room description details rulebook"
S411: "for Printing room description details rulebook"
S412: "after Printing room description details rulebook"
S413: "before Listing contents rulebook"
S414: "for Listing contents rulebook"
S415: "after Listing contents rulebook"
S416: "before Grouping together rulebook"
S417: "for Grouping together rulebook"
S418: "after Grouping together rulebook"
S419: "before Writing a paragraph about rulebook"
S420: "for Writing a paragraph about rulebook"
S421: "after Writing a paragraph about rulebook"
S422: "before Listing nondescript items rulebook"
S423: "for Listing nondescript items rulebook"
S424: "after Listing nondescript items rulebook"
S425: "before Printing the name of a dark room rulebook"
S426: "for Printing the name of a dark room rulebook"
S427: "after Printing the name of a dark room rulebook"
S428: "before Printing the description of a dark room rulebook"
S429: "for Printing the description of a dark room rulebook"
S430: "after Printing the description of a dark room rulebook"
S431: "before Printing the announcement of darkness rulebook"
S432: "for Printing the announcement of darkness rulebook"
S433: "after Printing the announcement of darkness rulebook"
S434: "before Printing the announcement of light rulebook"
S435: "for Printing the announcement of light rulebook"
S436: "after Printing the announcement of light rulebook"
S437: "before Printing a refusal to act in the dark rulebook"
S438: "for Printing a refusal to act in the dark rulebook"
S439: "after Printing a refusal to act in the dark rulebook"
S440: "before Constructing the status line rulebook"
S441: "for Constructing the status line rulebook"
S442: "after Constructing the status line rulebook"
S443: "before Printing the banner text rulebook"
S444: "for Printing the banner text rulebook"
S445: "after Printing the banner text rulebook"
S446: "before Reading a command rulebook"
S447: "for Reading a command rulebook"
S448: "after Reading a command rulebook"
S449: "before Deciding the scope rulebook"
S450: "for Deciding the scope rulebook"
S451: "after Deciding the scope rulebook"
S452: "before Deciding the concealed possessions rulebook"
S453: "for Deciding the concealed possessions rulebook"
S454: "after Deciding the concealed possessions rulebook"
S455: "before Deciding whether all includes rulebook"
S456: "for Deciding whether all includes rulebook"
S457: "after Deciding whether all includes rulebook"
S458: "before Clarifying the parser's choice rulebook"
S459: "for Clarifying the parser's choice rulebook"
S460: "after Clarifying the parser's choice rulebook"
S461: "before Asking which do you mean rulebook"
S462: "for Asking which do you mean rulebook"
S463: "after Asking which do you mean rulebook"
S464: "before Printing a parser error rulebook"
S465: "for Printing a parser error rulebook"
S466: "after Printing a parser error rulebook"
S467: "before Supplying a missing noun rulebook"
S468: "for Supplying a missing noun rulebook"
S469: "after Supplying a missing noun rulebook"
S470: "before Supplying a missing second noun rulebook"
S471: "for Supplying a missing second noun rulebook"
S472: "after Supplying a missing second noun rulebook"
S473: "before Implicitly taking rulebook"
S474: "for Implicitly taking rulebook"
S475: "after Implicitly taking rulebook"
S476: "before Starting the virtual machine rulebook"
S477: "for Starting the virtual machine rulebook"
S478: "after Starting the virtual machine rulebook"
S479: "before Amusing a victorious player rulebook"
S480: "for Amusing a victorious player rulebook"
S481: "after Amusing a victorious player rulebook"
S482: "before Printing the player's obituary rulebook"
S483: "for Printing the player's obituary rulebook"
S484: "after Printing the player's obituary rulebook"
S485: "before Handling the final question rulebook"
S486: "for Handling the final question rulebook"
S487: "after Handling the final question rulebook"
S488: "before Printing the locale description rulebook"
S489: "for Printing the locale description rulebook"
S490: "after Printing the locale description rulebook"
S491: "before Choosing notable locale objects rulebook"
S492: "for Choosing notable locale objects rulebook"
S493: "after Choosing notable locale objects rulebook"
S494: "before Printing a locale paragraph about rulebook"
S495: "for Printing a locale paragraph about rulebook"
S496: "after Printing a locale paragraph about rulebook"
S497: "check Taking inventory rulebook"
S498: "carry out Taking inventory rulebook"
S499: "report Taking inventory rulebook"
S500: "check Taking rulebook"
S501: "carry out Taking rulebook"
S502: "report Taking rulebook"
S503: "check Removing it from rulebook"
S504: "carry out Removing it from rulebook"
S505: "report Removing it from rulebook"
S506: "check Dropping rulebook"
S507: "carry out Dropping rulebook"
S508: "report Dropping rulebook"
S509: "check Putting it on rulebook"
S510: "carry out Putting it on rulebook"
S511: "report Putting it on rulebook"
S512: "check Inserting it into rulebook"
S513: "carry out Inserting it into rulebook"
S514: "report Inserting it into rulebook"
S515: "check Eating rulebook"
S516: "carry out Eating rulebook"
S517: "report Eating rulebook"
S518: "check Going rulebook"
S519: "carry out Going rulebook"
S520: "report Going rulebook"
S521: "check Entering rulebook"
S522: "carry out Entering rulebook"
S523: "report Entering rulebook"
S524: "check Exiting rulebook"
S525: "carry out Exiting rulebook"
S526: "report Exiting rulebook"
S527: "check Getting off rulebook"
S528: "carry out Getting off rulebook"
S529: "report Getting off rulebook"
S530: "check Looking rulebook"
S531: "carry out Looking rulebook"
S532: "report Looking rulebook"
S533: "check Examining rulebook"
S534: "carry out Examining rulebook"
S535: "report Examining rulebook"
S536: "check Looking under rulebook"
S537: "carry out Looking under rulebook"
S538: "report Looking under rulebook"
S539: "check Searching rulebook"
S540: "carry out Searching rulebook"
S541: "report Searching rulebook"
S542: "check Consulting it about rulebook"
S543: "carry out Consulting it about rulebook"
S544: "report Consulting it about rulebook"
S545: "check Locking it with rulebook"
S546: "carry out Locking it with rulebook"
S547: "report Locking it with rulebook"
S548: "check Unlocking it with rulebook"
S549: "carry out Unlocking it with rulebook"
S550: "report Unlocking it with rulebook"
S551: "check Switching on rulebook"
S552: "carry out Switching on rulebook"
S553: "report Switching on rulebook"
S554: "check Switching off rulebook"
S555: "carry out Switching off rulebook"
S556: "report Switching off rulebook"
S557: "check Opening rulebook"
S558: "carry out Opening rulebook"
S559: "report Opening rulebook"
S560: "check Closing rulebook"
S561: "carry out Closing rulebook"
S562: "report Closing rulebook"
S563: "check Wearing rulebook"
S564: "carry out Wearing rulebook"
S565: "report Wearing rulebook"
S566: "check Taking off rulebook"
S567: "carry out Taking off rulebook"
S568: "report Taking off rulebook"
S569: "check Giving it to rulebook"
S570: "carry out Giving it to rulebook"
S571: "report Giving it to rulebook"
S572: "check Showing it to rulebook"
S573: "carry out Showing it to rulebook"
S574: "report Showing it to rulebook"
S575: "check Waking rulebook"
S576: "carry out Waking rulebook"
S577: "report Waking rulebook"
S578: "check Throwing it at rulebook"
S579: "carry out Throwing it at rulebook"
S580: "report Throwing it at rulebook"
S581: "check Attacking rulebook"
S582: "carry out Attacking rulebook"
S583: "report Attacking rulebook"
S584: "check Kissing rulebook"
S585: "carry out Kissing rulebook"
S586: "report Kissing rulebook"
S587: "check Answering it that rulebook"
S588: "carry out Answering it that rulebook"
S589: "report Answering it that rulebook"
S590: "check Telling it about rulebook"
S591: "carry out Telling it about rulebook"
S592: "report Telling it about rulebook"
S593: "check Asking it about rulebook"
S594: "carry out Asking it about rulebook"
S595: "report Asking it about rulebook"
S596: "check Asking it for rulebook"
S597: "carry out Asking it for rulebook"
S598: "report Asking it for rulebook"
S599: "check Waiting rulebook"
S600: "carry out Waiting rulebook"
S601: "report Waiting rulebook"
S602: "check Touching rulebook"
S603: "carry out Touching rulebook"
S604: "report Touching rulebook"
S605: "check Waving rulebook"
S606: "carry out Waving rulebook"
S607: "report Waving rulebook"
S608: "check Pulling rulebook"
S609: "carry out Pulling rulebook"
S610: "report Pulling rulebook"
S611: "check Pushing rulebook"
S612: "carry out Pushing rulebook"
S613: "report Pushing rulebook"
S614: "check Turning rulebook"
S615: "carry out Turning rulebook"
S616: "report Turning rulebook"
S617: "check Pushing it to rulebook"
S618: "carry out Pushing it to rulebook"
S619: "report Pushing it to rulebook"
S620: "check Squeezing rulebook"
S621: "carry out Squeezing rulebook"
S622: "report Squeezing rulebook"
S623: "check Saying yes rulebook"
S624: "carry out Saying yes rulebook"
S625: "report Saying yes rulebook"
S626: "check Saying no rulebook"
S627: "carry out Saying no rulebook"
S628: "report Saying no rulebook"
S629: "check Burning rulebook"
S630: "carry out Burning rulebook"
S631: "report Burning rulebook"
S632: "check Waking up rulebook"
S633: "carry out Waking up rulebook"
S634: "report Waking up rulebook"
S635: "check Thinking rulebook"
S636: "carry out Thinking rulebook"
S637: "report Thinking rulebook"
S638: "check Smelling rulebook"
S639: "carry out Smelling rulebook"
S640: "report Smelling rulebook"
S641: "check Listening to rulebook"
S642: "carry out Listening to rulebook"
S643: "report Listening to rulebook"
S644: "check Tasting rulebook"
S645: "carry out Tasting rulebook"
S646: "report Tasting rulebook"
S647: "check Cutting rulebook"
S648: "carry out Cutting rulebook"
S649: "report Cutting rulebook"
S650: "check Jumping rulebook"
S651: "carry out Jumping rulebook"
S652: "report Jumping rulebook"
S653: "check Tying it to rulebook"
S654: "carry out Tying it to rulebook"
S655: "report Tying it to rulebook"
S656: "check Drinking rulebook"
S657: "carry out Drinking rulebook"
S658: "report Drinking rulebook"
S659: "check Saying sorry rulebook"
S660: "carry out Saying sorry rulebook"
S661: "report Saying sorry rulebook"
S662: "check Swearing obscenely rulebook"
S663: "carry out Swearing obscenely rulebook"
S664: "report Swearing obscenely rulebook"
S665: "check Swearing mildly rulebook"
S666: "carry out Swearing mildly rulebook"
S667: "report Swearing mildly rulebook"
S668: "check Swinging rulebook"
S669: "carry out Swinging rulebook"
S670: "report Swinging rulebook"
S671: "check Rubbing rulebook"
S672: "carry out Rubbing rulebook"
S673: "report Rubbing rulebook"
S674: "check Setting it to rulebook"
S675: "carry out Setting it to rulebook"
S676: "report Setting it to rulebook"
S677: "check Waving hands rulebook"
S678: "carry out Waving hands rulebook"
S679: "report Waving hands rulebook"
S680: "check Buying rulebook"
S681: "carry out Buying rulebook"
S682: "report Buying rulebook"
S683: "check Singing rulebook"
S684: "carry out Singing rulebook"
S685: "report Singing rulebook"
S686: "check Climbing rulebook"
S687: "carry out Climbing rulebook"
S688: "report Climbing rulebook"
S689: "check Sleeping rulebook"
S690: "carry out Sleeping rulebook"
S691: "report Sleeping rulebook"
S692: "check Quitting the game rulebook"
S693: "carry out Quitting the game rulebook"
S694: "report Quitting the game rulebook"
S695: "check Saving the game rulebook"
S696: "carry out Saving the game rulebook"
S697: "report Saving the game rulebook"
S698: "check Restoring the game rulebook"
S699: "carry out Restoring the game rulebook"
S700: "report Restoring the game rulebook"
S701: "check Restarting the game rulebook"
S702: "carry out Restarting the game rulebook"
S703: "report Restarting the game rulebook"
S704: "check Verifying the story file rulebook"
S705: "carry out Verifying the story file rulebook"
S706: "report Verifying the story file rulebook"
S707: "check Switching the story transcript on rulebook"
S708: "carry out Switching the story transcript on rulebook"
S709: "report Switching the story transcript on rulebook"
S710: "check Switching the story transcript off rulebook"
S711: "carry out Switching the story transcript off rulebook"
S712: "report Switching the story transcript off rulebook"
S713: "check Requesting the story file version rulebook"
S714: "carry out Requesting the story file version rulebook"
S715: "report Requesting the story file version rulebook"
S716: "check Requesting the score rulebook"
S717: "carry out Requesting the score rulebook"
S718: "report Requesting the score rulebook"
S719: "check Preferring abbreviated room descriptions rulebook"
S720: "carry out Preferring abbreviated room descriptions rulebook"
S721: "report Preferring abbreviated room descriptions rulebook"
S722: "check Preferring unabbreviated room descriptions rulebook"
S723: "carry out Preferring unabbreviated room descriptions rulebook"
S724: "report Preferring unabbreviated room descriptions rulebook"
S725: "check Preferring sometimes abbreviated room descriptions rulebook"
S726: "carry out Preferring sometimes abbreviated room descriptions rulebook"
S727: "report Preferring sometimes abbreviated room descriptions rulebook"
S728: "check Switching score notification on rulebook"
S729: "carry out Switching score notification on rulebook"
S730: "report Switching score notification on rulebook"
S731: "check Switching score notification off rulebook"
S732: "carry out Switching score notification off rulebook"
S733: "report Switching score notification off rulebook"
S734: "check Requesting the pronoun meanings rulebook"
S735: "carry out Requesting the pronoun meanings rulebook"
S736: "report Requesting the pronoun meanings rulebook"
S737: "check Talking to rulebook"
S738: "carry out Talking to rulebook"
S739: "report Talking to rulebook"
S740: "check Using rulebook"
S741: "carry out Using rulebook"
S742: "report Using rulebook"
S743: "set pronouns from items from multiple object lists rule"
S744: "announce items from multiple object lists rule"
S745: "end action-processing in success rule"
S746: "investigate player's awareness before action rule"
S747: "investigate player's awareness after action rule"
S748: "player aware of his own actions rule"
S749: "player aware of actions by visible actors rule"
S750: "player aware of actions on visible nouns rule"
S751: "player aware of actions on visible second nouns rule"
S752: "very unlikely to mean taking what's already carried rule"
S753: "standard printing the plural name rule"
S754: "standard printing a number of something rule"
S755: "look around once light available rule"
S756: "exclude scenery from take all rule"
S757: "exclude people from take all rule"
S758: "exclude fixed in place things from take all rule"
S759: "standard respond to final question rule"
S760: "initialise locale description rule"
S761: "interesting locale paragraphs rule"
S762: "standard notable locale objects rule"
S763: "don't mention player's supporter in room descriptions rule"
S764: "don't mention scenery in room descriptions rule"
S765: "don't mention undescribed items in room descriptions rule"
S766: "set pronouns from items in room descriptions rule"
S767: "offer items to writing a paragraph about rule"
S768: "use initial appearance in room descriptions rule"
S769: "describe what's on scenery supporters in room descriptions rule"
S770: "report other people taking inventory rule"
S771: "can't take people's possessions rule"
S772: "can't take items out of play rule"
S773: "can't take what you're inside rule"
S774: "can't take what's already taken rule"
S775: "can't take what's fixed in place rule"
S776: "use player's holdall to avoid exceeding carrying capacity rule"
S777: "can't exceed carrying capacity rule"
S778: "can't remove what's not inside rule"
S779: "can't drop what's already dropped rule"
S780: "can't drop clothes being worn rule"
S781: "can't drop if this exceeds carrying capacity rule"
S782: "convert put to drop where possible rule"
S783: "can't put something on itself rule"
S784: "can't put onto what's not a supporter rule"
S785: "can't put onto something being carried rule"
S786: "can't put clothes being worn rule"
S787: "can't put if this exceeds carrying capacity rule"
S788: "convert insert to drop where possible rule"
S789: "can't insert what's not held rule"
S790: "can't insert something into itself rule"
S791: "can't insert into closed containers rule"
S792: "can't insert into what's not a container rule"
S793: "can't insert clothes being worn rule"
S794: "can't insert if this exceeds carrying capacity rule"
S795: "can't eat clothing without removing it first rule"
S796: "standard set going variables rule"
S797: "can't travel in what's not a vehicle rule"
S798: "can't go through undescribed doors rule"
S799: "can't go through closed doors rule"
S800: "convert enter compass direction into go rule"
S801: "can't enter what's already entered rule"
S802: "can't enter what's not enterable rule"
S803: "can't enter closed containers rule"
S804: "can't enter something carried rule"
S805: "implicitly pass through other barriers rule"
S806: "describe contents entered into rule"
S807: "can't exit when not inside anything rule"
S808: "can't exit closed containers rule"
S809: "determine visibility ceiling rule"
S810: "room description paragraphs about objects rule"
S811: "report other people examining rule"
S812: "report other people looking under rule"
S813: "can't search unless container or supporter rule"
S814: "can't search closed opaque containers rule"
S815: "report other people searching rule"
S816: "can't lock what's already locked rule"
S817: "can't lock without the correct key rule"
S818: "can't unlock what's already unlocked rule"
S819: "can't unlock without the correct key rule"
S820: "can't switch on unless switchable rule"
S821: "can't switch on what's already on rule"
S822: "standard report switching on rule"
S823: "can't switch off unless switchable rule"
S824: "can't switch off what's already off rule"
S825: "standard report switching off rule"
S826: "can't open what's already open rule"
S827: "reveal any newly visible interior rule"
S828: "can't close what's already closed rule"
S829: "can't wear what's not clothing rule"
S830: "can't wear what's already worn rule"
S831: "can't take off what's not worn rule"
S832: "can't give what you haven't got rule"
S833: "can't give clothes being worn rule"
S834: "can't show what you haven't got rule"
S835: "convert show to yourself to examine rule"
S836: "implicitly remove thrown clothing rule"
S837: "futile to throw things at inanimate objects rule"
S838: "asking yourself for something rule"
S839: "translate asking for to giving rule"
S840: "report touching other people rule"
S841: "can't pull what's fixed in place rule"
S842: "can't push what's fixed in place rule"
S843: "can't turn what's fixed in place rule"
S844: "can't push unpushable things rule"
S845: "can't push to non-directions rule"
S846: "standard pushing in directions rule"
S847: "innuendo about squeezing people rule"
S848: "seed random number generator rule"
S849: "update chronological records rule"
S850: "position player in model world rule"
S851: "requested actions require persuasion rule"
S852: "descend to specific action-processing rule"
S853: "work out details of specific action rule"
S854: "can't reach inside closed containers rule"
S855: "can't reach outside closed containers rule"
S856: "immediately restore saved game rule"
S857: "switch the story transcript on rule"
S858: "switch the story transcript off rule"
S859: "announce the story file version rule"
S860: "prefer abbreviated room descriptions rule"
S861: "standard report preferring abbreviated room descriptions rule"
S862: "prefer unabbreviated room descriptions rule"
S863: "standard report preferring unabbreviated room descriptions rule"
S864: "prefer sometimes abbreviated room descriptions rule"
S865: "standard report preferring sometimes abbreviated room descriptions rule"
S866: "switch score notification on rule"
S867: "standard report switching score notification on rule"
S868: "switch score notification off rule"
S869: "standard report switching score notification off rule"
S870: "announce the pronoun meanings rule"
S871: "last specific action-processing rule"
S872: "Setting action variables for exiting"
S873: "Does the player mean going a nautical direction when the location is
nautical"
S874: "Before going a nautical direction when the location is not nautical"
S875: "Before going a planetbound direction when the location is nautical"
S876: "Instead of opening the crew lockers"
S877: "Before going through the sliding door"
S878: "After going through the sliding door"
S879: "Instead of asking Quin about "her headphones""
S880: "Instead of asking Quin about "her role""
S881: "Instead of asking Quin about "your mirror""
S882: "Instead of telling Quin about "you""
S883: "Instead of sleeping in the Dormatory"
S884: "position player in model world rule"
S885: "update chronological records rule"
S886: "seed random number generator rule"
S887: "update chronological records rule"
S888: "set pronouns from items from multiple object lists rule"
S889: "announce items from multiple object lists rule"
S890: "requested actions require persuasion rule"
S891: "descend to specific action-processing rule"
S892: "end action-processing in success rule"
S893: "work out details of specific action rule"
S894: "can't reach inside closed containers rule"
S895: "can't reach outside closed containers rule"
S896: "standard printing the plural name rule"
S897: "standard printing a number of something rule"
S898: "look around once light available rule"
S899: "standard respond to final question rule"
S900: "switch the story transcript on rule"
S901: "switch the story transcript off rule"
S902: "announce the story file version rule"
S903: "prefer abbreviated room descriptions rule"
S904: "standard report preferring abbreviated room descriptions rule"
S905: "prefer unabbreviated room descriptions rule"
S906: "standard report preferring unabbreviated room descriptions rule"
S907: "prefer sometimes abbreviated room descriptions rule"
S908: "standard report preferring sometimes abbreviated room descriptions rule"
S909: "switch score notification on rule"
S910: "standard report switching score notification on rule"
S911: "switch score notification off rule"
S912: "standard report switching score notification off rule"
S913: "announce the pronoun meanings rule"
S914: "pm"
S915: "am"
S916: "past"
S917: "to"
S918: "*** No such past tense condition ***
"
S919: "leading-through relation"
S920: "Leading-through relates one room (called the other side) to various
doors"
S921: "lock-fitting relation"
S922: "Lock-fitting relates one thing (called the matching key) to various
things"
S923: " "
S924: " The port side of the airlock corridor has the umbillical hatch, leading
to the ships docking port. The starboard airlock leads to the landing ramp.
There is a ladder against the aft wall leading up to the shuttle. A patch of
floor is marked off with emergency grid colorings and labeled "Escape Pod"."
S925: " doesn't reply."
S926: " here"
S927: " or "
S928: " you "
S929: ", "
S930: ","
S931: "."
S932: ": "
S933: ":"
S934: "> "
S935: ">"
S936: "?"
S937: "A long, narrow corridor leading from the airlocks to the engine room,
the aft corridor is alive with the sounds of the ship, from the hum of the core
to the subtle creaks and groans of the pipes and walls."
S938: "A long, narrow corridor with a door on each end, and ladders leading
down to the cargo hold."
S939: "A narrow chamber with 5 seats, one before an operation console."
S940: "A row of six lockers, one for each member of the crew. Your locker is
amongst them."
S941: "A thick pane of something you are assured is "much more advanced than
glass", tinted to accomdate the viewer, opens up to the magniicent view of
space. Thick, colorful nebula clouds, streaking comets, a marvelous tapestry of
stars... space is truely beautiful."
S942: "A wide locker with the name "Tobias" on a tarnished plate riveted to the
front."
S943: "Another tragedy averted by the quick work and diligence of the captain
of the Pelican. The universe is once again safe for... say... are you feeling
hungry?"
S944: "Between the dull lighting, cavernous ceiling and tall cliffs of secure
shelving, the cargo hold is an eerie place to be. The sounds of the ship seem
magnified in this room, with the occasional odd groan or whine or creak from
somewhere in the bowels of the ship. The presence of old fashioned metal cages
for the occasional bounty transfer doesn't help."
S945: "Captain"
S946: "Compass directions make no sense on board ship, but you can use fore,
aft, port or starboard instead."
S947: "Finally, you get a good look at your rugged, handsome vissage. Finally
you were ready to spend a few hours admiring the most handsome captain in the
universe."
S948: "In "
S949: "Katrina is coiled on her heated pad, basking in its warmth."
S950: "Katrina is, at first glance, a pink furred, red haired snowleopardess.
Busty, fluffy and surprisingly large, there is a certain... vacant nievety in
her gaze. Then you get a look at her lower body. Rather than legs, Katrina has
an increadibly long snake's body, fluffy and clouded like the rest of her fur."
S951: "Laundry, cleaning supplies, and a chemical shower."
S952: "Much smaller than the ships main hold, this hold seems designed for
smaller quantities of a volatile, fragile or even live cargo."
S953: "Nautical directions can only be used on board ship."
S954: "Oh tragedy upon tragedies, you seem to have misplaced your favourite
hand mirror! Surely there is a sufficiently reflective surface SOMEWHERE on
this ship!"
S955: "On "
S956: "QUIT"
S957: "Quin breathes a sigh and says "How should I know where you leave your
things? Me, of all people."."
S958: "Quin gives a big, toothy smile. "Aren't they great? Noise adjustment and
cancellation, upper registry sonar, frequency shifting, omni-directional
simulation, even sensory transferent. That means I can get "em to play audio
tones and frequences in place of things like colors or light. They're my
everything!"."
S959: "Quin is a cute bat girl with overgrown bangs covering her eyes, a
slender body and large, leathery wings in place of arms and hands. Her hips
broaden out below the membrane of wing, giving her an admirable set of hips and
thighs."
S960: "Quin is lounging peacefully at her console, tapping out a rhythm with
her thumbs. She seems to be listening to something peppy on her headphones."
S961: "Quin raises one leathery wing to massage her forehead. "Lemme stop
y'there. I am nowhere NEAR drunk enough to listen to your...", and she pauses,
giving a skeptical cough before saying ".. marvelous exploits... again."."
S962: "Quin's mop of hair leaves her eyes completely hidden, but you swear you
feel her raise a brow skeptically. "Uhm.. You're th'one who hired me boss.
"member? I'm your sensor and communications officer, or s'what you said. I keep
an ear out on the ships astro-sonar, scan for active com chatter, that sorta
thing."."
S963: "RESTART"
S964: "RESTORE a saved game"
S965: "The Engine Block of the ship features the ships core on display behind
protective polyfillament sheets. A large terminal displays statistics and
feedback on the core and engines operation and the surrounding area is a forest
of cables and pipes of all sizes. A hammoc is strung up in one corner. Find a
way to describe the core as looking like a lava lamp containing floating,
shifting masses of reactive plasma."
S966: "The bridge seats 4, including a Pilot and Co-Pilot console side by side,
a comms and sensor station, and of course the "captains seat", a raised
platform on which the captain has set their seat. Little more than a
hedonistically comfortable chair, there seems to be no actual operational
controls on it, and a vidscreen that can be lowered into place in front of it.
The canopy itself is open to space."
S967: "The door makes a soft hissing sound as it glides open to let you pass,
and glides closed behind you on the other side."
S968: "The lounge has a small kitchenette, a table with 7 chairs crowded around
it and a few methods of communal entertainment. 2 arcade cabinets, and a large
vidscreen."
S969: "The room is split between lines of lavatory stalls, a line of sinks
backed by a mirror, and a long wall dotted with showerheads. The room itself is
largely tiled with a vented false ceiling helping to ventilate steam and
moisture."
S970: "The sleeping quarters of the Pelican's crew, there are two bunks, a
beanbag chair and a heated pad for the various sleeping needs of everyone on
board. There is also a row of lockers, one for each crew member, and a tinted
window. The only visible door on the port wall leads to the Fore Corridor."
S971: "Tobias Cook"
S972: "UNDO the last command"
S973: "Welcome to the Pelican, a light freighter turned smuggling vessel by
you, the intrepid Cpt. Tobias Cook! You were totally an astronaval captain! You
have the outfit to prove it! This is more about learning how to make these, so
this game isn't terribly impressive. But, if you feel like talking to someone,
feel free to use "Talk To (NPC)". This will give you a brief rundown of things
you might be able to talk to them about."
S974: "With 3 seats and a good amount of cargo capacity for its size, the
shuttle is a supply vessel."
S975: "Would you like to "
S976: "You "
S977: "You can't help but yawn, and Katrina perks eagerly. "Ooh! Master is
sleepy!" she says eagerly, and before you make more than a confused grunt, soft
kitty fur is coiled all the way around you, constricting tight. Your head, far
from free, is pulled into a pair of truely suffocating pillows by strong arms.
As your vision fades, and everything starts to turn black, you hear nothing but
an intense purring."
S978: "You could ask Quin about her headphones, ask about her role, ask her
about your mirror, or tell her about you."
S979: "You give the door a sharp tug, but it does not budge. Katrina, watching
the entire time, giggles at your efforts and says "Silly. You started locking
your locker to keep Tori out of your booze, "member?"
S980: "You tug on the door of someone else's locker, but it won't open.
Katrina, watching you with childlike amusement, teases "That's not your locker
silly Master."."
S981: "Your prized hand mirror. A decorative silver frame, handle in the shape
of a bikini clad squirrel girl, and a polished surface. Classy."
S982: "also "
S983: "can "
S984: "s ID Card"
S985: "see "
S986: "see some suggestions for AMUSING things to do"
S987: "the"
S988: "default value of phrase nothing -> nothing"
S989: "This story file does not use a heap of managed memory."
S990: "write to"
S991: "read"
S992: "read"
S993: "send message"
S994: ": 'create' can have 0 to 3 parameters only **]"
S995: "objectloop broken because the object "
S996: " was moved while the loop passed through it **]"
S997: ", which is not a valid ZSCII character code for output **]"
S998: "tried to print (address) on something not the "
S999: "tried to print (string) on something not a "
S1000: "tried to print (object) on something not an "
S1001: "give" or test "has" or "hasnt" with a non-attribute on the object "
S1002: ", but it is longer than 2 bytes so you cannot use ".""
S1003: "recreate"
S1004: "destroy"
S1005: "copy"
S1006: "copy"
S1007: "<unknown attribute>"
S1008: "name"
S1009: "create"
S1010: "recreate"
S1011: "destroy"
S1012: "remaining"
S1013: "copy"
S1014: "call"
S1015: "print"
S1016: "print_to_array"
S1017: "absent"
S1018: "animate"
S1019: "clothing"
S1020: "concealed"
S1021: "container"
S1022: "door"
S1023: "edible"
S1024: "enterable"
S1025: "light"
S1026: "lockable"
S1027: "locked"
S1028: "moved"
S1029: "on"
S1030: "open"
S1031: "openable"
S1032: "scenery"
S1033: "static"
S1034: "supporter"
S1035: "switchable"
S1036: "talkable"
S1037: "transparent"
S1038: "visited"
S1039: "worn"
S1040: "male"
S1041: "female"
S1042: "neuter"
S1043: "pluralname"
S1044: "proper"
S1045: "remove_proper"
S1046: "privately_named"
S1047: "mentioned"
S1048: "pushable"
S1049: "mark_as_room"
S1050: "mark_as_thing"
S1051: "workflag"
S1052: "workflag2"
S1053: "add_to_scope"
S1054: "article"
S1055: "capacity"
S1056: "component_child"
S1057: "component_parent"
S1058: "component_sibling"
S1059: "description"
S1060: "door_dir"
S1061: "door_to"
S1062: "found_in"
S1063: "initial"
S1064: "list_together"
S1065: "map_region"
S1066: "parse_name"
S1067: "plural"
S1068: "regional_found_in"
S1069: "room_index"
S1070: "short_name"
S1071: "vector"
S1072: "with_key"
S1073: "KD_Count"
S1074: "IK1_Count"
S1075: "IK2_Count"
S1076: "IK4_Count"
S1077: "IK5_Count"
S1078: "IK6_Count"
S1079: "IK8_Count"
S1080: "IK1_link"
S1081: "IK2_link"
S1082: "IK5_link"
S1083: "IK6_link"
S1084: "IK8_link"
S1085: "articles"
S1086: "grammar"
S1087: "inside_description"
S1088: "short_name_indef"
S1089: "Quit"
S1090: "Restart"
S1091: "Restore"
S1092: "Save"
S1093: "Verify"
S1094: "ScriptOn"
S1095: "ScriptOff"
S1096: "Answer"
S1097: "Ask"
S1098: "Attack"
S1099: "Burn"
S1100: "Buy"
S1101: "Climb"
S1102: "Close"
S1103: "Consult"
S1104: "Cut"
S1105: "Disrobe"
S1106: "Drink"
S1107: "Drop"
S1108: "Eat"
S1109: "Enter"
S1110: "Examine"
S1111: "Exit"
S1112: "GetOff"
S1113: "Give"
S1114: "Go"
S1115: "Insert"
S1116: "Inv"
S1117: "Jump"
S1118: "Kiss"
S1119: "Listen"
S1120: "LMode1"
S1121: "LMode2"
S1122: "LMode3"
S1123: "Lock"
S1124: "Look"
S1125: "LookUnder"
S1126: "Mild"
S1127: "No"
S1128: "Yes"
S1129: "NotifyOff"
S1130: "NotifyOn"
S1131: "Open"
S1132: "Pronouns"
S1133: "Pull"
S1134: "Push"
S1135: "Turn"
S1136: "PushDir"
S1137: "PutOn"
S1138: "Remove"
S1139: "Rub"
S1140: "Score"
S1141: "Search"
S1142: "SetTo"
S1143: "Show"
S1144: "Sing"
S1145: "Sleep"
S1146: "Smell"
S1147: "Sorry"
S1148: "Squeeze"
S1149: "Strong"
S1150: "Swing"
S1151: "SwitchOff"
S1152: "SwitchOn"
S1153: "Take"
S1154: "Taste"
S1155: "Tell"
S1156: "Think"
S1157: "ThrowAt"
S1158: "Tie"
S1159: "Touch"
S1160: "Unlock"
S1161: "Wait"
S1162: "Wake"
S1163: "WakeOther"
S1164: "Wave"
S1165: "WaveHands"
S1166: "Wear"
S1167: "before"
S1168: "AskFor"
S1169: "MistakeAction"
S1170: "cap_short_name"
S1171: "IK3_Count"
S1172: "IK3_Link"
S1173: "IK4_Link"
S1174: "IK11_Count"
S1175: "IK11_Link"
S1176: "action_bitmap"
S1177: "p56_nautical"
S1178: "p54_recurring"
S1179: "p9_opposite"
S1180: "value_range"
S1181: "saved_short_name"
S1182: "Version"
S1183: "A80_talking_to"
S1184: "A81_using"
S1185: "ListMiscellany"
S1186: "Miscellany"
S1187: "PluralFound"
S1188: "TheSame"
S1189: "UUID_ARRAY"
S1190: "PowersOfTwo_TB"
S1191: "IncreasingPowersOfTwo_TB"
S1192: "TheEmptyTable"
S1193: "EMPTY_RULEBOOK"
S1194: "deferred_calling_list"
S1195: "blockv_stack"
S1196: "LocalParking"
S1197: "scene_started"
S1198: "scene_ended"
S1199: "scene_status"
S1200: "scene_endings"
S1201: "scene_latest_ending"
S1202: "multiple_object"
S1203: "parser_results"
S1204: "buffer"
S1205: "buffer2"
S1206: "buffer3"
S1207: "parse"
S1208: "parse2"
S1209: "LanguagePronouns"
S1210: "LanguageDescriptors"
S1211: "LanguageNumbers"
S1212: "LanguageArticles"
S1213: "LanguageGNAsToArticles"
S1214: "requisition_stack"
S1215: "pattern"
S1216: "pattern2"
S1217: "line_ttype"
S1218: "line_tdata"
S1219: "line_token"
S1220: "oops_workspace"
S1221: "match_list"
S1222: "match_classes"
S1223: "match_scores"
S1224: "alt_match_list"
S1225: "Protect_I7_Arrays"
S1226: "InitialSituation"
S1227: "property_metadata"
S1228: "attributed_property_offsets"
S1229: "valued_property_offsets"
S1230: "Activity_before_rulebooks"
S1231: "Activity_for_rulebooks"
S1232: "Activity_after_rulebooks"
S1233: "Activity_atb_rulebooks"
S1234: "KindHierarchy"
S1235: "Map_Storage"
S1236: "KOV_representatives"
S1237: "KOVP_39_P54"
S1238: "KOVP_39_P6"
S1239: "Global_Vars"
S1240: "T0_final_question_options"
S1241: "tab_0_0"
S1242: "tab_0_1"
S1243: "tab_0_2"
S1244: "tab_0_3"
S1245: "tab_0_4"
S1246: "T1_locale_priorities"
S1247: "tab_1_0"
S1248: "tab_1_1"
S1249: "TB_Blanks"
S1250: "TableOfTables"
S1251: "ActionData"
S1252: "ActionCoding"
S1253: "ActionHappened"
S1254: "TimedEventsTable"
S1255: "TimedEventTimesTable"
S1256: "rulebooks_array"
S1257: "B1_startup"
S1258: "B2_turn_sequence"
S1259: "B3_shutdown"
S1260: "B4_scene_changing"
S1261: "B5_when_play_begins"
S1262: "B6_when_play_ends"
S1263: "B7_when_scene_begins"
S1264: "B10_action_processing"
S1265: "B11_setting_action_variables"
S1266: "B12_specific_action_processi"
S1267: "B13_player_s_action_awarenes"
S1268: "B14_accessibility"
S1269: "B15_reaching_inside"
S1270: "B16_reaching_outside"
S1271: "B17_visibility"
S1272: "B20_before"
S1273: "B21_instead"
S1274: "B24_after"
S1275: "B26_does_the_player_mean"
S1276: "B29_before_printing_the_name"
S1277: "B30_for_printing_the_name"
S1278: "B33_for_printing_the_plural_"
S1279: "B36_for_printing_a_number"
S1280: "B42_for_listing_contents"
S1281: "B63_for_printing_the_announc"
S1282: "B84_for_deciding_whether_all"
S1283: "B96_for_supplying_a_missing_"
S1284: "B105_for_starting_the_virtua"
S1285: "B111_for_printing_the_player"
S1286: "B113_before_handling_the_fin"
S1287: "B114_for_handling_the_final_"
S1288: "B116_before_printing_the_loc"
S1289: "B117_for_printing_the_locale"
S1290: "B120_for_choosing_notable_lo"
S1291: "B123_for_printing_a_locale_p"
S1292: "B126_carry_out_taking_invent"
S1293: "B127_report_taking_inventory"
S1294: "B128_check_taking"
S1295: "B129_carry_out_taking"
S1296: "B130_report_taking"
S1297: "B131_check_removing_it_from"
S1298: "B134_check_dropping"
S1299: "B135_carry_out_dropping"
S1300: "B136_report_dropping"
S1301: "B137_check_putting_it_on"
S1302: "B138_carry_out_putting_it_on"
S1303: "B139_report_putting_it_on"
S1304: "B140_check_inserting_it_into"
S1305: "B141_carry_out_inserting_it_"
S1306: "B142_report_inserting_it_int"
S1307: "B143_check_eating"
S1308: "B144_carry_out_eating"
S1309: "B145_report_eating"
S1310: "B146_check_going"
S1311: "B147_carry_out_going"
S1312: "B148_report_going"
S1313: "B149_check_entering"
S1314: "B150_carry_out_entering"
S1315: "B151_report_entering"
S1316: "B152_check_exiting"
S1317: "B153_carry_out_exiting"
S1318: "B154_report_exiting"
S1319: "B155_check_getting_off"
S1320: "B156_carry_out_getting_off"
S1321: "B157_report_getting_off"
S1322: "B159_carry_out_looking"
S1323: "B160_report_looking"
S1324: "B162_carry_out_examining"
S1325: "B163_report_examining"
S1326: "B165_carry_out_looking_under"
S1327: "B166_report_looking_under"
S1328: "B167_check_searching"
S1329: "B169_report_searching"
S1330: "B172_report_consulting_it_ab"
S1331: "B173_check_locking_it_with"
S1332: "B174_carry_out_locking_it_wi"
S1333: "B175_report_locking_it_with"
S1334: "B176_check_unlocking_it_with"
S1335: "B177_carry_out_unlocking_it_"
S1336: "B178_report_unlocking_it_wit"
S1337: "B179_check_switching_on"
S1338: "B180_carry_out_switching_on"
S1339: "B181_report_switching_on"
S1340: "B182_check_switching_off"
S1341: "B183_carry_out_switching_off"
S1342: "B184_report_switching_off"
S1343: "B185_check_opening"
S1344: "B186_carry_out_opening"
S1345: "B187_report_opening"
S1346: "B188_check_closing"
S1347: "B189_carry_out_closing"
S1348: "B190_report_closing"
S1349: "B191_check_wearing"
S1350: "B192_carry_out_wearing"
S1351: "B193_report_wearing"
S1352: "B194_check_taking_off"
S1353: "B195_carry_out_taking_off"
S1354: "B196_report_taking_off"
S1355: "B197_check_giving_it_to"
S1356: "B198_carry_out_giving_it_to"
S1357: "B199_report_giving_it_to"
S1358: "B200_check_showing_it_to"
S1359: "B203_check_waking"
S1360: "B206_check_throwing_it_at"
S1361: "B209_check_attacking"
S1362: "B212_check_kissing"
S1363: "B217_report_answering_it_tha"
S1364: "B218_check_telling_it_about"
S1365: "B220_report_telling_it_about"
S1366: "B223_report_asking_it_about"
S1367: "B224_check_asking_it_for"
S1368: "B229_report_waiting"
S1369: "B232_report_touching"
S1370: "B233_check_waving"
S1371: "B235_report_waving"
S1372: "B236_check_pulling"
S1373: "B238_report_pulling"
S1374: "B239_check_pushing"
S1375: "B241_report_pushing"
S1376: "B242_check_turning"
S1377: "B244_report_turning"
S1378: "B245_check_pushing_it_to"
S1379: "B248_check_squeezing"
S1380: "B250_report_squeezing"
S1381: "B251_check_saying_yes"
S1382: "B254_check_saying_no"
S1383: "B257_check_burning"
S1384: "B260_check_waking_up"
S1385: "B263_check_thinking"
S1386: "B266_check_smelling"
S1387: "B269_check_listening_to"
S1388: "B272_check_tasting"
S1389: "B275_check_cutting"
S1390: "B278_check_jumping"
S1391: "B281_check_tying_it_to"
S1392: "B284_check_drinking"
S1393: "B287_check_saying_sorry"
S1394: "B290_check_swearing_obscenel"
S1395: "B293_check_swearing_mildly"
S1396: "B296_check_swinging"
S1397: "B299_check_rubbing"
S1398: "B302_check_setting_it_to"
S1399: "B305_check_waving_hands"
S1400: "B308_check_buying"
S1401: "B311_check_singing"
S1402: "B314_check_climbing"
S1403: "B317_check_sleeping"
S1404: "B321_carry_out_quitting_the_"
S1405: "B324_carry_out_saving_the_ga"
S1406: "B327_carry_out_restoring_the"
S1407: "B330_carry_out_restarting_th"
S1408: "B333_carry_out_verifying_the"
S1409: "B336_carry_out_switching_the"
S1410: "B339_carry_out_switching_the"
S1411: "B342_carry_out_requesting_th"
S1412: "B345_carry_out_requesting_th"
S1413: "B348_carry_out_preferring_ab"
S1414: "B349_report_preferring_abbre"
S1415: "B351_carry_out_preferring_un"
S1416: "B352_report_preferring_unabb"
S1417: "B354_carry_out_preferring_so"
S1418: "B355_report_preferring_somet"
S1419: "B357_carry_out_switching_sco"
S1420: "B358_report_switching_score_"
S1421: "B360_carry_out_switching_sco"
S1422: "B361_report_switching_score_"
S1423: "B363_carry_out_requesting_th"
S1424: "B365_check_talking_to"
S1425: "Details_of_Specific_Action"
S1426: "activities_stack"
S1427: "activity_parameters_stack"
S1428: "ResourceUsageFlags"
S1429: "TableOfExternalFiles"
S1430: "MStack"
S1431: "rulebook_var_creators"
S1432: "activity_var_creators"
S1433: "StorageForShortName"
S1434: "I7_SOO_SHUF"
S1435: "DoorRoutingViable"
S1436: "rulechange_stack"
S1437: "RulebookNames"
S1438: "CheckTableEntryIsBlank_LU"
S1439: "CheckTableEntryIsNonBlank_LU"
S1440: "PastActionsI6Routines"
S1441: "TimesActionHasHappened"
S1442: "TurnsActionHasBeenHappening"
S1443: "LastTurnActionHappenedOn"
S1444: "ActionCurrentlyHappeningFlag"
S1445: "past_chronological_record"
S1446: "present_chronological_record"
S1447: "Rel_Record_63"
S1448: "Rel_Record_65"
S1449: "ConstantListPointers"
S1450: "Runtime_Quotations_Displayed"
S1451: "KD0_phrase_nothing_to_nothing"
S1452: "Default_Value_0"
S1453: "KD1_values_based_rule_producin"
S1454: "KD2_activity"
S1455: "KD3_relation_of_rooms_to_doors"
S1456: "KD4_relation_of_things_to_thin"
S1457: "ResourceIDsOfFigures"
S1458: "ResourceIDsOfSounds"

[End of text]

[End of file]
